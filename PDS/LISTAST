LISTAST  TITLE 'List Allocation Status'
*---------------------------------------------------------------------*
*                                                                     *
*        Support EMail Address: zOS.JES2@Gmail.com                    *
*                                                                     *
*---------------------------------------------------------------------*

*---------------------------------------------------------------------*
*                |                                                    *
* L I S T A S T  |       TSO LISTA Status Command Processor           *
*                |                                                    *
*-----------------                                                    *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*        This Program Generates Data Similar To The LISTA Command     *
*                                                                     *
*        Syntax:                                                      *
*                                                                     *
*              LISTAST                                                *
*           or LISTAST DDNAME                                         *
*           or LISTAST PREFIX* [ NOMSGS ]                             *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* OUTPUT:                                                             *
*   DDNAME__  VOLSER   New  *DSNAME                                   *
*             Sysout   Shr   CLASS=X                                  *
*             Terminal Mod                                            *
*                      Old                                            *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*     History: #DD14219 - Aug 07,2014 -  Add Volser To Display        *
*                                                                     *
*---------------------------------------------------------------------*

         ACONTROL OPTABLE(ZS3)     Assembly OPTCDE Table
         SPLEVEL  SET=6            Specify OS/390 R2 macro format
         SYSSTATE ARCHLVL=2        Assembly requires z/Architecture
         SYSSTATE OSREL=ZOSV1R13   Assembly requires z/OS 1.13 & higher

LISTAST  #START ,                  Start Procedure                     *
               AMODE=31,           Execute In 31-Bit Addressing Mode   *
               APARS=,             No Need For APAR "Zap" Slots        *
               RMODE=ANY,          Execute In Any Residency Mode       *
               BASE=(R12),         Define Base Register(s)             *
               COPY=YES,           Insert CopyRight Notice             *
               WKDSECT=LISTWORK,LOC=BELOW,  WorkArea                   *
               REG1=R10,USING=(CPPL,R10),   Input Parameter List       *
               LEVEL=#V001R01                                  #DD14219

*---------------------------------------------------------------------*
*                                                                     *
*        Format Required Control Blocks                               *
*                                                                     *
*---------------------------------------------------------------------*

         LA    R1,WRKIOPL          Load IOPL Address
         USING IOPL,R1
         MVC   IOPLUPT,CPPLUPT     Insert UPT Address
         MVC   IOPLECT,CPPLECT     Insert ECT Address
         LA    R0,WRKECB           Load ECB Address
         ST    R0,IOPLECB

         LA    R1,WRKPPL           Load PPL Address
         USING PPL,R1
         MVC   PPLUPT,CPPLUPT      Insert UPT Address
         MVC   PPLECT,CPPLECT      Insert ECT Address
         LA    R0,WRKECB           Load ECB Address
         ST    R0,PPLECB
         MVC   PPLPCL,=A(PCL)      Insert PCL Address
         MVC   PPLCBUF,CPPLCBUF    Insert CBUF Address
         LA    R0,PDLADDR          Load PDL Answer Address
         ST    R0,PPLANS
         DROP  R1

*---------------------------------------------------------------------*
*                                                                     *
*        Pares The Command Buffer                                     *
*                                                                     *
*---------------------------------------------------------------------*

         XC    WRKECB,WRKECB
         CALLTSSR EP=IKJPARS,                                          *
               MF=(E,WRKPPL)
         LTR   R15,R15             Check Pares Return Code
         BZ    LSTA0100            B. If Successful

         #SETRC (R15)              Set Return Code

         ST    R15,GFRCODE         Insert Return Code
         MVC   GFCALLID,=AL2(GFPARSE)
         ST    R10,GFCPPLP         Insert CPPL Address
         LA    R0,WRKECB
         ST    R0,GFECBP           Insert ECB Address
         XC    WRKECB,WRKECB
         LA    R0,GFPARMS          Load IKJEFF19 PList Address
         ST    R0,PARMADDR
         LA    R1,PARMADDR         Load PList Pointer Address
         LINK  EP=IKJEFF19         Call General Fail Routine
         B     LSTA1500            Terminate

*---------------------------------------------------------------------*
*                                                                     *
*        Check If User Specified A DDName/DDName Prefix               *
*                                                                     *
*---------------------------------------------------------------------*

LSTA0100 DS    0H
         L     R1,PDLADDR          Load PDL Buffer Address
         USING IKJPARMD,R1
         SLR   R2,R2
         ICM   R2,3,PDDNAME+4      Load DDName Length
         BZ    LSTA0200            B. If Length Is Zero
         ICM   R3,15,PDDNAME       Load DDName Address
         BZ    LSTA0200            B. If Not Specified
         TM    PDDNAME+6,1         Check For "Generic" DDName
         BO    *+6                 B. If Yes
         BCTR  R2,0                Decrement Non-Generic Length
         MVC   DDNAME,BLANKS
         #EXEC R2,MVC,DDNAME(*-*),0(R3)
         OI    FLAGBYTE,$DDNAME    Indicate DDName Specified
         MVC   DDNAMEL,=AL2(8)     Set Default Length
         TM    PDDNAME+6,1         Check If DDName Is Generic
         BNO   LSTA0200            B. If Not
         OI    FLAGBYTE,$GENERIC   Indicate Generic DDName
         STH   R2,DDNAMEL          Save DDName Length
LSTA0200 DS    0H
         CLI   PNOMSG+1,1          Check For "NOMSG" Option
         BNE   LSTA0300            B. If Not
         OI    FLAGBYTE,$NOMSGS    Indicate No Messages To Be Issued
         DROP  R1

*---------------------------------------------------------------------*
*                                                                     *
*        Find The Start Of The DSAB Chain                             *
*                                                                     *
*---------------------------------------------------------------------*

LSTA0300 DS    0H
         USING PSA,0
         L     R8,PSATOLD          Load TCB Address
         USING TCB,R8
         L     R8,TCBJSCB          Load JSCB Address
         USING IEZJSCB,R8
         L     R8,JSCBACT          Load Active JSCB Address
         L     R8,JSCDSABQ         Load QDB Address
         USING QDB,R8
         ICM   R8,15,QDBFELMP      Load DSAB Address
         BZ    LSTA1500            B. If None Exists
         USING DSABID,R8

*---------------------------------------------------------------------*
*                                                                     *
*        Display Information On Each Allocated Dataset                *
*                                                                     *
*---------------------------------------------------------------------*

LSTA0400 DS    0H
         MVC   MSG1+4(MSG1LEN),BLANKS

         L     R7,DSABSIOT         Load SIOT Address
         USING INDMSIOT,R7

         TM    FLAGBYTE,$DDNAME    Check If User Specified A DDName
         BNO   LSTA0600            B. If Not
         TM    FLAGBYTE,$FOUND2    Check If Current DDName Matches
         BNO   LSTA0500            B. If Not
         CLC   SCTDDNAM,BLANKS     Check For Concatenation
         BE    LSTA0600            B. If Yes

LSTA0500 DS    0H
         LH    R1,DDNAMEL          Load Length Of DDName/Prefix
         #EXEC -R1,CLC,SCTDDNAM(*-*),DDNAME
         BNE   LSTA1300            B. If Not
         OI    FLAGBYTE,$FOUND1    Indicate DDName Has Been Found
         OI    FLAGBYTE,$FOUND2

LSTA0600 DS    0H
         MVC   MSG1I1,SCTDDNAM

         L     R2,DSABTIOT         Load TIOT Address
         USING TIOENTRY,R2
         MVC   MSG1I2(8),=CL8'Terminal'
         TM    TIOELINK,TIOTTERM   Check For "Terminal"
         BO    LSTA1100            B. If Yes
         MVC   MSG1I2(8),BLANKS
         MVC   MSG1I2,=CL6'Sysin'
         TM    TIOELINK,TIOESSDS   Check For "SubSystem Dataset"
         BZ    LSTA0700            B. If Not
         TM    TIOELINK,TIOESYOT   Check For SYSOUT Dataset
         BZ    LSTA1100            B. IF Not
         MVC   MSG1I2,=CL6'Sysout'
         MVC   MSG1I5,BLANKS
         MVC   MSG1I5(6),=C'Class='
         MVC   MSG1I5+6(1),SCTOUTPN
         B     LSTA1100            B. If SYSOUT DataSet
LSTA0700 DS    0H
         MVC   MSG1I2,=CL6'Dummy'
         TM    SCTSBYT1,SCTDUMMY   Check For "Dummy" File
         BO    LSTA1100            B. If Yes

         TM    TIOELINK,TIOTREM    Entry For A Remote Device (TCAM) ?
         BZ    LSTA0800            B. If Not
         L     R3,SJFCBPTR         Load JFCB Address
         USING INFMJFCB,R3
         MVC   MSG1I2,=CL6'Queue'
         MVC   MSG1I5,BLANKS
         MVC   MSG1I5(11),=C'TCAM Queue:'
         MVC   MSG1I5+12(8),JFCBDSNM
         B     LSTA1200

LSTA0800 DS    0H
         L     R3,SJFCBPTR         Load JFCB Address
         USING INFMJFCB,R3
         MVC   MSG1I5,BLANKS
         MVC   MSG1I5(44),JFCBDSNM Insert Dataset Name
         TM    JFCBELNM,X'BF'      Check If Member Name Exists
         BZ    LSTA0900            B. If Not
         TRT   MSG1I5(45),TRTABLE1 Find End Of DataSet Name
         MVI   0(R1),C'('          Insert Leading Bracket
         MVC   1(8,R1),JFCBELNM    Insert Member Name
         TRT   MSG1I5(55),TRTABLE1 Find End Of DataSet Name & Member
         MVI   0(R1),C')'          Insert Closing Bracket
LSTA0900 DS    0H
         MVC   MSG1I2,=CL6'VIO'
         TM    JFCFLGS1,JFCVRDS    Check For "VIO" Dataset
         BO    LSTA1000            B. If Yes
         MVC   MSG1I2,JFCBVOLS     Copy 1st Volume Serial

LSTA1000 DS    0H
         MVC   MSG1I3,=CL3'New'
         TM    JFCBFLG2,JFCMODNW   Check For "New/Mod" File
         BO    LSTA1100            B. If Yes
         MVC   MSG1I3,=CL3'Shr'
         TM    JFCBIND2,JFCSHARE   Check For "Shr" File
         BO    LSTA1100            B. If Yes
         MVC   MSG1I3,=CL3'New'
         TM    JFCBIND2,JFCNEW     Check For "New" File
         BO    LSTA1100            B. If Yes
         MVC   MSG1I3,=CL3'Mod'
         TM    JFCBIND2,JFCMOD     Check For "Mod" File
         BO    LSTA1100            B. If Yes
         MVC   MSG1I3,=CL3'Old'
         TM    JFCBIND2,JFCOLD     Check For "Old" File
         BO    LSTA1100            B. If Yes
         MVC   MSG1I3,BLANKS

LSTA1100 DS    0H
         MVI   MSG1I4,C' '
         TM    DSABFLG1,DSABPALC   Check For Permanent Allocation
         BO    LSTA1200            B. If Yes
         MVI   MSG1I4,C'*'

*---------------------------------------------------------------------*
*                                                                     *
*        Issue Message To Terminal                                    *
*                                                                     *
*---------------------------------------------------------------------*

LSTA1200 DS    0H
         TM    FLAGBYTE,$NOMSGS    Check For "NOMSG" Option
         BO    LSTA1400            B. If Yes
         SAM24 ,                   Enter 24 Bit Addressing Mode
         XC    WRKECB,WRKECB
         PUTLINE PARM=PUTLINEL,                                        *
               OUTPUT=(MSG1,TERM,SINGLE,DATA),                         *
               MF=(E,WRKIOPL)
         SAM31 ,                   Return To 31 Bit Addressing Mode
         B     LSTA1400            Continue
LSTA1300 DS    0H
         NI    FLAGBYTE,255-$FOUND2
LSTA1400 DS    0H
         ICM   R8,15,DSABFCHN      Load Next DSAB Address
         BNZ   LSTA0400            B. If Another Exists

*---------------------------------------------------------------------*
*                                                                     *
*        Terminate                                                    *
*                                                                     *
*---------------------------------------------------------------------*

LSTA1500 DS    0H
         TM    FLAGBYTE,$DDNAME    Check If User Specified A DDName
         BNO   LISTAXIT            B. If Not
         TM    FLAGBYTE,$FOUND1    Check If DDName Was Found
         BO    LISTAXIT            B. If Yes
         XC    WRKECB,WRKECB
         MVC   MSG2I1,DDNAME       Insert DDName Into Message
         TM    FLAGBYTE,$NOMSGS    Check For "NOMSG" Option
         BO    LSTA1600            B. If Yes
         SAM24 ,                   Enter 24 Bit Addressing Mode
         PUTLINE PARM=PUTLINEL,                                        *
               OUTPUT=(MSG2,TERM,SINGLE,DATA),                         *
               MF=(E,WRKIOPL)
         SAM31 ,                   Return To 31 Bit Addressing Mode

LSTA1600 DS    0H
         #SETRC 8                  Set Return Code

LISTAXIT #STOP ,                   Terminate

*---------------------------------------------------------------------*
*                                                                     *
*        DDName Validity Check - Check For "DDN*"                     *
*                                                                     *
*---------------------------------------------------------------------*

         PUSH  USING
VALDDNAM DS    0H
         STM   R14,R12,12(R13)     Save Caller's Registers
         XC    16(4,R13),16(R13)   Set Return Code To Zero
         LR    R12,R15             Setup Exit's Base Register
         USING VALDDNAM,R12
         L     R5,0(,R1)           Load PDE Address

         NI    6(R5),255-1         Turn Off "Asterisk" Flag
         L     R4,0(,R5)           Load DDName Address
         LH    R3,4(,R5)           Load DDName Length
         LA    R1,VALDDTAB         Load Translate Table Address
         #EXEC -R3,TRT,0(*-*,R4),0(R1)
         BZ    VALDEXIT            B. If No Asterisk Was Found
         OI    6(R5),1             Turn On "Asterisk" Flag
         SR    R1,R4               Re-Calculate Length Without Asterisk
         STH   R1,4(,R5)           Save New Length In PDE
VALDEXIT DS    0H                  R1 -> Storage Obtained
         LM    R14,R12,12(R13)     Restore Caller's Registers
         BR    R14                 Return To Caller

VALDDTAB DC    256X'00'
         ORG   VALDDTAB+C'*'
         DC    C'*'                Find The First Asterisk
         ORG   ,
         POP   USING

*---------------------------------------------------------------------*
*                                                                     *
*        Constants                                                    *
*                                                                     *
*---------------------------------------------------------------------*

BLANKS   DC    256C' '             Lots Of Blanks

MSG1     #MSG  '________   ______   ___  *_________+_________+_________*
               +_________+____(________) '
MSG1LEN  EQU   *-MSG1-4            Length Of Message Text Area
MSG1I1   EQU   MSG1+4+00,8         DDName Address & Length
MSG1I2   EQU   MSG1+4+11,6         Volser Address & Length
MSG1I3   EQU   MSG1+4+20,3         Disposition Address & Length
MSG1I4   EQU   MSG1+4+25,1         Temporary Allocation Flag
MSG1I5   EQU   MSG1+4+26,54        DataSet Name Address & Length

MSG2     #MSG  'IEC130I ________ DD STATEMENT MISSING'
MSG2I1   EQU   MSG2+4+08,8         Insert 1 Address & Offset

TRTABLE1 DC    256X'00'
         ORG   TRTABLE1+C' '
         DC    C' '                Find The 1st Blank
         ORG   ,

*---------------------------------------------------------------------*
*                                                                     *
*        Dynamic Work Area                                            *
*                                                                     *
*---------------------------------------------------------------------*

         #STARTWA ,
         IKJEFFGF GFDSECT=NO       IKJEFF19 Parameter List
DDNAME   DS    CL8                 Specified DDName
DDNAMEL  DS    H                   Specified DDName Length
FLAGBYTE DS    X                   General Purpose Flag Byte
$DDNAME  EQU   BIT0                DDName Has Been Specified
$FOUND1  EQU   BIT1                DDName Has Been Found
$FOUND2  EQU   BIT2                At Least 1 Line Has Been Printed
$GENERIC EQU   BIT3                DDName Is A Generic Prefix
$NOMSGS  EQU   BIT4                Don't Issue Messages
PARMADDR DS    F                   Register 1 Save Area
PDLADDR  DS    F                   PDL Pointer
PUTLINEL PUTLINE MF=L              PUTLINE Parameter List
WRKECB   DS    F                   ECB
WRKIOPL  DS    XL(IOPLLEN)         IOPL
WRKPPL   DS    XL(PPLLEN)          Parse Parameter List
         #STOPWA ,

*---------------------------------------------------------------------*
*                                                                     *
*        Parse Parameter List                                         *
*                                                                     *
*---------------------------------------------------------------------*

         PRINT NOGEN
PCL      IKJPARM ,

PDDNAME  IKJIDENT 'DDNAME',VALIDCK=VALDDNAM,                           *
               FIRST=ANY,OTHER=ANY,MAXLNTH=8,                          *
               HELP='Name Of Currently Allocated DDName'

PNOMSG   IKJKEYWD ,
         IKJNAME 'NOMSGS'

         IKJENDP ,
         PRINT GEN

         #DSECTS CVT,DSAB,JFCB,JSCB,PSA,PSCB,QDB,SIOT,TCB,TIOT,TSO
         END   ,
