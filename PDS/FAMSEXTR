FAMSEXTR #START BASE=(R12),AMODE=31,RMODE=24,COPY=YES
         USING PSA,0

*---------------------------------------------------------------------*
*        Initialize HEXDUMP parameters                                *
*---------------------------------------------------------------------*
         LOAD  EP=HEXDUMP,         Load the HEX dump formatter         *
               ERRET=FAMS0700
         ST    R0,WRKDUMP@         A("HEXDUMP" routine)

         LA    R0,WRKDUMPP+4       A("HEXDUMP" parameters)
         ST    R0,WRKDUMPP         A(Parameters pointer)
         MVI   WRKDUMPP+16,X'40'   Request relative Addresses
         CLC   DCBLRECL-IHADCB+SYSPRINT,=AL2(133)
         BL    FAMS0200            B. If output Record length < 133
         MVI   WRKDUMPP+16,X'20'   Indicate 130 byte DUMP output

FAMS0200 DS    0H
         LA    R0,WRKPRINT+8       A("HEXDUMP" output area)
         STCM  R0,7,WRKDUMPP+17
         MVC   WRKPRINT,BLANKS     Clear print area

         OPEN  (SYSIN,(INPUT),SYSPRINT,(OUTPUT))

*---------------------------------------------------------------------*
*        Locate the FAMS interface routine                            *
*---------------------------------------------------------------------*
         L     R15,FLCCVT          A(CVT)
         L     R15,CVTDFA-CVT(,R15) A(Data Facilities Area)
         CLC   2(2,R15),=X'3200'   Check for ancient OS
         BL    FAMS0700            B. If so
         L     R15,DFADFVAD-DFA(,R15)  DFP Vector table
         ICM   R15,15,DFVTFMS-DFVT(R15) FAMS Main Entry Point
         BZ    FAMS0700
         ST    R15,WRKFAMS@        Save IGWFAMS Routine Address

*---------------------------------------------------------------------*
*        Read next input record and ignore comments                   *
*---------------------------------------------------------------------*
FAMS0300 DS    0H
         GET   SYSIN               Get input record
         LR    R10,R1              A(Input record)

         CLI   0(R10),C'*'         Check for comment statement
         BE    FAMS0300            B. If yes
         OC    0(80,R10),BLANKS    Ensure Upper Case Data

         CLC   0(4,R10),=C'DSN='
         BNE   FAMS0390            B. If not a new DSN= statement
         MVC   WRKDSNAM,4(R10)     Copy new DSN=

         MVC   WRKPRINT+1(80),0(R10)
         PUT   SYSPRINT,WRKPRINT   Print current line
         B     FAMS0300            Get Next Record

*---------------------------------------------------------------------*
*        Format Parameter Lists and call IGWFAMS                      *
*---------------------------------------------------------------------*
FAMS0390 DS    0H
         TM    WRKDSNAM,X'BF'      Check for blanks/nulls
         BZ    FAMS0300            B. If so (loop till DSN=)

*        Re-initialize parameter list areas
         XC    FAMSPARM(FAMSPARML),FAMSPARM
         XC    FAMSFMH(FAMSFMHL),FAMSFMH
         #BLANK FAMSFMO,LEN=FAMSFMOL,PAD=X'00'
         XC    FAMSLIST,FAMSLIST
         XC    FAMPTRL(FAMPTRLL),FAMPTRL

*        Call  IGWFAMS    (IGWAMSP0)
         MVC   FAMSFMH(8),=CL8'IGWFMH'
         MVC   FAMSFMH+8(4),=A(FAMSFMHL)
         MVC   FAMSFMH+12(4),=X'01000000'  Version
         MVC   FAMSFMH+16(4),=X'00010068'  Getattr
         MVC   FAMSFMH+20(4),=X'00000400'
         LA    R0,WRKDSNL
         ST    R0,FAMSFMH+24
         MVC   FAMSFMH+60(4),=X'80000000'

         MVC   FAMSFMH+116(4),=A(1)
         LA    R0,FAMSLIST
         ST    R0,FAMSFMH+120

         ST    R10,FAMPTRL+8
         LA    R0,FAMPTRL
         ST    R0,FAMSLIST+0

         MVC   FAMSFMO(8),=CL8'IGWFMO'
         MVC   FAMSFMO+8(4),=A(FAMSFMOL)
         MVC   FAMSFMO+12(4),=X'01000000'  Version

*        CALL IGWFAMS
         LA    R1,FAMSPARM         A(Parameter list)
         LA    R0,FAMSFMH
         ST    R0,0(,R1)
         LA    R0,FAMSFMO
         ST    R0,4(,R1)
         L     R15,WRKFAMS@        A(IGWFAMS)
         BASSM R14,R15
         #SETRC (R15),FIELD=FAMSRC Save highest return code
         LTR   R15,R15             Check if call was successful
         BZ    FAMS0400            B. If so

*        Issue Error Message
         MVC   WRKMSG01+1(8),0(R10)
         L     R14,WRKFAMS@
         MVC   WRKMSG01+26(8),5(R14)
         STM   R15,R0,WRKDBL1      Save return & reason codes
         MVI   WRKMSG01+42,C''''
         UNPK  WRKMSG01+43(9),WRKDBL1(5)
         TR    WRKMSG01+43(8),WRKTABLE-C'0'
         MVI   WRKMSG01+51,C''''
         MVI   WRKMSG01+61,C''''
         UNPK  WRKMSG01+62(9),WRKDBL1+4(5)
         TR    WRKMSG01+62(8),WRKTABLE-C'0'
         MVI   WRKMSG01+70,C''''
         PUT   SYSPRINT,WRKMSG01
         B     FAMS0300

*---------------------------------------------------------------------*
*        Print the extracted information                              *
*---------------------------------------------------------------------*
FAMS0400 DS    0H
         ICM   R2,15,FAMPTRL+20    A(Returned data)
         BZ    FAMS0500
         ICM   R3,15,FAMPTRL+16    L(Returned data)
         BZ    FAMS0500
         BAL   R14,DUMPIT          Dump the returned data
         B     FAMS0300

*        No Data Returned
FAMS0500 DS    0H
         MVC   WRKPRINT+1(8),0(R10)  Insert extract field name
         PUT   SYSPRINT,WRKPRINT   Print current line
         MVC   WRKPRINT,BLANKS     Clear print area
         B     FAMS0300

*---------------------------------------------------------------------*
*        TERMINATE                                                    *
*---------------------------------------------------------------------*
FAMS0600 DS    0H
         ICM   R15,15,WRKDUMP@     A("HEXDUMP" routine)
         BZ    FAMSEXIT            B. If routine was not loaded
         DELETE EP=HEXDUMP         Delete the HEX dump formatter
         B     FAMSEXIT

FAMS0700 DS    0H
         #SETRC 99,FIELD=FAMSRC    Set "FATAL" error code

FAMSEXIT DS    0H
         CLOSE (SYSIN,,SYSPRINT)
         L     R15,FAMSRC          Load Return Code
         #STOP RC=(R15)            Terminate

*---------------------------------------------------------------------*
*        Print the field data in HEX                                  *
*---------------------------------------------------------------------*
DUMPIT   DS    0H
         STM   R0,R15,WRKSAVE      Save all registers
         ST    R2,WRKDUMPP+4       A(1ST byte to print)
         SHI   R3,1                Back up 1 byte
         AR    R3,R2               A(last byte to print)
         ST    R3,WRKDUMPP+8

         XC    WRKDUMPP+12(4),WRKDUMPP+12
         NI    WRKFLAG,255-WRK$NAME

DUMP0100 DS    0H
         LA    R1,WRKDUMPP         A(HEXDUMP parameter list pointer)
         ICM   R15,15,WRKDUMP@     A(HEXDUMP routine)
         BZ    DUMPEXIT            B. If routine was not loaded
         BALR  R14,R15             Format a line of data

         TM    WRKFLAG,WRK$NAME    Check if 1ST line has been printed
         BO    DUMP0200            B. If yes
         OI    WRKFLAG,WRK$NAME    Remember 1ST line has been printed
         MVC   WRKPRINT+1(8),0(R10)

DUMP0200 DS    0H
         PUT   SYSPRINT,WRKPRINT   Print current line
         MVC   WRKPRINT,BLANKS     Clear print area
         CLC   WRKDUMPP+4(4),WRKDUMPP+8
         BNH   DUMP0100            B. If more data to be printed

DUMPEXIT DS    0H
         LM    R0,R15,WRKSAVE      Restore all registers
         BR    R14                 Return to caller

*---------------------------------------------------------------------*
*        Work areas and constants                                     *
*---------------------------------------------------------------------*
         #EXEC ,                   Executed statements
         LTORG ,                   Literal pool

BLANKS   DC    256C' '             Lots of blanks
DCBEXIT  #DCBEXIT LRECL=133        DCB Open exit
DCBEXIT@ DC    X'85',AL3(DCBEXIT)  DCB Open exit address
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,                *
               MACRF=GL,EODAD=FAMS0600
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,RECFM=FBA,                     *
               MACRF=PM,EXLST=DCBEXIT@

FAMSRC   DC    F'0'                Return code

FAMSPARM DS    3F
FAMSPARML EQU  *-FAMSPARM
FAMSFMH  DS    0F,XL136
FAMSFMHL EQU   *-FAMSFMH
FAMSFMO  DS    0F,XL1104
FAMSFMOL EQU   *-FAMSFMO
FAMSLIST DS    F
FAMPTRL  DS    6F
FAMPTRLL EQU   *-FAMPTRL

WRKFAMS@ DS    A
WRKDBL1  DC    D'0'                Doubleword work area
WRKDSNL  DC    AL2(L'WRKDSNAM)
WRKDSNAM DC    CL44' '
WRKDUMP@ DC    A(*-*)              HEXDUMP ROUTINE ADDRESS
WRKDUMPP DC    A(*+4)              POINTER TO HEXDUMP PARAMETER LIST
         DS    A               +4  STARTING ADDRESS OF DUMP STORAGE
         DS    A               +8  LAST BYTE ADDRESS OF DUMP STORAGE
         DS    A               +12 RELATIVE ADDRESS (OPTIONAL)
         DS    X'40'           +16 DUMP OPTIONS (RELATIVE & 130 BYTES)
*              X'80'               - PRINT ABSOLUTE STORAGE ADDRESS
*              X'40'               - PRINT RELATIVE STORAGE ADDRESS
*              X'20'               - PRINT 130 BYTES PER LINE (ON)
*                                    PRINT  80 BYTES PER LINE (OFF)
         DS    AL3             +17 OUTPUT BUFFER ADDRESS
WRKFLAG  DC    X'00'              FLAG BYTE
WRK$ACB  EQU   BIT0               - PARM=CATACB WAS SPECIFIED
WRK$NAME EQU   BIT1               - NAME HAS BEEN DISPLAYED
WRKMSG01 DC    CL134' ________ - *** ERROR *** ________ - R15=X"_______*
               _" REASON=X"________"'
WRKPRINT DS    CL256               Print area
WRKSAVE  DC    18F'0'              Subroutine save area
WRKTABLE DC    C'0123456789ABCDEF' HEX Translate table
         #DSECTS CATLG,CVT,DCB,PSA
         IHADFA ,
         IHADFVT ,
         END   ,
