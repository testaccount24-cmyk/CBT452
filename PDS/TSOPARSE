TSOPARSE TITLE ' - "IKJPARS" / "IKJSCAN" SERVICE ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        Support Email Address: zOS.JES2@Gmail.com                    *
*                                                                     *
*---------------------------------------------------------------------*

         ACONTROL OPTABLE(ZS3)     ASSEMBLY OPTCDE TABLE
         SPLEVEL  SET=6            SPECIFY OS/390 R2 MACRO FORMAT
         SYSSTATE ARCHLVL=2        ASSEMBLY REQUIRES Z/ARCHITECTURE
         SYSSTATE OSREL=ZOSV1R13   ASSEMBLY REQUIRES Z/OS 1.13 & HIGHER

*---------------------------------------------------------------------*
*                                                                     *
*        "IKJPARS" / "IKJSCAN" SERVICE ROUTINE                        *
*                                                                     *
*---------------------------------------------------------------------*

TSOPARSE #START ,                  *** HOUSEKEEPING ***                *
               AMODE=CAP24,        EXECUTE IN 24-BIT ADDRESSING MODE   *
               BASE=(R12),         DEFINE BASE REGISTER(S)             *
               LOC=BELOW,          INDICATE 24-BIT WORKAREA            *
               PREFIX=PAR,         DEFINE MACRO LABEL PREFIX           *
               REG0=R0,            SAVE INPUT PARAMETER ADDRESS        *
               REG1=R6,            SAVE INPUT PARAMETER ADDRESS        *
               RMODE=24,           EXECUTE IN 24-BIT RESIDENCY MODE    *
               SP=0,               DEFINE WORKAREA SUBPOOL             *
               SPLEVEL=2,          INDICATE XA/ESA MACRO LEVEL SUPPORT *
               WKDSECT=PARSWRK     DEFINE WORKAREA NAME

         USING PSA,0
         USING PPL,R6

*---------------------------------------------------------------------*
*                                                                     *
*        PERFORM INITIALIZATION                                       *
*                                                                     *
*---------------------------------------------------------------------*

         STC   R0,FUNCTION         SAVE CALLER SPECIFIED FUNCTION CODE
         CLI   FUNCTION,0          CHECK FOR "IKJSCAN" FUNCTION
         BE    PARS0100            B. IF YES
         CLI   FUNCTION,4          CHECK FOR "IKJPARS" FUNCTION
         BE    PARS0100            B. IF YES
         EX    0,*                 ELSE. ABEND S0C3

PARS0100 DS    0H
         IPK   ,                   ACQUIRE CALLER'S PROTECT KEY
         STC   R2,OLDKEY           SAVE PROTECT KEY

*---------------------------------------------------------------------*
*                                                                     *
*        CHECK IF CALLER IS IN SUPERVISOR STATE OR APF AUTHORIZED     *
*                                                                     *
*---------------------------------------------------------------------*

         TESTAUTH STATE=YES,RBLEVEL=1
         LTR   R15,R15             CHECK IF ALREADY IN SUPERVISOR STATE
         BZ    PARS0200            B. IF YES

         TESTAUTH FCTN=1
         LTR   R15,R15             CHECK IF APF AUTHORIZED
         BNZ   PARS0300            B. IF NOT

         MODESET MODE=SUP          CHANGE TO SUPERVISOR STATE

         OI    WRKFLAG1,WRK$PROB   INDICATE "PROBLEM PROGRAM" STATE

PARS0200 DS    0H
         OI    WRKFLAG1,WRK$AUTH   INDICATE "AUTHORIZED"

*---------------------------------------------------------------------*
*                                                                     *
*        ACQUIRE MISSING CONTROL BLOCKS IN KEY SAME KEY AS PLIST      *
*                                                                     *
*---------------------------------------------------------------------*

PARS0300 DS    0H
         L     R4,PSATOLD          LOAD TCB  ADDRESS
         USING TCB,R4

         IVSK  R1,R6               LOAD CPPL/CSPL PLIST KEY
         SPKA  0(R1)               GET INTO APPROPRIATE KEY

*-------
*        ACQUIRE & INITIALIZE "UPT" IF NOT SUPPLIED
*-------

         ICM   R1,15,PPLUPT        CHECK IF "UPT" WAS SUPPLIED
         BNZ   PARS0400            B. IF YES
         GETMAIN RU,LV=UPTLNGTH,SP=0,LOC=BELOW
         XC    0(UPTLNGTH,R1),0(R1) CLEAR ACQUIRED STORAGE
         ST    R1,PPLUPT           SAVE ADDRESS IN CALLER'S PPL

PARS0400 DS    0H
         USING UPT,R1

         MVC   SAVEUPTS,UPTSWS     SAVE UPT SWITCHES
         MVI   UPTSWS,UPTNPRM+UPTNCOM+UPTMID+UPTWTP

         DROP  R1

*-------
*        ACQUIRE & INITIALIZE "ECT" IF NOT SUPPLIED
*-------

         ICM   R1,15,PPLECT        CHECK IF "ECT" WAS SUPPLIED
         BNZ   PARS0500            B. IF YES
         GETMAIN RU,LV=ECTLEN,SP=1,LOC=BELOW
         XC    0(ECTLEN,R1),0(R1)  CLEAR ACQUIRED STORAGE
         ST    R1,PPLECT           SAVE ADDRESS IN CALLER'S PPL

PARS0500 DS    0H
         USING ECT,R1

         MVC   SAVEECTS,ECTSWS     SAVE ECT SWITCHES
         MVI   ECTSWS,ECTNMAL+ECTNNOT+ECTBKGRD
         MVC   SAVEECT2,ECTSWS2    SAVE ECT SWITCHES
         MVI   ECTSWS2,ECTDEFCS
         DROP  R1

*-------
*        ACQUIRE & INITIALIZE "ECB" IF NOT SUPPLIED
*-------

         ICM   R0,15,PPLECB        CHECK IF "ECB" WAS SUPPLIED
         BNZ   PARS0600            B. IF YES
         GETMAIN RU,LV=4,SP=0,LOC=BELOW
         XC    0(4,R1),0(R1)       CLEAR ACQUIRED STORAGE
         ST    R1,PPLECB           SAVE ADDRESS IN CALLER'S PPL

*-------
*        ACQUIRE & INITIALIZE "CSPL FLAG" IF NOT SUPPLIED
*-------

PARS0600 DS    0H
         CLI   FUNCTION,4          CHECK FOR "IKJSCAN" FUNCTION
         BNE   PARS0800            B. IF NOT

         USING CSPL,R6

         ICM   R0,15,CSPLFLG       CHECK IF "FLAG WORD" WAS SUPPLIED
         BNZ   PARS0700            B. IF YES
         GETMAIN RU,LV=4,SP=1,LOC=BELOW
         XC    0(4,R1),0(R1)       CLEAR ACQUIRED STORAGE
         ST    R1,CSPLFLG          SAVE ADDRESS IN CALLER'S CSPL

*-------
*        ACQUIRE & INITIALIZE "CSOA" IF NOT SUPPLIED
*-------

PARS0700 DS    0H
         ICM   R0,15,CSPLOA        CHECK IF "OUPUT AREA" WAS SUPPLIED
         BNZ   PARS0800            B. IF YES
         GETMAIN RU,LV=CSOALEN,SP=1,LOC=BELOW
         XC    0(CSOALEN,R1),0(R1) CLEAR ACQUIRED STORAGE
         ST    R1,CSPLOA           SAVE ADDRESS IN CALLER'S CSPL

*-------
*        ACQUIRE & INITIALIZE "IOWA" IF NOT SUPPLIED
*-------

PARS0800 DS    0H
         L     R2,CSPLECT          LOAD ECT ADDRESS
         USING ECT,R2
         ICM   R1,15,ECTIOWA       CHECK IF "I/O WORKAREA" WAS SUPPLIED
         BNZ   PARS0900            B. IF YES

         GETMAIN RU,LV=IOSRLEN,SP=0,LOC=BELOW
         XC    0(IOSRLEN,R1),0(R1) CLEAR ACQUIRED STORAGE
         ST    R1,ECTIOWA          SAVE ADDRESS IN CALLER'S ECT

PARS0900 DS    0H
         LR    R2,R1               LOAD IOWA ADDRESS
         USING IOSRL,R2

*-------
*        ACQUIRE & INITIALIZE "STACK"
*-------

         ICM   R0,15,IOSTELM       CHECK IF "STACK ELEMENT" EXISTS
         BNZ   PARS1000            B. IF YES

         GETMAIN RU,LV=INSLEN,SP=0,LOC=BELOW
         XC    0(INSLEN,R1),0(R1)  CLEAR ACQUIRED STORAGE
         ST    R1,IOSTELM          SAVE ADDRESS IN CALLER'S IOWA

         DROP  R2

*---------------------------------------------------------------------*
*                                                                     *
*        ACQUIRE, INITIALIZE & ACTIVATE "SVC SCREEN" FOR TPUTS        *
*                                                                     *
*---------------------------------------------------------------------*

PARS1000 DS    0H
         TM    WRKFLAG1,WRK$AUTH   CHECK IF CALLER IS AUTHORIZED
         BNO   PARS1100            B. IF NOT

         SPKA  0                   GET INTO KEY ZERO

         GETMAIN RU,LV=268,SP=254,LOC=BELOW
         L     R0,=A(SCREEN)       LOAD SVC SCREEN ROUTINE ADDRESS
         ST    R0,0(,R1)           SAVE ADDRESS IN SVC SCREEN TABLE
         ST    R13,264(,R1)        SAVE WORKAREA ADDRESS
         MVC   4(4,R1),=X'C0000000'
         MVI   8(R1),X'80'         INSERT MASK TO ALLOW SVC
         MVC   9(255,R1),8(R1)
         MVI   8+93(R1),0          INSERT MAST TO INTERCEPT "TPUT"

         ST    R1,TCBSVCA2         SAVE SVC TABLE ADDRESS
         OI    TCBFLGS7,TCBSVCS    ACTIVATE THE SCREEN
         OI    TCBFLGS7,TCBSVCSP

         IC    R2,OLDKEY           LOAD CALLER'S PROTECT KEY
         SPKA  0(R2)               RETURN TO ORIGINAL PROTECT KEY

*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS THE INPUT BUFFER (CALL IKJSCAN OR IKJPARS)           *
*                                                                     *
*---------------------------------------------------------------------*

PARS1100 DS    0H
         LA    R15,CALLPARS        LOAD IKJPARS ROUTINE ADDRESS
         CLI   FUNCTION,0          CHECK FOR "PARSE" FUNCTION
         BE    PARS1200            B. IF YES
         LA    R15,CALLSCAN        LOAD IKJSCAN ROUTINE ADDRESS

PARS1200 DS    0H
         IC    R2,OLDKEY           LOAD CALLER'S PROTECT KEY
         SPKA  0(R2)               RETURN TO ORIGINAL PROTECT KEY

         SYNCH (15),RESTORE=YES,AMODE=24,MF=(E,SYNCHL)

         #SETRC ,                  SET RETURN CODE

*---------------------------------------------------------------------*
*                                                                     *
*        DEACTIVATE AND RELEASE THE "SVC SCREEN"                      *
*                                                                     *
*---------------------------------------------------------------------*

         TM    WRKFLAG1,WRK$AUTH   CHECK IF CALLER IS AUTHORIZED
         BNO   PARS1300            B. IF NOT

         SPKA  0                   GET INTO KEY ZERO
         NI    TCBFLGS7,FF-TCBSVCS DEACTIVATE THE SCREEN
         NI    TCBFLGS7,FF-TCBSVCSP

         L     R1,TCBSVCA2         LOAD SVC TABLE ADDRESS
         XC    TCBSVCA2,TCBSVCA2   CLEAR TABLE POINTER IN TCB

         FREEMAIN RU,LV=268,A=(R1),SP=254

         IC    R2,OLDKEY           LOAD CALLER'S PROTECT KEY
         SPKA  0(R2)               RETURN TO ORIGINAL PROTECT KEY

*---------------------------------------------------------------------*
*                                                                     *
*        RESTORE ORIGINAL CONTROL BLOCK FIELDS                        *
*                                                                     *
*---------------------------------------------------------------------*

*-------
*        RESTORE "UPT" SWITCHES
*-------

PARS1300 DS    0H
         L     R1,CSPLUPT          LOAD UPT ADDRESS
         USING UPT,R1

         MVC   UPTSWS,SAVEUPTS     RESTORE UPT SWITCHES

         DROP  R1

*-------
*        RESTORE "ECT" SWITCHES
*-------

         L     R1,CSPLECT          LOAD ECT ADDRESS
         USING ECT,R1

         MVC   ECTSWS,SAVEECTS     RESTORE ECT SWITCHES
         MVC   ECTSWS,SAVEECT2     RESTORE ECT SWITCHES

         DROP  R1

*---------------------------------------------------------------------*
*                                                                     *
*        TERMINATE                                                    *
*                                                                     *
*---------------------------------------------------------------------*

         TM    WRKFLAG1,WRK$PROB   CHECK IF CALLER WAS IN PROBLEM STATE
         BNO   PARS1400            B. IF NOT

         MODESET MODE=PROB         CHANGE BACK TO PROBLEM PROGRAM STATE

PARS1400 DS    0H
         IC    R2,OLDKEY           LOAD CALLER'S PROTECT KEY
         SPKA  0(R2)               RETURN TO ORIGINAL PROTECT KEY

         L     R1,WRKMSG1          LOAD 1ST MESSAGE ADDRESS
PARSEXIT #STOP R1=(R1)             RETURN TO CALLER

*---------------------------------------------------------------------*
*                                                                     *
*        TPUT SVC SCREEN SUBROUTINE                                   *
*                                                                     *
*---------------------------------------------------------------------*

         PUSH  USING
         DROP  R12

         USING CVT,R3
         USING TCB,R4
         USING RBBASIC,R5
         USING SCREEN,R6
         USING ASCB,R7
SCREEN   DS    0H
         L     R3,TCBSVCA2         LOAD SVC TABLE ADDRESS
         L     R13,264(,R3)        LOAD WORKAREA ADDRESS
         USING PARSWRK,R13

         ST    R14,SAVER14         SAVE RETURN ADDRESS
         STM   R0,R1,SAVER0        SAVE MESSAGE LENGTH & ADDRESS

         IC    R2,OLDKEY           LOAD CALLER'S PROTECT KEY
         SPKA  0(R2)               GET INTO CALLER'S KEY

         LH    R1,SAVER0+2         LOAD LENGTH OF MESSAGE
         LA    R1,8(,R1)           ADD CHAIN POINTER & RDW FIELDS
         GETMAIN RU,LV=(R1),SP=1,LOC=BELOW
         XC    0(8,R1),0(R1)       CLEAR HEADER SECTION
         LR    R3,R1

         SPKA  0                   RETURN TO KEY ZERO

         ICM   R0,15,WRKMSG1       CHECK IF THIS IS THE 1ST MESSAGE
         BNZ   SCREEN10            B. IF NOT
         ST    R3,WRKMSG1          SAVE ADDRESS OF 1ST MESSAGE
         B     SCREEN20

SCREEN10 DS    0H
         L     R2,WRKMSGS          LOAD PREVIOUS CHAIN POINTER ADDRESS
         ST    R3,0(,R2)           ADD NEW MESSAGE TO THE CHAIN

SCREEN20 DS    0H
         LA    R0,0(,R3)           LOAD CURRENT MESSAGE CHAIN POINTER
         ST    R0,WRKMSGS          SAVE FOR NEXT MESSAGE

         L     R1,SAVER1           LOAD CURRENT MESSAGE TEXT ADDRESS
         LH    R2,SAVER0+2         LOAD CURRENT MESSAGE TEXT LENGTH
         STH   R2,4(,R3)           SAVE MESSAGE LENGTH IN RDW
         BCTR  R2,0                DECREMENT FOR EXECUTE
         #EXEC R2,MVC,8(*-*,R3),0(R1)

         SLR   R15,R15             SET RETURN CODE
         L     R14,SAVER14         RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO SVC FLIH

         POP   USING

*---------------------------------------------------------------------*
*                                                                     *
*        IKJPARS LINKAGE ROUTINE                                      *
*                                                                     *
*---------------------------------------------------------------------*

         PUSH  USING
         DROP  R12

CALLPARS DS    0H
         LR    R12,R15             LOAD BASE REGISTER
         USING CALLPARS,R12

         #MODE 31
         CALLTSSR EP=IKJPARS,      CALL TSO PARSE ROUTINE              *
               MF=(E,(R6))
         #MODE 24
         SVC   3                   RETURN TO CALLER

         POP   USING

*---------------------------------------------------------------------*
*                                                                     *
*        IKJSCAN LINKAGE ROUTINE                                      *
*                                                                     *
*---------------------------------------------------------------------*

         PUSH  USING
         DROP  R12

CALLSCAN DS    0H
         LR    R12,R15             LOAD BASE REGISTER
         USING CALLSCAN,R12

         #MODE 31
         CALLTSSR EP=IKJSCAN,      CALL TSO SCAN ROUTINE               *
               MF=(E,(R6))
         #MODE 24
         SVC   3                   RETURN TO CALLER

         POP   USING

*---------------------------------------------------------------------*
*                                                                     *
*        CONSTANTS AND WORK AREA                                      *
*                                                                     *
*---------------------------------------------------------------------*

         #STARTWA ,
WRKFLAG1 DC    X'00'               FLAG BYTE #1
WRK$AUTH EQU   BIT0                - AUTHORIZED PROGRAM
WRK$PROB EQU   BIT1                - PROBLEM PROGRAM
FUNCTION DC    X'0'                FUNCTION CODE
OLDIOWA@ DC    A(*-*)              INITIAL IOWA ADDRESS
OLDKEY   DC    X'0'                CALLER'S PSW PROTECT KEY
SAVEECTS DC    XL(L'ECTSWS)'0'     SAVE AREA FOR ECTSWS
SAVEECT2 DC    XL(L'ECTSWS2)'0'    SAVE AREA FOR ECTSWS2
SAVER0   DC    F'0'                REGISTER  0 SAVE AREA
SAVER1   DC    F'0'                REGISTER  1 SAVE AREA
SAVER14  DC    F'0'                REGISTER 14 SAVE AREA
SAVEUPTS DC    XL(L'UPTSWS)'0'     SAVE AREA FOR UPTSWS
SYNCHL   SYNCH MF=L                SYNCH PARAMETER LIST
WRKMSGS  DC    A(*-*)              MESSAGE CHAIN WORD ADDRESS
WRKMSG1  DC    A(*-*)              ADDRESS OF 1ST MESSAGE
         #STOPWA ,

*---------------------------------------------------------------------*
*                                                                     *
*        DSECTS                                                       *
*                                                                     *
*---------------------------------------------------------------------*

         #IOSRL ,                  I/O SERVICE ROUTINE WORK AREA
IOSRLEN  EQU   *-IOSRL

         #INSTACK ,                STACK ELEMENT
INSLEN   EQU   *-INSTACK

         #DSECTS ASCB,CSOA,CSPL,CVT,ECT,PPL,PSA,RB,TCB,UPT
         END   ,
