SJF      TITLE '- SJFSAMP - Sample SJF Extract'
*---------------------------------------------------------------------*
*                 |                                                   *
* S J F S A M P   |          Example Of SJF Retrieval                 *
*                 |                                                   *
*---------------------------------------------------------------------*
*                                                                     *
*        This program is an example of what information can be        *
*        retrieved about the OUTPUT JCL statements and the OUTPUT=    *
*        keyword on the DD statement.                                 *
*        The keywords to be extracted (placed in SJREKEYW) can be     *
*        whatever is documented in the JCL manual for the OUTPUT      *
*        statement (or the right side of the IEFDOKEY macro).         *
*        If you are obtaining newer OUTPUT keywords such as PRTATTRS  *
*        or AFPPARMS which were added with z/OS 1.8 then they should  *
*        be placed at the end of the list if it is possible that      *
*        the retrieve may be performed on a level of z/OS less than   *
*        1.8.  If it is you will receive a REASON code of '201' (C9). *
*        All other keywords will be retrieved.                        *
*        SJF Reason codes are in the IEFSJRC macro.                   *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*        Attributes: Authorized / Rent                                *
*                                                                     *
*---------------------------------------------------------------------*

         ACONTROL OPTABLE(ZS3)     ASSEMBLY OPTCDE TABLE
         SPLEVEL  SET=6            SPECIFY OS/390 R2 MACRO FORMAT
         SYSSTATE ARCHLVL=2        ASSEMBLY REQUIRES Z/ARCHITECTURE
         SYSSTATE OSREL=ZOSV1R13   ASSEMBLY REQUIRES Z/OS 1.13 & HIGHER

SJFSAMP  #START ,                  Start Procedure                     *
               AMODE=CAP31,        Execute In 31-Bit Addressing Mode   *
               RMODE=ANY,          Execute In ANY Residency Mode       *
               BASE=(R12),         Define Base Register(s)             *
               COPY=YES,                                               *
               WKDSECT=SJFTWRK,    Define WorkArea Name                *
               LOC=BELOW,          Acquire Workarea Below The Line     *
               USING=(PSA,0,SJEXP,WRKSJFPL,SJREP,WRKSJFPL,SJRELIST,WRKL*
               IST),                                                   *
               LEVEL=*SAMPLE*      Maintenance Level

         MODESET MODE=SUP,KEY=ZERO   *** Authorize ***

         L     R3,=A(4096)         L(SJF Reply Area)
         GETMAIN RU,LV=(R3),SP=0,LOC=ANY
         ST    R1,WRKSJRE@         Save Reply Area Address
         STH   R3,WRKSJREL         Save Reply Area Length

         MVC   WTOPL(MODWTOL),MODWTO

*---------------------------------------------------------------------*
*                                                                     *
*        Obtain The JCL Definition Vector Table Name (JDVT)           *
*                                                                     *
*---------------------------------------------------------------------*
         XC    WRKSJFPL,WRKSJFPL
         MVC   SJEXID,=CL4'SJJD'   - Identifier
         MVI   SJEXVERS,SJEXCVER   - Version Number
         MVC   SJEXLEN,=AL2(SJEXLGTH) - Length
         MVC   SJEXVERB,=CL8'OUTPUT'  - Verb
         MVC   SJEXKEYW,=CL8'DEFAULT' - Keyword
         MVI   SJEXPARM,1             - Number Of SubParameters

         SJFREQ REQUEST=FINDJDVT,PARM=WRKSJFPL

         MVC   WRKJDVT,SJEXJDVT    Save JDVT Name (or Zeros)

*---------------------------------------------------------------------*
*                                                                     *
*        Check If A "Job Level" SWB Chain Exists                      *
*                                                                     *
*---------------------------------------------------------------------*
         L     R14,PSATOLD         A(TCB)
         USING TCB,R14
         L     R14,TCBTCT          A(TCT)
         USING SMFTCT,R14
         L     R10,TCTLCTAD        A(LCT)
         USING LCT,R10
         LA    R1,LCTJCTVA         A(JCT SVA)
         BAL   R14,SWAREQ          Convert SVA To Address
         LR    R8,R2               A(JCT)
         USING JCT,R8
         LA    R1,JCTJCTX          A(JCT Extention SVA)
         BAL   R14,SWAREQ          Convert SVA To Address
         USING JCTX,R2
         LA    R1,JCTXSWB+1        A(SWB Chain SVA)
         DROP  R2
         BAL   R14,SWAREQ          Convert SVA To Address
         LTR   R2,R2               Check If A SWB Chain Exists
         BZ    MAIN0200            B. If Not
         XC    WRKTOKN,WRKTOKN
         SH    R2,=AL2(16)         Back Up To Control Block Prefix
         ST    R2,WRKSWB@          Save JCT SWB Address

*---------------------------------------------------------------------*
*                                                                     *
*        Display The "Job" Output Statement Information               *
*                                                                     *
*---------------------------------------------------------------------*
         MVC   WTOTEXT,BLANKS
         MVC   WTOTEXT(2),=AL2(80)
         MVC   WTOTEXT+2(35),=C'*** Job Level OUTPUT Statements ***'
         WTO   TEXT=WTOTEXT,ROUTCDE=11,MF=(E,WTOPL)

MAIN0100 DS    0H
         MVC   WTOTEXT,BLANKS
         MVC   WTOTEXT(2),=AL2(80)
         MVC   WTOTEXT+2(27),=C'//________ OUTPUT Statement'
         L     R2,WRKSWB@          A(Current SWB)
         USING SWB-16,R2
         MVC   WTOTEXT+4(8),SWBVRBL
         DROP  R2
         WTO   TEXT=WTOTEXT,ROUTCDE=11,MF=(E,WTOPL)

         XC    WRKSJFPL,WRKSJFPL
         MVC   SJREID,=CL4'SJRE'   - Identifier
         MVI   SJREVERS,SJRECVER   - Version Number
         MVC   SJRELEN,=AL2(SJRELGTH)
         MVC   SJREJDVT,WRKJDVT    - Name Of JDVT
         MVC   SJRETOKN,WRKTOKN    - Token (JCTSWB Address)
         MVC   SJREAREA,WRKSJRE@   - Storage Area Address
         MVC   SJRESIZE,WRKSJREL   - Size Of Storage Area
         MVC   SJRENKWD,=AL2(4)    - Number Of Keywords Passed
         LA    R0,WRKLIST
         ST    R0,SJREKWDL         - Keyword List Address

         MVC   SJREKEYW+00*SJREKLEN,=CL8'BUILDING'
         MVC   SJREKEYW+01*SJREKLEN,=CL8'DEPT'
         MVC   SJREKEYW+02*SJREKLEN,=CL8'TITLE'
         MVC   SJREKEYW+03*SJREKLEN,=CL8'DEFAULT'

         SJFREQ REQUEST=RETRIEVE,PARM=WRKSJFPL

         L     R0,SJREREAS         Load Reason Code
         LTR   R15,R15             Check Return Code
         BZ    *+8                 B. If Successful
         EX    0,*                 Else. Abend S0C3

         BAL   R14,DISPTU          Display Returned Text Units

*-------
*        Check If Another SWB Exists In The Chain
*-------
         L     R2,WRKSWB@          A(Current SWB)
         USING SWB-16,R2
         LA    R1,SWBCHNXT+1       A(Next SWB In Chain)
         DROP  R2
         BAL   R14,SWAREQ          Convert SVA To Address
         LTR   R2,R2               Check If Another SWB Exists
         BZ    MAIN0200            B. If Not
         XC    WRKTOKN,WRKTOKN
         SH    R2,=AL2(16)         Back Up To Control Block Prefix
         ST    R2,WRKSWB@          Save SWB Address
         B     MAIN0100            Process Next SWB

*---------------------------------------------------------------------*
*                                                                     *
*        Display The "Step" OUTPUT Statement Information              *
*                                                                     *
*---------------------------------------------------------------------*
MAIN0200 DS    0H
         LA    R1,JCTSSTR          A(1st SCT SVA)

MAIN0300 DS    0H
         BAL   R14,SWAREQ          Convert SVA To Address
         LTR   R7,R2               Check If SCT Exists
         BZ    RETURN              B. If End Of Job
         USING SCT,R7

         LA    R1,SCTSWB+1         A(Step's SWB Chain SVA)
         BAL   R14,SWAREQ          Convert SVA To Address
         LTR   R2,R2               Check If SWB Chain Exists
         BZ    MAIN0500            B. If Not
         XC    WRKTOKN,WRKTOKN
         SH    R2,=AL2(16)         Back Up To Control Block Prefix
         ST    R2,WRKSWB@          Save SWB Address

         MVC   WTOTEXT,BLANKS
         MVC   WTOTEXT(2),=AL2(80)
         MVC   WTOTEXT+2(34),=C'*** STEP ___ OUTPUT Statements ***'
         SLR   R0,R0
         IC    R0,SCTSNUMB         Load Step Number
         CVD   R0,WRKDBL
         OI    WRKDBL+7,X'0F'
         UNPK  WTOTEXT+11(3),WRKDBL
         WTO   TEXT=WTOTEXT,ROUTCDE=11,MF=(E,WTOPL)

MAIN0400 DS    0H
         MVC   WTOTEXT,BLANKS
         MVC   WTOTEXT(2),=AL2(80)
         MVC   WTOTEXT+2(27),=C'//________ OUTPUT Statement'
         L     R2,WRKSWB@          A(Current SWB)
         USING SWB-16,R2
         MVC   WTOTEXT+4(8),SWBVRBL
         DROP  R2
         WTO   TEXT=WTOTEXT,ROUTCDE=11,MF=(E,WTOPL)

         XC    WRKSJFPL,WRKSJFPL
         MVC   SJREID,=CL4'SJRE'   - Identifier
         MVI   SJREVERS,SJRECVER   - Version Number
         MVC   SJRELEN,=AL2(SJRELGTH)
         MVC   SJREJDVT,WRKJDVT    - Name Of JDVT
         MVC   SJRETOKN,WRKTOKN    - Token (SCTSWB)
         MVC   SJREAREA,WRKSJRE@   - Storage Area Address
         MVC   SJRESIZE,WRKSJREL   - Size Of Storage Area
         MVC   SJRENKWD,=AL2(4)    - Number Of Keywords Passed
         LA    R0,WRKLIST
         ST    R0,SJREKWDL         - Keyword List Address

         MVC   SJREKEYW+00*SJREKLEN,=CL8'BUILDING'
         MVC   SJREKEYW+01*SJREKLEN,=CL8'DEPT'
         MVC   SJREKEYW+02*SJREKLEN,=CL8'TITLE'
         MVC   SJREKEYW+03*SJREKLEN,=CL8'DEFAULT'

         SJFREQ REQUEST=RETRIEVE,PARM=WRKSJFPL

         L     R0,SJREREAS         Load Reason Code
         LTR   R15,R15             Check Return Code
         BZ    *+8                 B. If Successful
         EX    0,*                 Else. Abend S0C3

         BAL   R14,DISPTU          Display Returned Text Units

*-------
*        Check If Another SWB Exists In The Chain
*-------
         L     R2,WRKSWB@          A(Current SWB)
         USING SWB-16,R2
         LA    R1,SWBCHNXT+1       A(Next SWB In Chain)
         DROP  R2
         BAL   R14,SWAREQ          Convert SVA To Address
         LTR   R2,R2               Check If Another SWB Exists
         BZ    MAIN0500            B. If Not
         XC    WRKTOKN,WRKTOKN
         SH    R2,=AL2(16)         Back Up To Control Block Prefix
         ST    R2,WRKSWB@          Save SWB Address
         B     MAIN0400            Process Next SWB

*---------------------------------------------------------------------*
*                                                                     *
*        Display The "DD" OUTPUT= Keyword Information                 *
*                                                                     *
*---------------------------------------------------------------------*
MAIN0500 DS    0H
         LA    R1,SCTFSIOT         A(1st SIOT SVA)

MAIN0600 DS    0H
         BAL   R14,SWAREQ          Convert SVA To Address
         LTR   R6,R2               Check If SIOT Exists
         BZ    MAIN0900            B. If Not

         USING SIOT,R6
         TM    SCTSBYT3,SCTSYSOU   Is This A SYSOUT= Statement
         BNO   MAIN0800            B. If Not

         LA    R1,SIOTSWB+1        A(DD's SWB Chain SVA)
         BAL   R14,SWAREQ          Convert SVA To Address
         LTR   R2,R2               Check If SWB Chain Exists
         BZ    MAIN0800            B. If Not
         XC    WRKTOKN,WRKTOKN
         SH    R2,=AL2(16)         Back Up To Control Block Prefix
         ST    R2,WRKSWB@          Save SWB Address

         XC    WRKSJFPL,WRKSJFPL
         MVC   SJREID,=CL4'SJRE'   - Identifier
         MVI   SJREVERS,SJRECVER   - Version Number
         MVC   SJRELEN,=AL2(SJRELGTH)
         MVC   SJREJDVT,WRKJDVT    - Name Of JDVT
         MVC   SJRETOKN,WRKTOKN    - Token (SIOTSWB)
         MVC   SJREAREA,WRKSJRE@   - Storage Area Address
         MVC   SJRESIZE,WRKSJREL   - Size Of Storage Area
         MVC   SJRENKWD,=AL2(1)    - Number Of Keywords Passed
         LA    R0,WRKLIST
         ST    R0,SJREKWDL         - Keyword List Address

         MVC   SJREKEYW+00*SJREKLEN,=CL8'OUTPUT'

         SJFREQ REQUEST=RETRIEVE,PARM=WRKSJFPL

         L     R0,SJREREAS         Load Reason Code
         LTR   R15,R15             Check Return Code
         BZ    *+8                 B. If Successful
         EX    0,*                 Else. Abend S0C3

         ICM   R1,15,SJRETPAD+00*SJREKLEN   A(OUTPUT= Pointer)
         BZ    MAIN0800
         L     R5,0(,R1)           A(OUTPUT= Text Unit)
         USING S99TUNIT,R5
         LH    R3,S99TUNUM         #(OUTPUT= Operands)
MAIN0700 DS    0H
         LH    R2,S99TULNG         L(OUTPUT= Operand)
         LA    R1,S99TUPAR         A(OUTPUT= Operand)
         MVC   WTOTEXT,BLANKS
         MVC   WTOTEXT(2),=AL2(80)
         MVC   WTOTEXT+2(37),=C'Statement ___ DD SYSOUT=(,),OUTPUT=*.'
         #EXEC -R2,MVC,WTOTEXT+39(*-*),0(R1)
         AHI   R2,1                Increment Operand Length
         ICM   R0,15,SIOTSTMT      Load DD Statement Number
         CVD   R0,WRKDBL
         OI    WRKDBL+7,X'0F'
         UNPK  WTOTEXT+12(3),WRKDBL
         WTO   TEXT=WTOTEXT,ROUTCDE=11,MF=(E,WTOPL)

         LA    R5,2(R2,R5)         A(Next OUTPUT= Operand)
         BCT   R3,MAIN0700
         DROP  R5

MAIN0800 DS    0H
         LA    R1,SCTPSIOT         A(Next SIOT SVA)
         B     MAIN0600

MAIN0900 DS    0H
         LA    R1,SCTANSCT         A(Next SCT SVA)
         B     MAIN0300

RETURN   DS    0H
         MODESET MODE=PROB,KEY=NZERO *** De-Authorize ***

         #STOP ,                   Terminate

*------------------------------------------------------------------*
*                                                                  *
*        SVA To Address Conversion Routine                         *
*                                                                  *
*        Input:                                                    *
*            R1 => 3 Byte SVA                                      *
*                                                                  *
*        Output:                                                   *
*            R2 = Converted Address                                *
*           R15 = SWAREQ Return Code                               *
*                                                                  *
*------------------------------------------------------------------*
SWAREQ   DS    0H
         STM   R0,R14,WRKSWASV     Save All Registers
         SLR   R2,R2
         ICM   R2,7,0(R1)          Load SVA
         BZ    SWAREXIT            B. If Zeros

         XC    WRKEPA@(L'SWAEPA+4),WRKEPA@
         LA    R0,WRKEPA@+4
         ST    R0,WRKEPA@
         STCM  R2,7,SWVA-ZB505+WRKEPA@+4
         SWAREQ FCODE=RL,EPA=WRKEPA@,                                  *
               MF=(E,WRKSWAPL)
         ICM   R2,15,SWBLKPTR-ZB505+WRKEPA@+4
SWAREXIT DS    0H
         ST    R2,WRKSWASV+8       Return Control Block Address (R2)
         LM    R0,R14,WRKSWASV     Restore All Registers
         BR    R14                 Return To Caller

*------------------------------------------------------------------*
*                                                                  *
*        Display Extracted Text Unit Information                   *
*                                                                  *
*        This Subroutine Can Be Expanded To Display Additional     *
*        OUTPUT Statement Keywords/Operands.                       *
*                                                                  *
*------------------------------------------------------------------*

DISPTU   ds    0h
         STM   R0,R15,WRKDISPS     Save All Registers

*-------
*        Process The "BUILDING=" Keyword
*-------
         ICM   R1,15,SJRETPAD+00*SJREKLEN   A(BUILDING= Pointer)
         BNZ   DISP0100
         WTO   'NO BUILDING= FOUND',ROUTCDE=11
         B     DISP0200
DISP0100 DS    0H
         L     R5,0(,R1)           A(BUILDING= Text Unit)
         USING S99TUNIT,R5
         LH    R2,S99TULNG         L(BUILDING= Operand)
         LA    R1,S99TUPAR         A(BUILDING= Operand)
         MVC   WTOTEXT,BLANKS
         MVC   WTOTEXT(2),=AL2(80)
         MVC   WTOTEXT+2(9),=C'BUILDING='
         #EXEC -R2,MVC,WTOTEXT+11(*-*),0(R1)
         WTO   TEXT=WTOTEXT,ROUTCDE=11,MF=(E,WTOPL)
         DROP  R5

*-------
*        Process The "DEPT=" Keyword
*-------
DISP0200 DS    0H
         ICM   R1,15,SJRETPAD+01*SJREKLEN   A(DEPT= Pointer)
         BNZ   DISP0300
         WTO   'NO DEPT= FOUND',ROUTCDE=11
         B     DISP0400
DISP0300 DS    0H
         L     R5,0(,R1)           A(DEPT= Text Unit)
         USING S99TUNIT,R5
         LH    R2,S99TULNG         L(DEPT= Operand)
         LA    R1,S99TUPAR         A(DEPT= Operand)
         MVC   WTOTEXT,BLANKS
         MVC   WTOTEXT(2),=AL2(80)
         MVC   WTOTEXT+2(5),=C'DEPT='
         #EXEC -R2,MVC,WTOTEXT+7(*-*),0(R1)
         WTO   TEXT=WTOTEXT,ROUTCDE=11,MF=(E,WTOPL)
         DROP  R5

*-------
*        Process The "TITLE=" Keyword
*-------
DISP0400 DS    0H
         ICM   R1,15,SJRETPAD+02*SJREKLEN   A(TITLE= Pointer)
         BNZ   DISP0500
         WTO   'NO TITLE= FOUND',ROUTCDE=11
         B     DISP0600
DISP0500 DS    0H
         L     R5,0(,R1)           A(TITLE= Text Unit)
         USING S99TUNIT,R5
         LH    R2,S99TULNG         L(TITLE= Operand)
         LA    R1,S99TUPAR         A(TITLE= Operand)
         MVC   WTOTEXT,BLANKS
         MVC   WTOTEXT(2),=AL2(80)
         MVC   WTOTEXT+2(6),=C'TITLE='
         #EXEC -R2,MVC,WTOTEXT+8(*-*),0(R1)
         WTO   TEXT=WTOTEXT,ROUTCDE=11,MF=(E,WTOPL)
         DROP  R5

*-------
*        Process The "DEFAULT=" Keyword
*-------
DISP0600 DS    0H
         MVC   WTOTEXT,BLANKS
         MVC   WTOTEXT(2),=AL2(80)
         MVC   WTOTEXT+2(10),=C'DEFAULT=NO'

         ICM   R1,15,SJRETPAD+03*SJREKLEN   A(DEFAULT= Pointer)
         BZ    DISP0700
         L     R5,0(,R1)           A(DEFAULT= Text Unit)
         USING S99TUNIT,R5
         CLI   S99TUPAR,X'40'      DEFAULT=YES (X'40'=Yes X'80'=No)
         BNE   DISP0700            B. If Not
         DROP  R5
         MVC   WTOTEXT+10(3),=C'YES'
DISP0700 DS    0H
         WTO   TEXT=WTOTEXT,ROUTCDE=11,MF=(E,WTOPL)

         LM    R0,R15,WRKDISPS     Restore All Registers
         BR    R14                 Return To Caller

*------------------------------------------------------------------*
*                                                                  *
*        CONSTANTS AND WORK AREA                                   *
*                                                                  *
*------------------------------------------------------------------*

BLANKS   DC    82C' '
MODWTO   WTO   TEXT=*-*,ROUTCDE=11,MF=L
MODWTOL  EQU   *-MODWTO

         #STARTWA ,
WRKDBL   DS    D                   Decimal Conversion Area
SJFPTR   DS    F                   A(WRKSJFPL)
WRKSWAPL SWAREQ MF=L               SWAREQ Parameter List
WRKJDVT  DS    CL8                 JCL Definition Vector Table Name
         DS    0D
WRKSJFPL DS    XL256               SJF Request Parameter List
WRKTOKN  DS    D                   SJF Request Token
         ORG   WRKTOKN
WRKSWB@  DS    F                   Current SWB Address
         ORG   ,
WRKEPA@  DS    A,XL(L'SWAEPA)      SWAREQ Work Area
WRKSWASV DS    16F                 SWAREQ SubRoutine Save Area
WRKDISPS DS    16F                 DISPTU SubRoutine Save Area
WRKSJRE@ DS    A                   Reply Buffer Address
WRKSJREL DS    H                   Reply Buffer Length
WRKLIST  DS    0D,XL(10*SJREKLEN)  Request Keyword List
WTOPL    DS    0F,CL(MODWTOL)      WTO Parameter List
WTOTEXT  DS    CL82                WTO Text
         #STOPWA ,

*------------------------------------------------------------------*
*                                                                  *
*        DSECTS                                                    *
*                                                                  *
*------------------------------------------------------------------*
         #DSECTS CVT,JESCT,PSA,TCB,TCT,LCT,JCT,JCTX,SWB,SCT,SIOT,ALLOC,*
               ZB505

         IEFSJEXP ,                SJF Extract Parameter List
         IEFSJREP ,                SJF Retrieve Parameter List
         IEFSJRC ,                 SJF Reason Codes

         END   ,
