LDS      TITLE   'LDS - TSO "LISTDS" + "LSPACE" REPLACEMENT COMMAND'
*---------------------------------------------------------------------*
*                                                                     *
*        Support Email Address: zOS.JES2@Gmail.com                    *
*                                                                     *
*---------------------------------------------------------------------*

***********************************************************************
**                                                                    *
**   FUNCTION-                                                        *
**      THE LDS COMMAND DISPLAYS BASIC ATTRIBUTES OF USER SPECIFIED   *
**     DATASETS, EITHER CATALOGUED OR UNCATALOGUED.                   *
**                                                                    *
**   SYNTAX-                                                          *
**      LDS 'DSLIST' SPACE DCB MEMBERS FROM(MEMBER) TO(MEMBER) LOCATE *
**                   VOL(VOLSER LIST)                                 *
**                                                                    *
**      REQUIRED- 'DSLIST'                                            *
**      DEFAULTS- NONE                                                *
**                                                                    *
**   OPERANDS                                                         *
**      'DSLIST'  - A LIST OF ONE OR MORE DSNAMES CONFORMING          *
**                  TO TSO DATASET NAMING CONVENTIONS, FOR            *
**                  WHICH THE INFORMATION IS REQUESTED. IF A          *
**                  DATASET IS NOT CATALOGUED, THE USER IS            *
**                  PROMPTED FOR A VOLUME/SERIAL NUMBER.              *
**                                                                    *
**      DCB       - THE FOLLOWING DCB ATTRIBUTES ARE LISTED.          *
**                    .DSORG                                          *
**                    .RECFM                                          *
**                    .LRECL                                          *
**                    .BLKSIZE                                        *
**                    .OPTCD                                          *
**                    .KEYLEN                                         *
**                    .RKP                                            *
**                    .CREATE DATE                                    *
**                    .EXPIRY DATE                                    *
**                    .DATE LAST REFERENCED                           *
**                                                                    *
**      SPACE     - THE FOLLOWING SPACE PARAMETERS ARE LISTED.        *
**                    .TRACKS ALLOCATED                               *
**                    .TRACKS USED                                    *
**                    .NUMBER OF EXTENTS                              *
**                    .SECONDARY ALLOCATION                           *
**                                                                    *
**      MEMBERS   - MEMBER AND ALIAS NAMES OF PARTITIONED             *
**                  DATASETS ARE DISPLAY. ALIASES ARE FLAGGED         *
**                  WITH AN ASTERISK(*). THE NUMBER OF                *
**                  DIRECTORY BLOCKS USED AND NOT USED ARE            *
**                  ALSO DISPLAYED.                                   *
**                                                                    *
**                - A MASK MAY BE ENTERED WITH THE MEMBERS PARAMETER  *
**                  TO CONTROL WHICH MEMBER NAMES WILL BE DISPLAYED.  *
**                - A ? FOLLOWED BY 1 OR MORE CHARACTERS, INDICATES   *
**                  THAT THE MEMBER NAME MUST END WITH THE CHARACTERS *
**                  FOLLOWING THE ?.                                  *
**                - AN * IS A PLACE HOLDER IN THE MASK. THE CORRES-   *
**                  PONDING POSITION IN THE MEMBER NAME MAY CONTAIN   *
**                  ANY NON-BLANK CHARACTER.                          *
**                                                                    *
**      ALL       - THIS IS EQUIVALENT TO SPECIFYING 'DCB', 'SPACE',  *
**                  AND 'MEMBERS' PARAMETERS. I.E. ALL OPTIONS ARE    *
**                  TO BE USED.                                       *
**                                                                    *
**      FROM      - THE BEGINNING MEMBER NAME OF A RANGE OF NAMES     *
**                  TO BE LISTED BY THE 'MEMBERS' OPERAND. IF THIS    *
**                  OPERAND IS OMITTED, THE MEMBER NAMES ARE LISTED   *
**                  STARTING AT THE BEGINNING MEMBER NAME THROUGH TO  *
**                  THE MEMBER NAME SPECIFIED BY THE 'TO' OPERAND.    *
**                  IF 'FROM' IS SPECIFIED, 'MEMBERS' IS ASSUMED.     *
**                                                                    *
**      TO        - THE LAST MEMBER NAME OF A RANGE OF NAMES TO BE    *
**                  LISTED BY THE 'MEMBERS' OPERAND. IF THIS OPERAND  *
**                  IS NOT SPECIFIED THE NAMES STARTING AT THE        *
**                  'FROM' NAME TO THE LAST MEMBER NAME ARE LISTED.   *
**                  IF 'TO' IS SPECIFIED, 'MEMBERS' IS ASSUMED.       *
**                                                                    *
**      LOCATE    - ALL OCCURRENCES OF THE DATASET(S) ARE LISTED.     *
**                  THE ONLINE PACKS (DEFAULT) ARE SCANNED            *
**                  FOR ANY OCCURRENCES OF THE DATASET.               *
**                                                                    *
**      VOL       - A LIST OF VOLSERS WHICH ARE TO BE SCANNED         *
**                  FOR THE DATASETS.                                 *
**                                                                    *
*---------------------------------------------------------------------*
*                                                                     *
*        TO DO:                                                       *
*        - IF MULTI-VOLUME DATASET & VOL(...) IS NOT SPECIFIED        *
*          DISPLAY SPACE INFORMATION FOR ALL VOLUMES.                 *
*          SAMPLE OUTPUT:                                             *
*           SPACE: UNITS--ALLOC---USED--EXTENTS--2NDARY QTY--VOLUME   *
*                  TRKS   48593  48593     12    1000 TRKS   VOL001   *
*                  TRKS   20957  20957      2    1000 TRKS   VOL002   *
*                                                                     *
*---------------------------------------------------------------------*
**                                                                    *
**       HISTORY: #DD03312 - USE DSCB MAPPING & FLAGS.                *
**                           DISPLAY LARGE SECONDARY (> 999)          *
**                #DD05150 - USE UCBCHAN RATHER THAN UCBNAME.         *
**                #DD11328 - CORRECT /DEVICE NAME FOR DYNALLOC.       *
**                #DD12062 - Add EAV Support.                         *
**                #DD16151 - Add PDS/E Percent Used.                  *
**                                                                    *
***********************************************************************

LDS      CSECT ,
         USING *,R15
***********************************************************************
***  SET UP OUR SAVE AREA AND CHAINING PTRS.
***********************************************************************

         SAVE  (14,12),,*         SAVE CALLER'S REGISTERS
         #COPY GEN,BR=YES,YEAR=1999
         LR    R2,R1              GET ADDRESS OF CPPL FROM TMP.
         USING CPPL,R2            SET UP ADDRESSABILITY TO IT.
         USING PSA,0

***********************************************************************
*  REGISTER 13 IS USED AS A BASE REGISTER IN THIS PROGRAM. BECAUSE OF *
*  THIS, EXTREME CARE SHOULD BE TAKEN IF CHANGING THE FOLLOWING CODE. *
***********************************************************************

         BALR  R15,0              SET UP TEMPORARY BASE
         USING *,R15              SET UP ADDRESSABILITY TO BASE
         LA    R1,SAVEAREA        LOAD ADDRESS OF THIS SAVEAREA
         ST    R1,8(R13)          STORE ADDRESS OF THIS SAVEAREA IN
*                                 CALLERS SAVEAREA
         ST    R13,SAVEAREA+4     STORE ADDRESS OF CALLERS SAVEAREA
*                                 IN THIS SAVEAREA
         LR    R13,R1             LOAD ADDRESS OF THIS SAVEAREA
*                                 INTO R13
         B     LDSCONT            BRANCH AROUND ADDRESSES
         DROP  R15                DROP TEMPORARY BASE
         DS    0F                 FULLWORD BOUNDARY FOR BASE
         USING *,R13,R11,R12      ESTABLISH NEW BASE REGISTERS
SAVEAREA DC    18F'-1'
BASE2    DC    A(SAVEAREA+4096)
BASE3    DC    A(SAVEAREA+8192)
LDSCONT  DS    0H
         LM    R11,R12,BASE2      LOAD SECOND AND THIRD BASE REGS.

***********************************************************************

         EXTRACT EXTOUT,'S',FIELDS=(TIOT,TSO)
         L     R10,TSOFLAG        LOAD ADDRESS OF T.S. FLAG
         TM    0(R10),X'80'       IS TSO FLAG ON???
         BO    TSO                YES...
         OI    NOPSKIP+1,X'F0'
TSO      DS    0H

***********************************************************************
*** EXTRACT THE DATASET NAME PREFIX FROM THE USER'S PROFILE TABLE
***********************************************************************

         L     R5,CPPLPSCB        GET ADDRESS OF PSCB
         USING PSCB,R5            SET UP ADDRESSABILITY TO IT.
         L     R6,PSCBUPT         GET ADDRESS OF UPT
         SR    R7,R7              ZERO OUT REG. 7
         IC    R7,23(R6)          PLACE PREFIX LENGTH INTO REG. 7
         ST    R7,DSNPREFL        STORE THE PREFIX LENGTH FOR LATER
         MVC   DSNPREF(7),16(R6) STORE THE PREFIX FOR LATER

***********************************************************************
***  BUILD THE PARSE PARAMETER LIST (PDL) AND
***  THE DAIR PARAMETER LIST (DAPL).
***********************************************************************

         L     R3,CPPLUPT         ADDRESS OF UPT
         L     R4,CPPLECT         ADDRESS OF ECT
         LA    R5,ECB             EVENT CONTROL BLOCK
         LA    R7,IOPLADS
         STM   R3,R5,0(R7)
         L     R6,=A(PCL)         ADDRESS OF PARSE CONTROL LIST
         LA    R7,PARSEPDL        ADDRESS OF PARSE DESCRIPTOR LIST
         L     R8,CPPLCBUF        ADDRESS OF COMMAND BUFFER
         SR    R9,R9              ANSWER WORD AREA
         STM   R3,R9,WRKPPL       STORE INTO PARSE PARAMETER LIST
         L     R6,CPPLPSCB        ADDRESS OF PSCB
         STM   R3,R6,DAPL         STORE INTO DAIR PARAMETER LIST
         ST    R6,DFPBPSCB        STORE PSCB ADDRESS IN DFPB
         L     R6,=A(DFPB)        ADDRESS OF DFPB
         STM   R3,R6,DFPL         STORE INTO DEFAULT PARAMETER LIST
         LA    R3,DSNLEN          ADDRESS OF DSNLEN, DSN
         ST    R3,DFPBDSN         STORE IN DFPB
         MVI   DFPBCODE,X'04'     SET DFPB CODE FOR DEFAULT
         DROP  R2                 FREE REGISTER 2

***********************************************************************
***  LINK TO THE PARSING ROUTINE TO PARSE THE INPUT COMMAND.
***********************************************************************

         LA    R1,WRKPPL          LOAD ADDRESS OF WRKPPL
         LINK  EP=IKJPARS         LINK TO PARSE ROUTINE
         LTR   R15,R15            CHECK FOR ZERO RETURN CODE
         BNZ   BADRET             NOPE -> TROUBLE WITH PARSE.
         CLC   PARSEPDL,=XL4'FF000000' CHECK FOR VALID ADDRESS.
         BNE   CHKCMD
BADRET   DS    0H
         LA    R9,BADMSG
         BAL   R10,ONEMESSG
         B     CMDEND

***********************************************************************
***  CHECK OUT THE COMMAND PARAMETERS.
***********************************************************************

CHKCMD   DS    0H
         L     R10,PARSEPDL       GET ADDRESS OF OUR PDE LIST
         USING IKJPARMD,R10       SET UP ADDRESSABILITY TO IT
         MVC   REQFLAGS(5),=CL5'NNNYN' SET REQUEST FLAGS
* CHECK THE 'ALL' PARAMETER.
         LH    R8,ALLWD           GET ALL VALUE FROM PDE
         CH    R8,=H'2'           WAS 'ALL' SPECIFIED?
         BNE   CHKDCB             NO...
         MVC   DCB(3),=C'YYY'     YES...TURN ON DCB, SPACE AND MEMBERS
         B     CHKLOCA            SKIP CHECKING OF NEXT 3 PARMS
* CHECK THE 'DCB' PARAMETER.
CHKDCB   DS    0H
         LH    R8,DCBWD           GET DCB VALUE FROM PDE
         CH    R8,=H'2'           WAS 'DCB' SPECIFIED
         BNE   CHKSPACE           NO...LEAVE 'N'
         MVI   DCB,C'Y'           YES...TURN ON 'Y'
* CHECK THE 'SPACE' PARAMETER.
CHKSPACE DS    0H
         LH    R8,SPACEWD         GET SPACE VALUE FROM PDE
         CH    R8,=H'2'           WAS 'SPACE' SPECIFIED
         BNE   CHKMEM             NO...LEAVE 'N'
         MVI   SPACE,C'Y'         YES...TURN ON 'Y'
* CHECK THE 'MEMBERS' PARAMETER.
CHKMEM   DS    0H
         LH    R8,MEMBWD          GET MEMBERS VALUE FROM PDE
         CH    R8,=H'2'           WAS 'MEMBERS' SPECIFIED
         BNE   CHKLOCA            NO..CONTINUE
         MVI   MEMB,C'Y'          MEMBER LIST WANTED
         L     R2,MASK            GET ADDRESS OF MASK
         LTR   R2,R2              IS IT ZERO?
         BZ    CHKLOCA            YES, CONTINUE THERE IS NO MASK
         MVI   MASKFLG,C'Y'       TURN ON MASK INDICATOR
         LH    R3,MASK+4          GET LENGTH OF MASK
         BCTR  R3,0               DECREASE LENGTH BY 1 FOR MOVE
         LA    R5,MEMBMASK        STORE ADDRESS OF STORAGE AREA
*                                 FOR MASK
         #EXEC R3,MVC,0(*-*,R5),0(R2)
* CHECK THE 'LOCATE' PARAMETER.
CHKLOCA  DS    0H
         LH    R8,LOCWD           GET LOCATE VALUE FROM PDE
         CH    R8,=H'2'           WAS 'LOCATE' SPECIFIED
         BE    CHKVOL             YES...SKIP NEXT INSTRUCTION
         MVI   LOCATE,C'N'        NO LOCATE SCAN WANTED
* CHECK THE 'VOL' PARAMETER
CHKVOL   DS    0H
         LA    R4,VOLTABLE        STORAGE TABLE
         USING VOLPDE,R2          R2 ADDRESSABILITY TO VOL PDE
         SR    R2,R2              CLEAR
         L     R2,VOLSER          GET VOLSER VALUE FROM PDE
         LTR   R2,R2              WAS 'VOL' SPECIFIED???
         BZ    DEFAULT            NO...SET DEFAULT LIST
         MVI   LOCATE,C'Y'
         LA    R2,VOLSER          YES...ADDRESS OF FIRST VOLSER PDE
         L     R6,ADDRVOL         ADDRESS OF VOLSER
         CLC   0(3,R6),=CL3'ALL'  DOES HE WANT ALL VOLUMES???
         BNE   LOADADDR+4         NO...CONTINUE PROCESSING...FILL TABLE
         B     DEFAULTT           YES...SET DEFAULT LIST
LOADADDR DS    0H
         L     R6,ADDRVOL         ADDRESS OF VOLSER
         LH    R3,LENVOL          LENGTH OF VOLSER ENTRY
         CH    R3,=H'2'           MINIMUM OF 2             PT/MAY86
         BL    NEXTONE
         CH    R3,=H'6'           MAX. OF 6 CHARACTERS
         BNH   *+8
         LA    R3,6
         BCTR  R3,R0              DECREMENT FOR MOVE AND COMPARISON
         STH   R3,0(0,R4)         STORE FOR COMPARES
         #EXEC R3,MVC,2(*-*,R4),0(R6)
NEXTONE  DS    0H
         LA    R4,8(,R4)          NEXT ENTRY IN TABLE
         L     R2,NEXTVOL         ADDRESS OF NEXT VOL PWE
         C     R2,=XL4'FF000000' ARE THERE ANY MORE???
         BNE   LOADADDR           YES...CONTINUE
         MVC   0(4,R4),0(R2)      MOVE 'FF000000' TO EOT
         B     CHKFROM            CHECK NEXT PARM
DEFAULT  DS    0H
         CLI   LOCATE,C'N'        WAS 'LOCATE' SPECIFIED???
         BE    CHKFROM            NO...
DEFAULTT DS    0H
         MVC   VOLTABLE(20),DEFAULTV YES...MOVE IN DEFAULT VOLSER LIST
         B     CHKFROM
DEFAULTV DC    H'2',CL6'RES   ',H'2',CL6'SYS   ',X'FF000000'
* CHECK THE 'FROM' PARAMETER.
CHKFROM  DS    0H
         L     R2,FROM            GET ADDRESS OF 'FROM' STRING
         LTR   R2,R2              IS IT ZERO?
         BZ    CHKTO              YES- USE THE DEFAULT
         MVI   MEMB,C'Y'          SET 'MEMBERS' INDICATOR TO 'YES'
         LH    R3,FROM+4          GET LENGTH OF 'FROM' STRING
         BCTR  R3,0               DECRMENT LENGTH BY 1 FOR MOVE
         LA    R5,FRMEMB          GET ADDRESS OF 'FROM' NAME
         #EXEC R3,MVC,0(*-*,R5),0(R2)
* CHECK THE 'TO' PARAMETER.
CHKTO    DS    0H
         L     R2,TO              GET ADDRESS OF 'TO' STRING
         LTR   R2,R2              IS IT ZERO?
         BZ    CHKDCBSP           YES- USE THE DEFAULT
         MVI   MEMB,C'Y'          SET 'MEMBERS' INDICATOR TO 'YES'
         LH    R3,TO+4            GET LENGTH OF 'TO' STRING
         BCTR  R3,0               DECRMENT LENGTH BY 1 FOR MOVE
         LA    R5,TOMEMB          GET ADDRESS OF 'TO' NAME
         #EXEC R3,MVC,0(*-*,R5),0(R2)
* DID HE ASK FOR ANY OF DCB, SPACE OR MEMBER INFORMATION???
CHKDCBSP DS    0H
         CLC   DCB(3),=C'NNN'     DID HE ASK FOR DCB,SPACE,MEMBER???
         BNE   SKIPTO             ONE OF THEM...SO LEAVE HIM ALONE
         MVC   DCB(2),=C'YY'      NO..SO TURN ON DEFAULTS FOR DCB,SPACE
SKIPTO   DS    0H

***********************************************************************
***  LOOP THROUGH THE PARSE DESCRIPTOR ENTRIES (PDE'S) AND
***  PROCESS EACH DSNAME FOUND.
***********************************************************************

         LA    R8,DSNLIST         GET ADDRESS OF THE FIRST DSN PDE
         USING DSNPDE,R8          SET UP ADDRESSABILITY TO IT
         DROP  R10                FREE REGISTER 10
NEXTDSN  DS    0H
         BAL   R10,BLDDSN         BRANCH TO BUILD FULL DSNAME.
         XC    FLGS,FLGS
         CLI   LOCATE,C'Y'        WAS 'LOCATE' SPECIFIED?
         BE    PACKSCAN           IF SO, DO PACK SCANING
         BAL   R10,FINDONE        OTHERWISE, USE THE CATALOGUE
         B     GETPDE             GET THE NEXT DATASET NAME
PACKSCAN DS    0H
         BAL   R10,FINDALL        BRANCH TO PACK SCANNING RTN
GETPDE   DS    0H
         L     R6,NEXTPDE         GET ADDRESS OF THE NEXT PDE
         C     R6,=XL4'FF000000' ARE THERE ANY MORE???
         BE    CMDEND
         LR    R8,R6
         B     NEXTDSN

***********************************************************************
***  RETURN TO THE TSO TERMINAL MONITOR PROGRAM.
***********************************************************************

CMDEND   DS    0H
         L     R13,4(,R13)        RESET REGISTER 13
         RETURN (14,12),T,RC=0    RETURN TO THE TMP.
         LTORG ,

***********************************************************************
***  THIS ROUTINE SEARCHES THE CATALOGUE FOR THE SPECIFIED DATASET.
***  IF AN ENTRY IS FOUND FOR THE DATASET, THE REQUESTED INFORMATION
***  IS DISPLAYED. IF THE DATASET IS NOT CATALOGUED, THE USER IS
***  PROMPTED FOR A VOLUME SERIAL NUMBER.
***********************************************************************

FINDONE  DS    0H
         ST    R10,SAVE10         STORE THE RETURN ADDRESS
         BAL   R10,DETVOL         GET THE VOL/SER NUMBER
         LTR   R9,R9              IS EVERYTHING OKAY?
         BZ    CONTIN0            YES...
         CH    R9,=H'2'           WAS RETURN = 2 ?
         BE    FORETRN            YES..DATASET NOT CATALOGUED AND
*                                 VOLSER NOT SPECIFIED
         MVI   ERRMSG,C' '
         MVC   ERRMSG+1(79),ERRMSG
         LA    R5,ERRMSG
         AH    R5,DSNLEN
         MVC   ERRMSG(44),DSN
         MVC   1(35,R5),ALLONACC
         LA    R9,ERRMSGP
         BAL   R10,ONEMESSG
         B     FORETRN
CONTIN0  DS    0H
         LA    R5,VOL             ADDRESS OF VOLSER
         BAL   R10,ALLODSET       ATTEMPT TO ALLOCATE THIS DATASET
         LTR   R9,R9              WAS IT SUCCESSFUL?
         BNZ   FORETRN            IF NOT- RETURN TO MAINLINE
         BAL   R10,GETDSCB        BRANCH TO READ DSCB'S
         LTR   R9,R9              WAS THE DSCB READ SUCCESSFUL?
         BNZ   FREEDS             IF NOT- TRY NEXT PDE.
         CLI   DCB,C'Y'           DOES HE WANT DCB INFO?
         BNE   *+8                NO, SKIP NEXT INSTRUCTION
         BAL   R10,LISTDCB        BRANCH TO LIST DCB INFO.
         CLI   SPACE,C'Y'         DOES HE WANT SPACE INFO?
         BNE   *+8                NO, SKIP NEXT INSTRUCTION
         BAL   R10,LISTSPC        BRANCH TO LIST SPACE INFO.
         CLI   MEMB,C'Y'          DOES HE WANT MEMBER NAMES?
         BNE   *+8                NO, SKIP NEXT INSTRUCTION.
         BAL   R10,LISTMEM        BRANCH TO LIST MEMBER NAMES.
FREEDS   DS    0H
         BAL   R10,FREEDSET       FREE UP THE CURR. DATASET ALLOC.
FORETRN  DS    0H
         L     R10,SAVE10         RESTORE THE RETURN ADDRESS
         BR    R10                RETURN TO MAINLINE

***********************************************************************
***  THIS ROUTINE USES THE UCB ADDRESS TABLE TO GET THE VOLUME SERIAL
***  NUMBER OF EACH ONLINE PACK WHICH IS MOUNTED. EACH SUCH PACK
***  IS SCANNED FOR THE EXISTENCE OF THE SPECIFIED DATASET. IF THE
***  DATASET EXISTS ON A PACK, THE REQUESTED INFORMATION IS THEN
***  DISPLAYED AND THE NEXT PACK IS THEN SCANNED.
***********************************************************************

FINDALL  DS    0H
         ST    R10,SAVE10         STORE THE RETURN ADDRESS
         LOCATE CATBLK            CHECK IF DATASET IS CATALOGUED?
         BAL   R10,CHKALIAS       GO SEE IF IT'S DATASET NAME WAS
*                                 AN ALIAS
         MVC   DSNLINE+5(75),DSNLINE+4 BUILD DISPLAY LINE
         MVC   DSNLINE+7(44),DSN  MOVE IN THE DATASET NAME
         LA    R4,DSNLINE         GET DSN LINE ADDRESS
         AH    R4,DSNLEN          POSITION FOR OUR MESSAGE
         CH    R15,=H'0'          WAS DATASET CATALOGUED?
         BE    CATLGD             YES..
         CH    R15,=H'8'          IS IT UNAUTHORIZED???
         BNE   NOTCATLG           NO...SOME OTHER PROBLEM
         CH    R0,=H'56'          IS IT UNAUTHORIZED???
         BE    FARETRN            YES...SO BYPASS AND GET OUT OF HERE
         B     NOTCATLG
CATLGD   DS    0H
         MVC   10(17,R4),=CL17'IS CATALOGUED ON '
         MVC   27(6,R4),WKAREA+6 MOVE IN THE VOLUME SERIAL NUMBER
         B     TPUTDSNL           BRANCH TO TPUT CODE
NOTCATLG DS    0H
         MVC   10(18,R4),=CL18'IS NOT CATALOGUED.'
TPUTDSNL DS    0H
         LA    R9,DSNLINEP
         BAL   R10,ONEMESSG
         XC    FLGS,FLGS          INDICATE DATASET NOT FOUND YET

*   THIS CODE REPLACES THE OLD UCB SEARCH ROUTINE AND IS BOTH
*   MVS/370 AND MVS/XA COMPATABLE.               ***        MAY83   ***
*   AGAIN...REPLACED CVTUCBSC WITH UCBSCAN       ***   DSD  MAY98   ***

         XC    UCBSWORK,UCBSWORK  INITIALIZE WORK AREA         #DD98129
NEXTUCB1 DS    0H
         UCBSCAN COPY,            REQUEST A COPY OF A UCB      #DD98129*
               DEVNCHAR=UCBDEV#,                               #DD98129*
               DEVCLASS=DASD,                                  #DD98129*
               DYNAMIC=YES,                                    #DD98129*
               RANGE=ALL,                                      #DD98129*
               UCBAREA=UCBSAREA,                               #DD98129*
               WORKAREA=UCBSWORK,                              #DD98129*
               MF=(E,UCBSLST)                                  #DD98129
         LTR   R15,R15            ARE YOUR HANDS DIRTY ? NO MORE UCBS ?
         BNZ   UCBEND             IF SO, GO WASH THEM.  WE ARE DONE.
         LA    R3,UCBSAREA        A(RETURNED UCB)              #DD98129
         USING UCBOB,R3
         TM    UCBSTAT,UCBONLI    CHECK FOR ONLINE STATUS ???
         BNO   NEXTUCB1           IF NOT TRY TRY AGAIN
***   ***   ***   ***   ***   ***   ***   ***   ***        MAY83   ***

         LA    R4,VOLTABLE
         SR    R5,R5
DOWANT   DS    0H
         LH    R5,VOLTABLE
         EX    R5,COMPVOL
         BE    GOCHECK
         LA    R4,8(,R4)
         CLI   0(R4),X'FF'
         BE    NEXTUCB1
         B     DOWANT
COMPVOL  CLC   2(0,R4),UCBVOLI     EXECUTED
GOCHECK  DS    0H
         MVC   VOL,UCBVOLI        LOAD IN PACK VOLUME SERIAL NUMBER
         UNPK  DYNAMUCB+1(5),UCBCHAN(3)                        #DD11328
         TR    DYNAMUCB+1(4),HEXTAB-C'0'                       #DD11328
         MVI   DYNAMUCB+5,C' '                                 #DD11328
         MVC   UCBTYPE,UCBUNTYP   STORE UCB DEVICE TYPE CODE
         STM   R2,R3,SAVE28
         BAL   R10,ALLODSET       ATTEMPT DATASET ALLOCATION
         LTR   R9,R9              DID IT WORK?
         BNZ   DONEPACK           IF NOT, SKIP THIS PACK
         BAL   R10,GETDSCB        ATTEMPT TO READ THE DSCB'S
         LTR   R9,R9              DID WE GET THEM?
         BNZ   FREEUP             IF NOT, SKIP THIS PACK
         OI    FLGS,FOUND         INDICATE DATASET HAS BEEN FOUND
         CLI   DCB,C'Y'           DOES HE WANT DCB INFO?
         BNE   *+8                NO, SKIP NEXT INSTRUCTION
         BAL   R10,LISTDCB        BRANCH TO LIST DCB INFO.
         CLI   SPACE,C'Y'         DOES HE WANT SPACE INFO?
         BNE   *+8                NO, SKIP NEXT INSTRUCTION
         BAL   R10,LISTSPC        BRANCH TO LIST SPACE INFO.
         CLI   MEMB,C'Y'          DOES HE WANT MEMBER NAMES?
         BNE   *+8                NO, SKIP NEXT INSTRUCTION.
         BAL   R10,LISTMEM        BRANCH TO LIST MEMBER NAMES.
FREEUP   DS    0H
         BAL   R10,FREEDSET       FREE UP THE CURR. DATASET ALLOC.
DONEPACK DS    0H
         LM    R2,R3,SAVE28       RESTORE REGISTERS 2 AND 3
         B     NEXTUCB1           UCB
UCBEND   DS    0H
         TM    FLGS,FOUND+ALLOERR DATASET FOUND /ALLOC ERROR?
         BNZ   FARETRN            IF SO, RETURN TO MAINLINE
         LA    R4,DSNLINE         GET DSNLINE ADDRESS
         AH    R4,DSNLEN
         MVC   10(23,R4),=CL23'WAS NOT FOUND.    '
         LA    R9,DSNLINEP
         BAL   R10,ONEMESSG
FARETRN  DS    0H
         L     R10,SAVE10         RESTORE RETURN REGISTER
         BR    R10                RETURN TO MAINLINE
SAVREG03 DC    F'0'
H3       DC    H'3'
H13      DC    H'13'
DS3PTRDS DC    CL5' '

***********************************************************************
***  THIS ROUTINE PROCESSES ONE DSNAME FROM THE PDE LIST.
***  IT TAKES THE CURRENT DSNAME AND IF IT WAS NOT ENTERED
***  IN QUOTES, THE DATASET NAME PREFIX IS ADDED TO THE
***  BEGINNING OF IT. THE FULL DATASET NAME IS THEN STORED
***  IN THE FIELD CALLED 'DSN'.
***********************************************************************

BLDDSN   DS    0H
         SR    R9,R9
         MVI   DSN,C' '           SET DSNAME FIELD TO BLANKS
         MVC   DSN+1(43),DSN
         L     R6,ADDRDSN         GET THE ADDRESS OF THE CURRENT DSN
         LH    R5,LENDSN          GET THE DSNAME LENGTH
         TM    FLGSDSN,X'C0'      WAS IT SPECIFIED WITHIN QUOTES?
         BNO   NOQUOTES           IF NO, THEN BUILD FULL DSN.
DECREM5  DS    0H
         STH   R5,DSNLEN          STORE THE DSN LENGTH
         BCTR  R5,0               DECREMENT LENGTH BY 1 FOR EX
         #EXEC R5,MVC,DSN(*-*),0(R6)
         BR    R10                RETURN TO MAINLINE
NOQUOTES DS    0H
         LA    R4,DSN             GET ADDRESS OF OUR DSN FIELD
         L     R3,DSNPREFL        GET THE DSN PREFIX LENGTH
         LTR   R3,R3              DID HE SPECIFY 'NOPREFIX' IN PROFILE?
         BZ    DECREM5            YES...USE DSN AS IS
         BCTR  R3,0               DECREMENT IT BY 1 FOR EX
         #EXEC R3,MVC,DSN(*-*),DSNPREF
         AR    R4,R3              ADD LENGTH TO ADDRESS
         MVI   1(R4),C'.'         STICK IN THE DOT AFTER THE PREFIX
         LA    R4,2(,R4)          GET ADDRESS OF NEXT BLANK BYTE
         SR    R3,R3              CLEAR REG. 3
         LH    R3,LENDSN          GET THE LENGTH OF THE DSN
         BCTR  R3,0               DECREMENT IT BY 1 FOR EX
         #EXEC R3,MVC,0(*-*,R4),0(R6)
         L     R3,DSNPREFL        GET DSN PREFIX LENGTH
         AH    R3,LENDSN          ADD LENGTH OF SUPPLIED DSN
         LA    R3,1(,R3)          INCREMENT LENGTH BY 1 FOR DOT
         STH   R3,DSNLEN          STORE THE DSN LENGTH
         LA    R1,DFPL            CHECK FOR A FULLY QUALIFIED DSN
         LINK  EP=IKJEHDEF        LINK TO DEFAULT SERVICE RTN
         MVC   STDSN,DSN          STORE DSN IN CASE ITS AN ALIAS
         BR    R10                RETURN TO MAINLINE.

***********************************************************************
***  THIS ROUTINE DETERMINES THE VOLUME/SERIAL NUMBER FOR THE
***  CURRENT DATASET. IF THE DATASET IS CATALOGUED, IT OBTAINS
***  THE VOLUME/SERIAL NUMBER FROM THE CATALOGUE. OTHERWISE IT
***  PROMPTS THE USER FOR THE VOLUME/SERIAL NUMBER.
***  ONCE THIS IS DONE, IT THEN GOES AND OBTAINS THE DSCB'S
***  FOR THE CURRENT DATASET AND RETURNS.
***********************************************************************

DETVOL   DS    0H
         MVC   VOL(6),=CL6' '
         ST    R10,DETSTORE
         LOCATE CATBLK            READ THE CATALOGUE FOR THE DSN
         BAL   R10,CHKALIAS       GO SEE IF DSNAME WAS AN ALIAS
         LTR   R9,R15             DID WE GET A VALID ENTRY?
         BZ    GOTCAT             IF YES, MOVE VOLSER NUMBER
         MVI   ERRMSG,C' '
         MVC   ERRMSG+1(79),ERRMSG  SET MESSAGE BUFFER TO BLANKS
         MVC   ERRMSG(44),DSN
         LA    R4,ERRMSG
         AH    R4,DSNLEN
         MVC   1(18,R4),=CL18'IS NOT CATALOGUED.'
         LA    R9,ERRMSGP
         BAL   R10,ONEMESSG

NOPSKIP  NOP   SKIPDS              SELF MODIFYING CODE (BARF)
         TPUT  GETVOLM,L'GETVOLM,ASIS PROMPT THE USER FOR
         TGET  TGETVOL,10         THE VOLUME SERIAL NUMBER.
         LTR   R15,R15            DID WE GET IT FROM HIM?
         BNZ   SKIPDS             IF NO, SKIP THIS DATASET
         LTR   R1,R1              IS THE LENGTH ZERO?
         BZ    SKIPDS             YES, SKIP THIS DATASET.
         MVC   VOL(6),TGETVOL     MOVE VOL/SER FROM MESSAGE BUFFER
         OC    VOL(6),BLK8        CONVERT TO UPPERCASE
         SR    R9,R9              INDICATE NO ERRORS SO FAR
         B     GOTCAT1
SKIPDS   DS    0H
         LA    R9,2               SET RETURN CODE REGISTER
         L     R10,DETSTORE       RESTORE RETURN ADDRESS
         BR    R10                RETURN TO MAINLINE
GOTCAT   DS    0H
         MVC   VOL,WKAREA+6       MOVE VOL/SER FROM WORK AREA
GOTCAT1  DS    0H
         SR    R9,R9

*   THIS CODE REPLACES THE OLD UCB SEARCH ROUTINE AND IS BOTH
*   MVS/370 AND MVS/XA COMPATABLE.   ***   ***   ***        MAY83   ***
*   AGAIN...REPLACED CVTUCBSC WITH UCBSCAN       ***   DSD  MAY98   ***

         XC    UCBSWORK,UCBSWORK  INITIALIZE WORK AREA         #DD98129
NEXTUCB2 DS    0H
         UCBSCAN COPY,            REQUEST A COPY OF A UCB      #DD98129*
               DEVNCHAR=UCBDEV#,                               #DD98129*
               DEVCLASS=DASD,                                  #DD98129*
               DYNAMIC=YES,                                    #DD98129*
               RANGE=ALL,                                      #DD98129*
               UCBAREA=UCBSAREA,                               #DD98129*
               WORKAREA=UCBSWORK,                              #DD98129*
               MF=(E,UCBSLST)                                  #DD98129
         LTR   R15,R15            ARE YOUR HANDS DIRTY ? NO MORE UCBS ?
         BNZ   UCBEND2            IF SO, GO WASH THEM.  WE ARE DONE.
         LA    R3,UCBSAREA        A(RETURNED UCB)              #DD98129
         USING UCBOB,R3
         TM    UCBSTAT,UCBONLI    CHECK FOR ONLINE STATUS ???
         BNO   NEXTUCB2           IF NOT TRY TRY AGAIN
***   ***   ***   ***   ***   ***   ***   ***   ***        MAY83   ***

         CLC   VOL,UCBVOLI        IS THIS THE ONE WE'RE LOOKING FOR
         BNE   NEXTUCB2           NO....TRY NEXT UCB
         SR    R9,R9
         UNPK  DYNAMUCB+1(5),UCBCHAN(3)                        #DD11328
         TR    DYNAMUCB+1(4),HEXTAB-C'0'                       #DD11328
         MVI   DYNAMUCB+5,C' '                                 #DD11328
         MVC   UCBTYPE,UCBUNTYP   STORE UCB DEVICE TYPE CODE
         L     R10,DETSTORE
         BR    R10
UCBEND2  DS    0H
         LA    R9,1
         L     R10,DETSTORE
         BR    R10
         LTORG ,

***********************************************************************
*** THIS ROUTINE DETERMINES IF THE DATASET NAME SPECIFIED IN THE LDS **
*** COMMAND IS AN ALIAS, AND IF IT IS CALCULATES THE CORRECT DATASET **
*** NAME LENGTH.                                                     **
***********************************************************************
CHKALIAS DS    0H
         CLC   DSN,STDSN           IS DSNAME FROM LOCATE = DSNAME
*                                  ENTERED WITH LDS COMMAND?
         BE    CHKRET              YES..DSNAME NOT AN ALIAS
         LA    R2,DSN              START OF DSN FIELD
         LA    R3,DSN+43           END OF DSN FIELD
CHK010   DS    0H
         CLI   0(R3),C' '          IS THIS THE END OF THE DSNAME?
         BNE   CHK020              YES..
         BCT   R3,CHK010           NO..KEEP LOOKING
CHK020   DS    0H
         SR    R3,R2
         LA    R3,1(,R3)           LENGTH OF DSNAME
         STH   R3,DSNLEN           STORE LENGTH
CHKRET   DS    0H
         BR    R10                 RETURN

***********************************************************************
***  THIS ROUTINE ATTEMPTS TO ALLOCATE THE CURRENT DATASET.          **
***  UPON RETURN, REGISTER 9 CONTAINS THE RESULT OF THE ALLOCATION   **
***********************************************************************
ALLODSET DS    0H
         ST    R10,RETADDR
         MVC   DYNAMVOL(6),VOL     PUT VOLUME SERIAL IN CTL LIST
         MVC   DYNAMDSN(44),DSN
         MVC   DYNAMDDN(2),=C'$$'
         MVC   DYNAMDDN+2(6),VOL
         OBTAIN DSCBLK,EADSCB=OK  ATTEMPT TO GET FMT 1 DSCB    #DD12062
         LTR   R9,R15             CHECK FOR SUCCESS
         BZ    LINKALLO
         CLI   LOCATE,C'Y'        CHECK FOR PACK SCANNING
         BE    ALLOERET
         B     DSCBERR            NO...SKIP THIS PACK TO AVOID
*               ENQ ERROR WITH IBM ALLOCATION ERROR
LINKALLO DS    0H
         CLI   MEMB,C'Y'              MEMBER LIST WANTED?
         BNE   SUCCESS                IF NOT, RETURN
         LA    R1,DYNRBADD
         DYNALLOC ,
         LTR   R15,R15
         BZ    SUCCESS
         OI    FLGS,ALLOERR           SET FLAG TO ALLOC ERROR
         CLI   LOCATE,C'Y'            FOR LOCATE, BYPASS THE MESSAGES
         BE    ALLOERET

         LA    R14,DYNAMRB
         S99FAIL

         B     ALLOERET

*
*  SUCCESSFUL COMPLETION
*
SUCCESS  DS    0H
         MVC   SYSLIB+40(8),DYNAMDDN
         MVC   FAIRDDDN,DYNAMDDN          SAVE DDNAME FOR LIBRARIAN
         BR    R10

*
*  R15 = 4
*  AN ERROR RESULTED FROM THE CURRENT ENVIRONMENT, THE UNAVAILABILITY
*  OF A SYSTEM RESOURCE, OR A SYSTEM ROUTINE FAILURE.
*

*
*  R15 = 8
*  THE INSTALLATION VALIDATION ROUTINE DENIED THE REQUEST.
*
*
*  R15 = 12
*  THE ERROR IS DUE TO AN INVALID PARAMETER LIST.
*

*
*  SUCCESSFUL COMPLETION
*
ALLOERET DS    0H
         LA    R9,1               RAISE THE ERROR FLAG
         L     R10,RETADDR        RESTORE THE RETURN ADDRESS
         BR    R10                RETURN TO MAINLINE
         LTORG ,

***********************************************************************
***  THIS ROUTINE FREES UP THE CURRENT DATASET ALLOCATION.
***********************************************************************
FREEDSET DS    0H
         FREE  DDN=DDNPTR,ERROR=FREEERR
FREEERR  DS    0H
         BR    R10                RETURN TO MAINLINE

***********************************************************************
***  THIS ROUTINE FIRST DISPLAYS THE FULL DATASET NAME, AND THEN
***  THE VOLUME SERIAL NUMBER. IT THEN ATTEMPTS TO READ INTO CORE
***  THE DATASET CONTROL BLOCKS FOR THE CURRENT DATASET.
***********************************************************************
GETDSCB  DS    0H
         ST    R10,RETADDR        STORE THE RETURN ADDRESS
         MVC   DSNLINE+5(75),DSNLINE+4 CLEAR DSNAME PRINT LINE
         MVC   DSNLINE+7(44),DSN  MOVE IN THE DSNAME
         LA    R4,DSNLINE         GET ADDRESS OF THE DSN LINE
         AH    R4,DSNLEN          ADD LENGTH OF DSN
         MVC   10(8,R4),=CL8'VOLUME: ' MOVE IN THE VOLUME
         MVC   18(6,R4),VOL       SERIAL NUMBER
         LA    R9,DSNLINEP
         BAL   R10,ONEMESSG
         SR    R9,R9

         OBTAIN DSCBLK,EADSCB=OK  ATTEMPT TO GET FMT 1 DSCB    #DD12062
         LTR   R15,R15            CHECK FOR SUCCESS
         BNZ   DSCBERR            IF NOT, INFORM USER

         SR    R9,R9
         CLI   WKAREA,C'8'        IS IT A FORMAT 8 DSCB?       #DD13118
         BE    PROCDSCB                                        #DD13118
         CLI   WKAREA,C'1'        IS IT A FORMAT 1 DSCB?
         BNE   DSCBERR            IF NOT, INFORM USER
PROCDSCB DS    0H                                              #DD13118
         MVC   DS1FMTID(DS1END-DS1FMTID),WKAREA                #DD03312
         CLC   DS1PTRDS(5),HEX00  SEE IF A FMT 2 OR 3 EXISTS.
         BE    DSCBRET            IF NOT, BRANCH TO RETURNING CODE
OBNEXT   DS    0H
         OBTAIN NEXTBLK,EADSCB=OK  GET FMT 2 OR FMT 3 DSCB     #DD12062
         LTR   R15,R15            CHECK FOR SUCCESS
         BNZ   DSCBERR            IF NOT, INFORM USER.
         SR    R9,R9
         CLI   WKAREA+44,C'9'     IS IT A FORMAT 9 DSCB?       #DD13118
         BE    SKIPFMT9           If Yes, Skip to next DSCB    #DD13118
         CLI   WKAREA+44,C'3'     IS IT A FMT 3
         BE    DSCBRET            OKAY. BRANCH TO RETURNING CODE
         CLI   WKAREA+44,C'2'     IS IT A FMT 2?
         BNE   DSCBERR        NO...
SKIPFMT9 DS    0H                                              #DD13118
         CLC   WKAREA+135(5),HEX00  SEE IF A FORMAT 3 EXISTS
         BE    DSCBRET        IF NOT, BRANCH TO RETURNING CODE
         MVC   DS1PTRDS(5),WKAREA+135
         B     OBNEXT
DSCBERR  DS    0H
         LR    R9,R15             DSCB ERROR OCCURRED.
         C     R9,=F'16'          IS IT GREATER THAN 16
         BNH   *+8                IF NOT, SKIP NEXT INSTRUCTION
         LA    R9,20              SET VALUE TO 20 (MAX).
         LA    R4,DSCBTBL         GET ADDRESS OF DSCB ERROR TABLE
         AR    R4,R9              ADD REG. 09 TO ADDRESS OF TABLE
         L     R10,0(,R4)         R10->ERROR MESSAGE
         C     R15,=F'8'          ERROR CODE = 8???
         BNE   PUTR10             NO...VOLSER NOT NEEDED IN MESSAGE
         MVC   27(6,R10),VOL      YES...STORE VOLSER IN CORRECT SPOT
PUTR10   DS    0H
         LR    R9,R10
         BAL   R10,ONEMESSG
         LA    R9,1               RAISE THE ERROR FLAG.
DSCBRET  DS    0H
         L     R10,RETADDR        RESTORE THE RETURN ADDRESS
         BR    R10                RETURN TO MAINLINE
         LTORG ,

***********************************************************************
***  THIS ROUTINE DECODES AND FORMATS THE DCB INFORMATION.
***********************************************************************

LISTDCB  DS    0H
         ST    R10,RETADDR        STORE THE RETURN ADDRESS
         MVC   DSORG(3),BLK8      BLANK OUT THE DSORG FIELD
         MVC   RECFM(5),BLK8      BLANK OUT THE RECFM FIELD

***********************************************************************
**  DECODE THE DATASET ORGANIZATION.
***********************************************************************

         LA    R3,DSORGTBL        GET ADDRESS OF THE DSORG TABLE
         LA    R4,5               GET LENGTH OF A TABLE ENTRY
         LA    R5,DSORGTBX        ADDRESS OF LAST TABLE ENTRY
LIDSORG  DS    0H
         CLC   DS1DSORG(1),4(R3) CHECK FOR DSORG EQUAL
         BNE   LIDSORGB           IF NO TRY NEXT ENTRY FROM TABLE
LIDSORGA DS    0H
         MVC   DSORG(3),1(R3)     MOVE IN THE CHAR. EQUIVALENT
         B     CHCKVSAM           BRANCH TO DECODE RECFM           |
LIDSORGB DS    0H
         BXLE  R3,R4,LIDSORG      GET ADDRESS OF NEXT TABLE ENTRY  |
         LA    R3,DSORGUN         DSORG IS UNKNOWN                 |
         B     LIDSORGA           BRANCH TO PUT IT INTO PRT LINE   |

***********************************************************************
**  CHECK IF THIS HERE MIGHT BE VSAM     82/10/19  ...
***********************************************************************

CHCKVSAM DS    0H
         TM    DS1SMSFG,DS1PDSE   Check For PDS/E Dataset      #DD13046
         BNO   NOTPOE             B. If Not                    #DD13046
         MVC   DSORG(4),=C'PDSE'                               #DD13046
NOTPOE   DS    0H
         CLI   DS1DSORG+1,DS1ORGAM VSAM ?                      #DD03312
         BNE   DORECFM            NO ........
         MVC   DSORG(3),=C'VSM'   YES ... THEN SAY SO YOU DUMMY

***********************************************************************
**  DECODE THE RECORD FORMAT.
***********************************************************************

DORECFM  DS    0H
         LA    R4,RECFM           GET ADDRESS OF RECFM IN PRT LINE
         TM    DS1RECFM,DS1RECFU  TEST FOR UNDEFINED LENGTH    #DD03312
         BNO   LIRECFA
         MVI   0(R4),C'U'
         LA    R4,1(,R4)          INCRMENT NEXT AVAIL CHAR. POSITION
         B     LIRECFE
LIRECFA  DS    0H
         TM    DS1RECFM,DS1RECFF  TEST FOR FIXED LENGTH        #DD03312
         BNO   LIRECFB
         MVI   0(R4),C'F'
         LA    R4,1(,R4)          SET NEXT AVAIL. CHAR. POSITION
         B     LIRECFC
LIRECFB  DS    0H
         TM    DS1RECFM,DS1RECFV  TEST FOR VARYING LENGTH      #DD03312
         BNO   LIRECFC
         MVI   0(R4),C'V'
         LA    R4,1(,R4)          SET NEXT AVAIL. CHAR. POSITION
LIRECFC  DS    0H
         TM    DS1RECFM,DS1RECFB  TEST FOR BLOCKED             #DD03312
         BNO   LIRECFD
         MVI   0(R4),C'B'
         LA    R4,1(,R4)          SET NEXT AVAIL. CHAR. POSITION
LIRECFD  DS    0H
         TM    DS1RECFM,DS1RECFS  TEST FOR STANDARD            #DD03312
         BNO   LIRECFE
         MVI   0(R4),C'S'
         LA    R4,1(,R4)          SET NEXT AVAIL. CHAR. POSITION
LIRECFE  DS    0H
         TM    DS1RECFM,DS1RECMC  TEST FOR MACHINE CTL CHAR.   #DD03312
         BNO   LIRECFF
         MVI   0(R4),C'M'
         LA    R4,1(,R4)          SET NEXT. AVAIL. CHAR. POSITION
         B     LIRECFG
LIRECFF  DS    0H
         TM    DS1RECFM,DS1RECFA  TEST FOR ASA CTL CHAR.       #DD03312
         BNO   LIRECFG
         MVI   0(R4),C'A'
         LA    R4,1(,R4)          SET NEXT AVAIL. CHAR. POSITION
LIRECFG  DS    0H
         TM    DS1RECFM,DS1RECFT  TEST FOR TRACK OVERFLOW      #DD03312
         BNO   DOLRECL
         MVI   0(R4),C'T'

***********************************************************************
*** DECODE THE LOGICAL RECORD LENGTH.
***********************************************************************

DOLRECL  DS    0H
         LH    R4,DS1LRECL        GET THE LRECL (BINARY FORMAT)
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   LRECL,DWD2+11      STORE VALUE IN PRINT LINE

**********************************************************************
***  DECODE THE BLOCK SIZE
**********************************************************************

         LH    R4,DS1BLKL         GET THE BLK LENGTH (BINARY)
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   BLKSIZE,DWD2+11    STORE VALUE IN PRINT LINE

**********************************************************************
*** DETERMINE HEX REPRESENTATION OF THE OPTCD FIELD
**********************************************************************

         SR    R4,R4              CLEAR REG. 4
         IC    R4,DS1OPTCD        GET THE OPTCD CHARACTER
         SRL   R4,4               CHOP OFF LAST 4 BITS
         STC   R4,OPTCD           STORE LAST CHAR.
         TR    OPTCD(1),HEXTAB    CONVERT TO DISPLAY CHAR.
         IC    R4,DS1OPTCD        GET THE OPTCD CHARACTER
         N     R4,=XL4'FFFFFF0F' WIPE OUT ALL BUT LAST 4 BITS
         STC   R4,OPTCD+1         STORE CHAR.
         TR    OPTCD+1(1),HEXTAB  CONVERT TO DISPLAY CHAR.

**********************************************************************
*** DECODE THE KEY LENGTH.
**********************************************************************

         SR    R4,R4              CLEAR REG. 4
         IC    R4,DS1KEYL         MOVE IN THE KEY LENGTH
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   KEYLEN,DWD2+12     STORE VALUE IN PRINT LINE

**********************************************************************
*** DECODE THE RELATIVE KEY POSITION.
**********************************************************************

         MVC   DWD1+2(2),DS1RKP   GET THE RKP FIELD
         LH    R4,DWD1+2          LOAD IT INTO REG 4
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   RKP,DWD2+13        STORE VALUE IN PRINT LINE

**********************************************************************
*** DECODE THE CREATE DATE.
**********************************************************************

         MVC   FWORD(4),HEX00     ZERO OUT A FULLWORD AREA
         MVC   FWORD(3),DS1CREDT  MOVE IN 3-BYTE CREATE DATE
         L     R4,FWORD           LOAD IT INTO REG. 4
         SRL   R4,24              SHIFT TO GET THE YEAR
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   CRTDT,DWD2+14      STORE VALUE IN PRINT LINE
         L     R4,FWORD           LOAD CRTDT BACK INTO REG. 4
         SLL   R4,8               SHIFT TO LOSE THE YEAR
         SRL   R4,16              SHIFT BACK TO GET THE DAY
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   CRTDT+2(3),DWD2+13 STORE VALUE IN PRINT LINE
         MVZ   CRTDT(5),=C'00000' SET THE ZONE FIELDS

**********************************************************************
*** DECODE THE EXPIRY DATE
**********************************************************************

         MVC   FWORD(4),HEX00     ZERO OUT A FULLWORD AREA
         MVC   FWORD(3),DS1EXPDT  MOVE IN 3-BYTE EXPIRY DATE
         L     R4,FWORD           LOAD IT INTO REG. 4
         SRL   R4,24              SHIFT TO GET THE YEAR
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   EXPDT,DWD2+14      STORE VALUE IN PRINT LINE
         L     R4,FWORD           LOAD EXPDT BACK INTO REG. 4
         SLL   R4,8               SHIFT TO LOSE THE YEAR
         SRL   R4,16              SHIFT BACK TO GET THE DAY
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   EXPDT+2(3),DWD2+13 STORE VALUE IN PRINT LINE
         MVZ   EXPDT(5),=C'00000' SET THE ZONE FIELDS

**********************************************************************
*** DECODE THE DATE LAST REFERENCED
**********************************************************************

         MVC   FWORD(4),HEX00     ZERO OUT A FULLWORD AREA
         MVC   FWORD(3),DS1REFD   MOVE IN 3-BYTE DATE LAST REF'D
         L     R4,FWORD           LOAD IT INTO REG. 4
         SRL   R4,24              SHIFT TO GET THE YEAR
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   REFDT,DWD2+14      STORE VALUE IN PRINT LINE
         L     R4,FWORD           LOAD REFDT BACK INTO REG. 4
         SLL   R4,8               SHIFT TO LOSE THE YEAR
         SRL   R4,16              SHIFT BACK TO GET THE DAY
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   REFDT+2(3),DWD2+13 STORE VALUE IN PRINT LINE
         MVZ   REFDT(5),=C'00000' SET THE ZONE FIELDS
         LA    R9,DCBTITLE
         BAL   R10,TWOMESSG
         L     R10,RETADDR        RESTORE THE RETURN ADDRESS
         BR    R10                RETURN TO MAINLINE
         LTORG ,

***********************************************************************
***  THIS ROUTINE DECODES AND FORMATS THE SPACE INFORMATION.
***********************************************************************

LISTSPC  DS    0H
         ST    R10,RETADDR        STORE THE RETURN ADDRESS
         CLI   UCBTYPE,X'0B'      IS IT 3350 ?
         BNE   D3380
         MVC   TRKCYL,=H'030'     3350 HAS 30 TRKS/CYL
         B     LISTALC
D3380    DS    0H
         CLI   UCBTYPE,X'0E'      IS IT 3380 ?
         BNE   D3390                                           #DD98056
         MVC   TRKCYL,=H'015'     3380 HAS 15 TRKS/CYL
         B     LISTALC
D3390    DS    0H
         CLI   UCBTYPE,X'0F'      IS IT 3390 ?                 #DD98056
         BNE   D3330              NO - MUST BE 3330 THEN       #DD98056
         MVC   TRKCYL,=H'015'     3390 HAS 15 TRKS/CYL         #DD98056
         B     LISTALC                                         #DD98056
D3330    DS    0H
         MVC   TRKCYL,=H'019'     3330 HAS 19 TRKS/CYL

***********************************************************************
**  DETERMINE THE SECONDARY ALLOCATION UNITS (TRKS, CYLS, BLKS)
***********************************************************************

LISTALC  DS    0H
         MVC   SECU,=C' TRKS'     ASSUME DEFAULT OF TRACKS
         TM    DS1SCAL1,DS1CYL    TEST FOR CYLINDERS           #DD03312
         BNO   LI2NDAA            IF NO, TRY NEXT TEST
         MVC   SECU,=C' CYLS'     SET TO CYLINDERS
         B     DO2NDALL           BRANCH TO DECODE THE NUMBER
LI2NDAA  DS    0H
         TM    DS1SCAL1,DS1AVR    TEST FOR BLOCKS              #DD03312
         BNO   DO2NDALL           IF NO, MUST BE TRACKS
         MVC   SECU,=C' BLKS'     SET TO BLOCKS

***********************************************************************
**  DETERMINE THE NUMBER OF SECONDARY ALLOCATION UNITS
***********************************************************************

DO2NDALL DS    0H
         MVI   FWORD,X'00'        ZERO FIRST BYTE OF FULLWORD
         MVC   FWORD+1(3),DS1SCAL3 GET THE SECONDARY QTY.      #DD03312
         L     R4,FWORD           LOAD REG 4
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   SECA,DWD2+11       STORE VALUE INTO PRINT LINE  #DD03312

***********************************************************************
**  DECODE THE NUMBER OF EXTENTS
***********************************************************************

         SR    R4,R4              CLEAR REG 4
         IC    R4,DS1NOEPV        GET NO. OF EXTENTS (BINARY)
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   EXTS,DWD2+14       STORE VALUE IN PRINT LINE

***********************************************************************
**  DETERMINE AND DECODE THE TOTAL TRACKS ALLOCATED.
***********************************************************************

         LA    R2,EXTTBL          GET ADDRESS OF EXTENTS TABLE
         SLR   R4,R4              CLEAR REG 4                  #DD03312
         ST    R4,TOTRK           INITIALIZE TOTAL TRKS TO 0   #DD03312
         IC    R4,DS1NOEPV        GET THE NO. OF EXTENTS
         ST    R3,SAVREG03        SAVE REGISTER 3
         XR    R3,R3              CLEAR REGISTER 3
         LH    R3,H3              REG 3, COUNTER FOR 1ST 3 EXT.
EXT03LP  DS    0H
         L     R5,0(,R2)          GET NEXT EXTENT ADDRESS
         USING EXTENT,R5          SET UP ADDRESSABILITY TO IT
         CLI   ID,X'00'           SEE IF THIS IS THE LAST
         BE    NOMORE             IF YES, BRANCH
         SLR   R6,R6                                           #DD03312
         ICM   R6,3,CCA           GET CYL LOWER LIMIT          #DD03312
         MH    R6,TRKCYL          CONVERT TO TRACKS
         SLR   R15,R15                                         #DD03312
         ICM   R15,3,TTA                                       #DD03312
         AR    R6,R15             ADD TRKS LOWER LIMIT         #DD03312

         SLR   R7,R7                                           #DD03312
         ICM   R7,3,CCB           GET CYL UPPER LIMIT          #DD03312
         MH    R7,TRKCYL          CONVERT TO TRACKS
         SLR   R15,R15                                         #DD03312
         ICM   R15,3,TTB                                       #DD03312
         AR    R7,R15             ADD TRKS UPPER LIMIT         #DD03312
         LA    R7,1(,R7)          ADD 1 (RELATIVE TRACK ZERO)  #DD03312

         SR    R7,R6              SUBTRACT TO GET NO. TRACKS
         A     R7,TOTRK           ADD TO TOTAL TRACKS          #DD03312
         ST    R7,TOTRK           STORE BACK INTO TOTAL TRKS   #DD03312
         LA    R2,4(,R2)          GET ADDRESS OF NEXT TABLE ENTRY
         BCTR  R4,0               DECREMENT # OF EXTENTS
         LTR   R4,R4              ANYMORE EXTENTS?
         BZ    NOMORE             NO, THEN GET OUT OF LOOP
         BCT   R3,EXT03LP         STILL WORKING ON FIRST 3 EXT.
         XR    R3,R3              CLEAR REGISTER 03
         LH    R3,H13             REG 3,COUNTER FOR NEXT 13 EXT.
EXT13LP1 DS    0H
         LA    R2,WKTBL           GET ADDRESS OF WORK TABLE
EXT13LP2 DS    0H
         L     R5,0(,R2)          GET NEXT EXTENT ADDRESS
         USING EXTENT,R5          SET UP ADDRESSABILITY TO IT
         CLI   ID,X'00'           SEE IF THIS IS THE LAST
         BE    NOMORE             IF YES, BRANCH
         SLR   R6,R6                                           #DD03312
         ICM   R6,3,CCA           GET CYL LOWER LIMIT          #DD03312
         MH    R6,TRKCYL          CONVERT TO TRACKS
         SLR   R15,R15                                         #DD03312
         ICM   R15,3,TTA                                       #DD03312
         AR    R6,R15             ADD TRKS LOWER LIMIT         #DD03312

         SLR   R7,R7                                           #DD03312
         ICM   R7,3,CCB           GET CYL UPPER LIMIT          #DD03312
         MH    R7,TRKCYL          CONVERT TO TRACKS
         SLR   R15,R15                                         #DD03312
         ICM   R15,3,TTB                                       #DD03312
         AR    R7,R15             ADD TRKS UPPER LIMIT         #DD03312
         LA    R7,1(,R7)          ADD 1 (RELATIVE TRACK ZERO)  #DD03312

         SR    R7,R6              SUBTRACT TO GET NO. TRACKS
         A     R7,TOTRK           ADD TO TOTAL TRACKS          #DD03312
         ST    R7,TOTRK           STORE BACK INTO TOTAL TRKS   #DD03312
         LA    R2,4(,R2)          GET ADDRESS OF NEXT TABLE ENTRY
         BCTR  R4,0               DECREMENT # OF EXTENTS
         LTR   R4,R4              ANYMORE EXTENTS?
         BZ    NOMORE             NO, GET OUT
         BCT   R3,EXT13LP2        STILL WORKING ON FMT3 DSCB?
         LA    R3,WKAREA          NO, PREPARE NEXT FMT3 DSCB
         MVC   DS3PTRDS,135(R3)   GET PTR TO NEXT FMT3 DSCB
         XR    R3,R3              CLEAR REGISTER 03
         LH    R3,H13             PREPARE R3 FOR NEXT 13 EXT.
         OBTAIN NEXT13,EADSCB=OK  GET FMT3 DSCB                #DD12062
         LTR   R15,R15            IS EVERYTHING OKAY?
         BNZ   DSCBERR            NO, THEN SAY SO WITH MSG
         B     EXT13LP1           ELSE KEEP GOING
NOMORE   DS    0H
         L     R3,SAVREG03        RESTORE REGISTER 3
         SR    R4,R4              CLEAR REG 4
         L     R4,TOTRK           LOAD TOTAL TRACKS INTO REG 4 #DD03312
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   TRKA,DWD2+11       STORE VALUE IN PRINT LINE
         DROP  R5                 FREE REG 5

***********************************************************************
**  DETERMINE AND DECODE THE TOTAL TRACKS USED.
***********************************************************************

         TM    DS1SMSFG,DS1PDSE   Check For PDS/E Dataset      #DD13071
         BO    FULLDSN                                         #DD13071
         TM    DS1DSORG,DS1DSGPS+DS1DSGDA+DS1DSGPO             #DD03312
         BNZ   SPACUSED           YES...ONE OF THEM...USE CALCULATIONS
FULLDSN  DS    0H                                              #DD13071
         MVC   TRKU,DWD2+11       DEFAULT TO SPACE ALLOCATED
         B     SPACUS30                                        #DD16151
SPACUSED DS    0H
         XC    DWD1,DWD1           INITIALZE TRACK COUNT       #DD13071
         MVC   DWD1+2(2),DS1LSTAR                              #DD13071
         TM    DS1SMSFG,DS1STRP    CHECK FOR EXTENDED FORMAT   #DD13071
         BZ    SPACUS10            B. IF NOT                   #DD13071
         MVC   DWD1(2),DS1TRBAL                                #DD13071
         B     SPACUS20                                        #DD13071
SPACUS10 DS    0H                                              #DD13071
         TM    DS1FLAG1,DS1LARGE   CHECK FOR DSNTYPE=LARGE     #DD13071
         BZ    SPACUS20            B. IF NOT                   #DD13071
         MVC   DWD1+1(1),DS1TTTHI                              #DD13071
SPACUS20 DS    0H                                              #DD13071
         L     R4,DWD1             LOAD USED TRACKS            #DD13071
         CLI   DS1LSTAR+2,0       CHECK IF NO RECORDS          #DD03312
         BE    *+8                YES, SKIP NEXT INSTRUCTION
         LA    R4,1(,R4)          INCREMENT LAST BLOCK PTR BY 1
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   TRKU,DWD2+11       STORE VALUE IN PRINT LINE

SPACUS30 DS    0H                                              #DD16151
         TM    DS1SMSFG,DS1PDSE   Check For PDS/E Dataset      #DD16151
         BZ    PRTSPACE           B. If Not                    #DD16151
*        Call  IGWFAMS    (IGWAMSP0)
         MVC   FAMSFMH(8),=CL8'IGWFMH'                         #DD16151
         MVC   FAMSFMH+8(4),=A(FAMSFMHL)                       #DD16151
         MVC   FAMSFMH+12(4),=X'01000000'  VERSION             #DD16151
         MVC   FAMSFMH+16(4),=X'00010068'  GETATTR             #DD16151
         MVC   FAMSFMH+20(4),=X'00000400'                      #DD16151
         LA    R0,DSNLEN          A(LENGTH,DSNAME)             #DD16151
         ST    R0,FAMSFMH+24                                   #DD16151
         MVC   FAMSFMH+60(4),=X'80000000'                      #DD16151
         MVC   FAMSFMH+116(4),=A(2)                            #DD16151
         LA    R0,FAMSLIST                                     #DD16151
         ST    R0,FAMSFMH+120                                  #DD16151

         LA    R0,=CL8'HARPN'                                  #DD16151
         ST    R0,FAMPTRL1+8                                   #DD16151
         LA    R0,=CL8'PAGSUSED'                               #DD16151
         ST    R0,FAMPTRL2+8                                   #DD16151
         LA    R0,=CL8'MEMCOUNT'                               #DD16151
         ST    R0,FAMPTRL3+8                                   #DD16151
         LA    R0,FAMPTRL1                                     #DD16151
         ST    R0,FAMSLIST+0                                   #DD16151
         LA    R0,FAMPTRL2                                     #DD16151
         ST    R0,FAMSLIST+4                                   #DD16151
         LA    R0,FAMPTRL3                                     #DD16151
         ST    R0,FAMSLIST+8                                   #DD16151

         MVC   FAMSFMO(8),=CL8'IGWFMO'                         #DD16151
         MVC   FAMSFMO+8(4),=A(FAMSFMOL)                       #DD16151
         MVC   FAMSFMO+12(4),=X'01000000'  VERSION             #DD16151

         L     R15,FLCCVT             LOAD CVT POINTER         #DD16151
         L     R15,CVTDFA-CVT(,R15)   DATA FACILITIES AREA     #DD16151
         CLC   2(2,R15),=X'3200'                               #DD16151
         BL    PRTSPACE                                        #DD16151
         L     R15,DFADFVAD-DFA(,R15)  DFP VECTOR TABLE        #DD16151
         L     R15,DFVTFMS-DFVT(,R15)  FMS MAIN ENTRY PT       #DD16151
         LTR   R15,R15                                         #DD16151
         BZ    PRTSPACE                                        #DD16151

         LA    R1,FAMSPARM        A(Parameter List)            #DD16151
         LA    R0,FAMSFMH                                      #DD16151
         ST    R0,0(,R1)                                       #DD16151
         LA    R0,FAMSFMO                                      #DD16151
         ST    R0,4(,R1)                                       #DD16151
         BASSM R14,R15                                         #DD16151
         LTR   R15,R15                FAMS SUCCESSFUL?         #DD16151
         BNZ   PRTSPACE               NO                       #DD16151

         L     R2,FAMSFMO+X'60'       HARPN                    #DD16151
         L     R1,FAMSFMO+X'64'       PAGSUSED                 #DD16151

         MH    R1,=H'100'                                      #DD16151
         SR    R0,R0                                           #DD16151
         DR    R0,R2              Calculate Percent Used       #DD16151

         LR    R4,R1              Percent Used                 #DD16151
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE      #DD16151
         MVC   TRKU,DWD2+11       Insert Used Percentage       #DD16151
         MVI   TRKU+5,C'%'                                     #DD16151

***********************************************************************
**  PRINT THE SPACE LINES
***********************************************************************

PRTSPACE DS    0H
         LA    R9,SPATITLE
         BAL   R10,TWOMESSG
         L     R10,RETADDR        RESTORE THE RETURN ADDRESS
         BR    R10                RETURN TO MAINLINE
         LTORG ,

***********************************************************************
***  ROUTINE PDSDSET WILL DISPLAY THE MEMBER NAMES OF THE CURRENT
***  PARTITIONED DATASET.  ROUTINE DADSET WILL DISPLAY THE MODULES
***  OF THE CURRENT LIBRARIAN DATASET.
***********************************************************************

LISTMEM  DS    0H
         ST    R10,RETADDR        STORE THE RETURN ADDRESS
         TM    DS1DSORG,DS1DSGPO  CHECK FOR A PDS (PO OR POU)  #DD03312
         BO    PDSDSET            PROCESS MEMBER LIST
         TM    DS1DSORG,DS1DSGDA  CHECK FOR A 'DA'(DA OR DAU)  #DD03312
         BNO   MEMRET             IF NOT, SKIP MEMBER LIST
         B     DADSET

***********************************************************************
***  OPEN THIS PARTITIONED DATASET.
***********************************************************************

PDSDSET  DS    0H
         MVI   NOM,X'00'          INITIALIZE COUNTERS TO ZERO
         MVC   NOM+1(15),NOM
         OPEN  (SYSLIB)           OPEN THE PDS DIRECTORY
         TM    SYSLIB+48,X'10'    CHECK FOR SUCCESS
         BNO   CANTOPEN           IF NOT, INFORM USER
         MVI   MBRLINE,C' '       CLEAR OUT THE MEMBER LIST
         MVC   MBRLINE+1(75),MBRLINE
         MVC   MBRLINE(5),=CL5'MBRS:'

***********************************************************************
***  LOOP THROUGH THE DIRECTORY BLOCKS.
***********************************************************************

         MVI   LASTDIR,C'N'       LAST DIR. ENTRY NOT FOUND YET.
         SR    R7,R7              SET LIST COUNTER TO ZERO
         LA    R5,MBRS            GET ADDRESS OF MEMBER NAME LIST
GETBLK   DS    0H
         GET   SYSLIB             READ A DIRECTORY BLOCK
         L     R3,DIRALL          GET THE CURRENT DIR. CTR
         LA    R3,1(,R3)          ADD 1 TO IT
         ST    R3,DIRALL          STORE IT BACK
         CLI   LASTDIR,C'Y'       CHECK FOR END REACHED.
         BE    GETBLK             IF SO, READ NEXT BLOCK.
         LR    R6,R1              GET ADDRESS OF DIR BLK.
         LH    R2,0(,R1)          GET LENGTH OF DIR. BLK
         LA    R4,2(,R1)          GET REAL ADDRESS OF DIR. BLK
         AR    R6,R2              POINT TO LAST BYTE
         CLC   0(4,R4),HEXFF      SEE IF VALID NAME
         BNE   VALIDNM            IF NOT, A VALID NAME.
         MVI   LASTDIR,C'Y'       INDICATE END REACHED.
         B     GETBLK             BUT KEEP READING DIR. BLOCKS
VALIDNM  DS    0H
         L     R3,DIRU            GET THE CURR. DIR. USED CTR
         LA    R3,1(,R3)          ADD 1 TO IT
         ST    R3,DIRU            STORE IT BACK
CHKEND   DS    0H
         CR    R6,R4             SEE IF THAT WAS LAST ENTRY IN BLOCK
         BE    GETBLK            YES...
         CLC   0(4,R4),HEXFF     WAS IT LAST VALID ENTRY???
         BNE   GOING             NO...
         MVI   LASTDIR,C'Y'      YES...INDICATE END OF DATA
         B     GETBLK            BUT KEEP READING DIRECTORY BLOCKS
GOING    DS    0H
         L     R3,NOM             GET THE NO. MEMBERS CTR
         LA    R3,1(,R3)          ADD 1 TO IT
         ST    R3,NOM             STORE IT BACK
         TM    11(R4),X'80'       TEST FOR AN ALIAS
         BNO   CHKRANGE           IF NO, SKIP CTR INCREMENTING
         L     R3,NOA             GET NO. ALIASES CTR
         LA    R3,1(,R3)          ADD 1 TO IT
         ST    R3,NOA             STORE IT BACK
CHKRANGE DS    0H
         CLC   0(8,R4),FRMEMB     CHECK TO SEE IF NAME IN RANGE
         BL    NEXTENT            LESS THEN 'FROM' NAME- FORGET
         CLC   0(8,R4),TOMEMB     CHECK AGAINST LAST NAME IN RANGE
         BH    NEXTENT            GREATER THAN 'TO' NAME- FORGET
         CLI   MASKFLG,C'Y'       IS THERE A MASK?
         BNE   ACCMEMB            NO..ACCEPT THIS MEMBER
         MVC   MEMBDATA,0(R4)     YES..
         MASK  MEMBMASK,MEMBDATA,MAXLEN,MAXLEN  CHECK OUT MEMBER
         LTR   R15,15             DOES MEMBER NAME FIT MASK?
         BNZ   NEXTENT            NO..GET NEXT MEMBER
ACCMEMB  DS    0H
         MVC   2(8,R5),0(R4)      YES PUT NAME IN MEMBER NAME LIST
         TM    11(R4),X'80'       TEST FOR AN ALIAS
         BNO   NOTALIAS           IF NO, SKIP NEXT INSTRUCTION
         MVI   1(R5),C'*'         INDICATE AN ALIAS
NOTALIAS DS    0H
         LA    R5,10(,R5)         GET NEXT AVAILABLE NAME POS.
         LA    R7,1(,R7)          ADD 1 TO NO. IN LIST CTR
         CH    R7,=H'7'           SEE IF CURRENT LIST FULL
         BNE   NEXTENT            IF NOT, PROCESS NEXT ENTRY
         LA    R9,MBRLINEP
         BAL   R10,ONEMESSG
         LA    R5,MBRS            RESET ADDRESS OF NEXT SLOT
         MVI   MBRLINE,C' '       CLEAR OUT THE MBR NAME LINE
         MVC   MBRLINE+1(75),MBRLINE
         SR    R7,R7              SET LIST COUNTER TO ZERO
NEXTENT  DS    0H
         SR    R2,R2              CLEAR REG. 2
         IC    R2,11(R4)          GET ENTRY LENGTH
         SLL   R2,27              DETERMINE ADDRESS OF THE
         SRL   R2,26              NEXT PDS ENTRY
         LA    R4,12(R2,R4)       STORE ADDRESS BACK IN REG. 4
         B     CHKEND             CHECK FOR END

***********************************************************************
***  CLOSE THE PARTITIONED DATASET AND PRINT LAST LINES.
***********************************************************************

EOFDIR   DS    0H
         CLOSE (SYSLIB)           DONE. CLOSE PDS
         LTR   R7,R7              ANY NAMES IN CURRENT LIST?
         BZ    PRTENT             IF NOT, DONT PRINT
         LA    R9,MBRLINEP
         BAL   R10,ONEMESSG
PRTENT   DS    0H
         L     R4,NOM             GET THE NO. OF MEMBERS
         S     R4,NOA             SUBTRACT THE NO. ALIASES
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   NOMEM,DWD2+12      STORE VALUE IN PRINT LINE
         L     R4,NOA             GET NO. OF ALIASES
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   NOALIAS,DWD2+12    STORE VALUE IN PRINT LINE
         L     R4,DIRU            GET NO. OF DIR. BLKS USED
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   DIRUSE,DWD2+13     STORE VALUE IN PRINT LINE
         L     R4,DIRALL          GET NO. OF DIR. BLKS
         S     R4,DIRU            SUBTRACT NO. USED -> UNUSED
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   DIRUNUSE,DWD2+13   STORE VALUE IN PRINT LINE
         PUTLINE PARM=PUTBLOCK,                                        *
               OUTPUT=(ENTLINE,TERM,SINGLE,DATA),MF=(E,IOPLADS)
         B     MEMRET             BRANCH TO RETURNING CODE
CANTOPEN DS    0H
         LA    R9,OPENERR
         BAL   R10,ONEMESSG
         LA    R9,1               SET ERROR FLAG.
MEMRET   DS    0H
         L     R10,RETADDR        RESTORE THE RETURN ADDRESS
         BR    R10                RETURN TO MAINLINE
         LTORG ,

***********************************************************************
***  OPEN THIS LIBRARIAN DATASET.
***********************************************************************

DADSET   DS    0H
         LA    R1,FAIROPL         POINT AT OPEN PARM LIST
         WXTRN FAIROPN
         ICM   R15,15,=V(FAIROPN) LOAD LIBRARIAN "OPEN" ROUTINE
         BZ    FAIRERR1           B. IF NOT AVAILABLE
         CALL  (15)
         LTR   R15,R15            PARM LIST O.K. ?
         BNZ   FAIRERR1
         CLI   FAIRORES,C'0'      WERE WE SUCCESSFUL???
         BE    DACONTIN           YES...
         LA    R1,FAIRCPL         POINT AT CLOSE PARM LIST
         WXTRN FAIRCLS
         ICM   R15,15,=V(FAIRCLS) LOAD LIBRARIAN "CLOSE" ROUTINE
         BZ    FAIRER1B           B. IF NOT AVAILABLE
         CALL  (15)               FAIR OPENED THE DA DATASET
         MVC   OPENDA+42(1),FAIRORES NO...SO TELL HIM
FAIRERR1 DS    0H
         LA    R9,OPENDA
         BAL   R10,ONEMESSG
FAIRER1B DS    0H
         LA    R9,1               SET ERROR FLAG
         L     R10,RETADDR        RESTORE THE RETURN ADDRESS
         BR    R10                RETURN TO MAINLINE

***********************************************************************
***  LOOP THROUGH THE INDEX
***********************************************************************

DACONTIN DS    0H
         XC    NOM(16),NOM
         MVC   MBRLINE(5),=CL5'MBRS:'
NEXTLINE DS    0H
         MVI   MBRLINE+5,C' '     CLEAR OUT THE MEMBER LIST
         MVC   MBRLINE+6(70),MBRLINE+5
         SR    R7,R7              SET LIST COUNTER TO ZERO
         LA    R5,MBRS            GET ADDRESS OF MEMBER NAME LIST
GETDAMOD DS    0H
         MVC   MODNAME(8),BLANKS  CLEAR PARAMETER
         LA    R1,FAIRMPL         POINT AT MOD PARM LIST
         WXTRN FAIRMOD
         ICM   R15,15,=V(FAIRMOD) LOAD LIBRARIAN "MODULE" ROUTINE
         BZ    FAIRERR2           B. IF NOT AVAILABLE
         CALL  (15)
         LTR   R15,R15            CHECK IF ENVIRONMENT O.K.
         BNZ   FAIRERR2
         CLI   FAIRMRES,C'0'      RETURNED WITH A MODULE???
         BE    SETUP              YES...
         CLI   FAIRMRES,C'1'      AT END OF INDEX???
         BE    EOFDA              YES...
         MVC   LOADERR+39(1),FAIRMRES STORE ERROR CODE
FAIRERR2 DS    0H
         LA    R9,LOADERR
         BAL   R10,ONEMESSG
         LA    R9,1               SET ERROR FLAG
         L     R10,RETADDR
         BR    R10                RETURN TO MAINLINE
SETUP    DS    0H
         L     R3,NOM
         LA    R3,1(,R3)          INCREMENT COUNTER
         ST    R3,NOM
         MVC   FAIRMMDN(8),MODNAME
         CLC   MODNAME(8),FRMEMB  CHECK TO SEE IF NAME IN RANGE
         BL    GETDAMOD           LESS THAN 'FROM' NAME...FORGET
         CLC   MODNAME(8),TOMEMB CHECK AGAINST LAST NAME IN RANGE
         BH    GETDAMOD           GREATER THAN 'TO' NAME...FILE END
         CLI   MASKFLG,C'Y'       IS THERE A MASK?
         BNE   ACCMOD             NO..ACCEPT THIS MEMBER
         MASK  MEMBMASK,MODNAME,8,8   CHECK OUT MEMBER
         LTR   R15,15             DOES MEMBER NAME FIT MASK?
         BNZ   GETDAMOD           NO..GET NEXT MEMBER
ACCMOD   DS    0H
         MVC   2(8,R5),MODNAME
         LA    R5,10(,R5)         GET NEXT AVAILABLE NAME POSITION
         LA    R7,1(,R7)          ADD 1 TO NUMBER IN LIST CTR.
         CH    R7,=H'7'           SEE IF CURRENT LIST FULL
         BNE   GETDAMOD           IF NOT,PROCESS NEXT ENTRY
         LA    R9,MBRLINEP
         BAL   R10,ONEMESSG
         MVC   MBRLINE(5),BLANKS  CLEAR OUT 'MBRS:'
         B     NEXTLINE

***********************************************************************
***  CLOSE THE DIRECT ACCESS DATASET AND PRINT THE LAST LINE
***********************************************************************

EOFDA    DS    0H
         LA    R1,FAIRCPL         POINT AT CLOSE PARM LIST
         ICM   R15,15,=V(FAIRCLS) LOAD LIBRARIAN "CLOSE" ROUTINE
         BZ    DAMEMS             B. IF NOT AVAILABLE
         CALL  (15)
         LTR   R7,R7              ANY NAMES IN CURRENT LIST???
         BZ    DAMEMS
         LA    R9,MBRLINEP
         BAL   R10,ONEMESSG
DAMEMS   DS    0H
         L     R4,NOM             LOAD NUMBER OF MODULES
         BAL   R10,CONVERT        CONVERT TO DISPLAY MODE
         MVC   DAMEM,DWD2+12      STORE IN PRINT LINE
         LA    R9,DENTLINE
         BAL   R10,ONEMESSG
         L     R10,RETADDR
         BR    R10

***********************************************************************
***  THIS ROUTINE CONVERTS THE CONTENTS OF REGISTER 4 TO DISPLAY
***  FORMAT AND STORES THE RESULT INTO DOUBLEWORD 'DWD2'.
***********************************************************************

CONVERT  DS    0H
         CVD   R4,DWD1
         MVC   DWD2(16),PATTERN
         ED    DWD2(16),DWD1
         BR    R10

***********************************************************************
*
*** ALL TSO PUTLINES EXECUTED FROM THIS ROUTINE.
*
***********************************************************************

ONEMESSG DS    0H
         PUTLINE PARM=PUTBLOCK,                                        *
               OUTPUT=((R9),TERM,SINGLE,DATA),MF=(E,IOPLADS)
         BR    R10

TWOMESSG DS    0H
         PUTLINE PARM=PUTBLOCK,                                        *
               OUTPUT=((R9),TERM,MULTLIN,DATA),MF=(E,IOPLADS)
         BR    R10

***********************************************************************
***    THIS ROUTINE VALIDATES THE MASK IF THERE IS ONE ENTERED      ***
***********************************************************************

CHKMASK  DS    0H
         SAVE  (14,12),,*         HOUSEKEEPING
         LR    R12,R15
         USING CHKMASK,R12
         ST    R13,CHKSAVE+4
         LA    R2,CHKSAVE
         ST    R2,8(R13)
         LR    R13,R2
         XR    R15,R15
         L     R2,0(,R1)          LOAD ADDRESS OF PDE
         LH    R3,4(,R2)          STORE LENGTH OF MASK
         L     R4,0(0,R2)         LOAD POINTER TO MASK
         NI    QUESFLG,X'00'      INITIALIZE FLAG
CHK001   DS    0H
         CLI   0(R4),C' '         IS MASK CHAR BLANK?
         BE    CHKERR             YES..MASK IS INVALID
         CLI   0(R4),C'?'         IS MASK CHAR A ? MARK ?
         BNE   CHK002             NO..CONTINUE
         TM    QUESFLG,X'FF'      YES..IS IT THE FIRST ? TO BE FOUND?
         BO    CHKERR             NO..INVALID MASK, MORE THAN 1 ?
         OI    QUESFLG,X'FF'      SET FLAG TO INDICATE ? FOUND
CHK002   DS    0H
         BCT   R3,*+8             IF NOT END OF MASK, GO AROUND EXIT
         B     CHKEXIT            YES..END
         LA    R4,1(,R4)          ADJUST PTR TO NEXT CHAR IN MASK
         B     CHK001             CONTINUE
CHKERR   DS    0H
         L     R15,=F'4'          SET ERROR RETURN CODE
CHKEXIT  DS    0H
         L     R13,4(R13)         RESTORE POINTER TO CALLERS SAVEAREA
         DROP  R12
         RETURN (14,12),RC=(15)   RESTORE REGISTERS
         LTORG ,

***********************************************************************
*** FORMAT 1 DSCB AREA
***********************************************************************

DS1      DS    0D
         IECSDSL1 1                                            #DD03312

***********************************************************************
*** PRINT LINES
***********************************************************************

DSNLINEP DC    H'84'
         DC    H'0'
DSNLINE  DC    CL80'Dsn: '

DCBTITLE DC    A(DCBLINE)
         DC    H'78'
         DC    H'0'
         DC    C'Dcb:   Dsorg-Recfm-Lrecl-Blksize-Optcd-'
         DC    C'Keylen-RKP--Created-Expires-LastRef'
DCBLINE  DC    A(0)
         DC    H'78'
         DC    H'0'
         DC    C'        '
DSORG    DS    CL3
         DC    C'  '
RECFM    DS    CL5
         DC    C' '
LRECL    DS    CL5
         DC    C'  '
BLKSIZE  DS    CL5
         DC    C'    '
OPTCD    DS    CL2
         DC    C'   '
KEYLEN   DS    CL4
         DC    C'  '
RKP      DS    CL3
         DC    C'   '
CRTDT    DS    CL5
         DC    C'   '
EXPDT    DS    CL5
         DC    C'   '
REFDT    DS    CL5
         DC    C' '

SPATITLE DC    A(SPALINE)
         DC    H'51'
         DC    H'0'
         DC    C'Space: Units--Alloc---Used--Extents--'
         DC    C'2ndary Qty.'
SPALINE  DC    A(0)
         DC    H'51'
         DC    H'0'
         DC    C'        Trks  '
TRKA     DS    CL5
         DC    C'  '
TRKU     DS    CL5
         DC    C'     '
EXTS     DS    CL2
         DC    C'   '                                          #DD03312
SECA     DS    CL5                                             #DD03312
SECU     DS    CL5
         DC    C' '

MBRLINEP DC    H'80'
         DC    H'0'
MBRLINE  DS    0CL76
MBR1     DS    CL6
MBRS     DS    CL70

ENTLINE  DC    H'70'
         DC    H'0'
         DS    0CL66
         DC    C'       '
NOMEM    DS    CL4
         DC    C' Members  '
NOALIAS  DS    CL4
         DC    C' Aliases   Dir. Blks: '
DIRUSE   DS    CL3
         DC    C' Used '
DIRUNUSE DS    CL3
         DC    C' Unused'

DENTLINE DC    H'24'
         DC    H'0'
         DS    0CL20
         DC    CL7' '
DAMEM    DS    CL4
         DC    C' Members '

ERRMSGP  DC    H'84'
         DC    H'0'
ERRMSG   DS    CL80

BADMSG   DC    H'27'
         DC    H'0'
         DC    C' Error in parse routine.'

OPENERR  DC    H'23'
         DC    H'0'
         DC    C' Unable to open dataset.'

OPENDA   DC    H'44'
         DC    H'0'
         DC    C' Unable to open LIBRARIAN dataset (RC=0)'

LOADERR  DC    H'41'
         DC    H'0'
         DC    C' Error reading LIBRARIAN index (RC=0)'

***********************************************************************
*** WORK AREAS, TABLES AND CAMLSTS.
***********************************************************************

VERSION  DC    C'V1.8...Compile Date= &SYSTIME &SYSDATE'

VOLADDR  DS    F

VOLTABLE DS    CL100
*
CHKSAVE  DS    18F
SAVE10   DS    F
DETSTORE DS    F
SAVE28   DS    8F
RETADDR  DS    F
QUESFLG  DC    X'00'
REQFLAGS DS    0CL5
DCB      DS    C
SPACE    DS    C
MEMB     DS    C
LOCATE   DS    C
MASKFLG  DS    C
DSNLEN   DS    H
DSN      DS    CL44
STDSN    DS    CL44
DSNPREF  DC    CL7' '
DSNPREFL DS    F
VOL      DS    CL6
TGETVOL  DS    CL10
FLGS     DS    X
ALLOERR  EQU   X'08'
FOUND    EQU   X'80'
INTERNAL DC    C'N'
FRMEMB   DC    XL8'0000000000000000'
TOMEMB   DC    XL8'FFFFFFFFFFFFFFFF'
MEMBMASK DC    XL8'4040404040404040'
MEMBDATA DC    XL8'4040404040404040'
MAXLEN   DC    F'8'
DWD1     DS    D
DWD2     DS    2D
PATTERN  DC    X'40',13X'20',X'2120'
FWORD    DS    XL4
BLK8     DC    CL8' '
HEX00    DC    XL8'0000000000000000'
HEXFF    DC    XL8'FFFFFFFFFFFFFFFF'
HEXTAB   DC    CL16'0123456789ABCDEF'

********************************************************************
*                                                                  *
*  CONSTANTS FOR LIBRARIAN INTERFACE ROUTINES                      *
*                                                                  *
********************************************************************
FAIRWKAR DC    CL20' '
FAIROMCD DC    CL4' '
FAIROOPS DC    CL20'2011  '
FAIRDDDN DC    CL8' '
FAIRMMDN DC    CL8' '
FAIRMOPS DC    CL20'11000000 '
FAIRORES DC    CL120' '          FAIROPN RESULT AREA
FAIRMRES DS    0CL800            FAIRMOD RESULT AREA
         DC    CL12' '
MODNAME  DC    CL8' '
         DC    CL140' '
         DC    CL200' '
         DC    CL200' '
         DC    CL200' '
FAIRCRES DC    CL8' '            FAIRCLS RESULT AREA
********************************************************************
*                                                                  *
*  PARAMETER LISTS FOR LIBRARIAN INTERFACE ROUTINES                *
*                                                                  *
********************************************************************
FAIROPL  DS    0F                OPN PARM LIST
         DC    A(FAIRWKAR)
         DC    A(FAIRORES)
         DC    A(FAIROMCD)
         DC    A(FAIROOPS)
         DC    A(FAIRDDDN)
         DC    A(0)              FAIRCDDN
         DC    A(0)              FAIRTDDN
         DC    A(0)              FAIRBA1
         DC    X'80'
         DC    AL3(0)            FAIRBA2
FAIRMPL  DS    0F                MOD PARM LIST
         DC    A(FAIRWKAR)
         DC    A(FAIRMRES)
         DC    A(FAIRMMDN)
         DC    A(FAIRMOPS)
         DC    A(0)              FAIRMARL
         DC    X'80'
         DC    AL3(0)            FAIRMDAL
FAIRCPL  DS    0F                CLS PARM LIST
         DC    A(FAIRWKAR)
         DC    X'80'
         DC    AL3(FAIRCRES)

BLANKS   DC    CL8' '
MODINFO  DS    CL100

DSORGTBL DC    X'03',CL3'ISU',X'81'
         DC    X'03',CL3'PSU',X'41'
         DC    X'03',CL3'DAU',X'21'
         DC    X'03',CL3'POU',X'03'
         DC    X'02',CL3'IS ',X'80'
         DC    X'02',CL3'PS ',X'40'
         DC    X'02',CL3'DA ',X'20'
         DC    X'02',CL3'PO ',X'02'
DSORGUN  DC    X'02',CL3'?? ',X'00'
DSORGTBX DC    X'01',CL3'U  ',X'01'

EXTTBL   DC    AL4(DS1EXT1)                                    #DD03312
         DC    AL4(DS1EXT2)                                    #DD03312
         DC    AL4(DS1EXT3)                                    #DD03312
WKTBL    DC    AL4(WKAREA+4)
         DC    AL4(WKAREA+14)
         DC    AL4(WKAREA+24)
         DC    AL4(WKAREA+34)
         DC    AL4(WKAREA+45)
         DC    AL4(WKAREA+55)
         DC    AL4(WKAREA+65)
         DC    AL4(WKAREA+75)
         DC    AL4(WKAREA+85)
         DC    AL4(WKAREA+95)
         DC    AL4(WKAREA+105)
         DC    AL4(WKAREA+115)
         DC    AL4(WKAREA+125)
WKAREA   DS    0D
         DS    265C
UCBTYPE  DS    C
TRKCYL   DC    H'0'
TOTRK    DS    F                                               #DD03312
NOM      DS    F
NOA      DS    F
DIRALL   DS    F
DIRU     DS    F
LASTDIR  DS    C
GETVOLM  DC    CL27'Enter Volume/Serial Number-'
WRKPPL   DS    7F
PARSEPDL DS    F
DAPL     DS    4F
DAPLAPB  DS    F
IOPLADS  DC    4F'0'

PARMLIST DS    0F               PARMLIST FOR UCB LOOK-UP WITH
PARMWA   DS    F                IOSVSUCB SERVICE ROUTINE.
PARMDEVT DS    F
PARMUCB  DS    F
ADDRUCB  DS    F

         DS    0D
         UCBSCAN MF=(L,UCBSLST)    UCBSCAN PARAMETER LIST      #DD98129
UCBDEV#  DS    F                   UCBSCAN RETURNED DEVICE NO. #DD98129
UCBSWORK DS    CL100               UCBSCAN WORK AREA           #DD98129
UCBSAREA DS    XL48                UCBSCAN UCB AREA            #DD98129

ECB      DC    F'0'
DSCBTBL  DC    F'0'
         DC    AL4(DSCBM04)
         DC    AL4(DSCBM08)
         DC    AL4(DSCBM12)
         DC    AL4(DSCBM16)
         DC    AL4(DSCBM20)
DSCBM04  DC    H'38',H'0',C' - required catalog not accessible'
DSCBM08  DC    H'38',H'0',C' - not found on volume XXXXXX.    '
DSCBM12  DC    H'38',H'0',C' - permanent I/O error on volume. '
DSCBM16  DC    H'38',H'0',C' - invalid work area pointer.     '
DSCBM20  DC    H'38',H'0',C' - unknown VTOC error.            '

ALLONACC DC    C'- required volume not accessible.  '
ALLOSECM DC    C'- not authorized to access dataset.'

DEVCLASS DS    CL1

         #EXEC ,

EXTOUT   DS    0F
ATIOT    DC    F'0'
TSOFLAG  DC    F'0'

         DC    C' '
PRTLINE  DS    CL133

CATBLK   CAMLST NAME,DSN,,WKAREA

DSCBLK   CAMLST SEARCH,DSN,VOL,WKAREA,EADSCB=OK                #DD12062

NEXTBLK  CAMLST SEEK,DS1PTRDS,VOL,WKAREA,EADSCB=OK             #DD12062

NEXT13   CAMLST SEEK,DS3PTRDS,VOL,WKAREA,EADSCB=OK             #DD12062

FMT4DSCB CAMLST SEARCH,DSCB4KEY,VOL,DSCBWORK,EADSCB=OK         #DD12062

         DS    0F
DSCBWORK DS    XL148
DSCB4KEY DS    0XL44
         DC    44XL1'04'

PUTBLOCK PUTLINE MF=L

***********************************************************************
DYNRBADD DC    0F'0',X'80',AL3(DYNAMRB)
DYNAMRB  EQU   *
DYNAMLTH DC    AL1(20)        LENGTH
DYNAMVRB DC    XL1'01'        VERB
DYNAMFL1 DC    XL2'0000'      FLAGS
DYNAMERR DC    XL2'0000'      ERROR CODE
DYNAMINF DC    XL2'0000'      INFORMATION CODE
DYNAMTXA DC    A(DYNAMTXT)    DYNAMIC TEXT ADDRESS POINTERS
         DC    F'0'
DYNAMFL2 DC    F'0'           FLAGS 2
*
DYNAMTXT DC    A(DYNAMXXA)
         DC    A(DYNAMXXB)
         DC    A(DYNAMXXC)
         DC    A(DYNAMXXD)
         DC    A(DYNAMXXE)
         DC    X'80',AL3(DYNAMXXF)
*
DYNAMTBL EQU   *
DYNAMXXA DC    XL2'0001',XL2'0001',AL2(8)
DYNAMDDN DS    CL8            DDNAME
DYNAMXXB DC    XL2'0002',XL2'0001'
DYNAMDSL DC    H'44'
DYNAMDSN DS    CL44           DSNAME
DYNAMXXC DC    XL2'0004',XL2'0001',AL2(1),XL1'08'
DYNAMXXD DC    XL2'0010',XL2'0001',AL2(6)
DYNAMVOL DS    CL6            VOLSER
DYNAMXXE DC    XL2'0015',XL2'0001',AL2(8)                      #DD11328
DYNAMUCB DC    CL8'/???? '    UCB NAME                         #DD11328
DYNAMXXF DC    XL2'001C',XL2'0000'
DDNPTR   DC    A(DYNAMDDN),Y(8)
*
***********************************************************************
*** DEFAULT SERVICE ROUTINE (IKJEHDEF) CONTROL BLOCKS
***********************************************************************

DFPL     DS    0F      DEFAULT PARAMETER LIST
DFPLUPT  DS    A            PTR TO UPT
DFPLECT  DS    A            PTR TO ECT
DFPLECB  DS    A            PTR TO CP'S ECB
DFPLDFPB DS    A            PTR TO DEFAULT PARAMETER BLOCK
DFPB     DS    0F      DEFAULT PARAMETER BLOCK
DFPBCODE DS    0AL1         DEFAULT ENTRY CODE
DFPBDSN  DS    A            PTR TO DSNLEN AND DSN
DFPBCNTL DS    0AL1         DEFAULT CONTROL CODE
DFPBPSCB DS    A            PTR TO PSCB
DFPBLORC DS    0AL1         LOCATE RETURN CODE
DFPBQUAL DC    AL4(0)       PTR TO DEFAULT QUALIFIER
DFPBCAT  DC    AL4(0)       PTR TO USER CATALOG
DFPBPSWD DC    AL4(0)       PTR TO PASSWORD

***********************************************************************
*** IGWFAMS Parameters
***********************************************************************
FAMSPARM DS    3F                                              #DD16151
FAMSFMH  DS    0F,XL136                                        #DD16151
FAMSFMHL EQU   *-FAMSFMH                                       #DD16151
FAMSFMO  DS    0F,XL1104                                       #DD16151
FAMSFMOL EQU   *-FAMSFMO                                       #DD16151
FAMSLIST DS    3F                                              #DD16151
FAMPTRL1 DS    6F                                              #DD16151
FAMPTRL2 DS    6F                                              #DD16151
FAMPTRL3 DS    6F                                              #DD16151
         DS    A(*-*)                                          #DD16151
         DS    A(*-*)                                          #DD16151

***********************************************************************
*** DCB FOR PDS'S WHOSE MEMBERS ARE BEING LISTED
***********************************************************************

SYSLIB   DCB   DSORG=PS,RECFM=F,LRECL=256,BLKSIZE=256,                 X
               MACRF=GL,EODAD=EOFDIR,                                  X
               DCBE=SYSLDCBE                                   #DD12062
SYSLDCBE DCBE  EADSCB=OK                                       #DD12062

         PRINT NOGEN
PCL      IKJPARM

DSNLIST  IKJPOSIT DSNAME,LIST,UPPERCASE,                               C
               PROMPT='ONE OR MORE DATASET NAMES'

ALLWD    IKJKEYWD DEFAULT='NOALL'
         IKJNAME  'NOALL'
         IKJNAME  'ALL'

DCBWD    IKJKEYWD DEFAULT='NODCB'
         IKJNAME  'NODCB'
         IKJNAME  'DCB'

SPACEWD  IKJKEYWD DEFAULT='NOSPACE'
         IKJNAME  'NOSPACE'
         IKJNAME  'SPACE'

MEMBWD   IKJKEYWD DEFAULT='NOMEMB'
         IKJNAME  'NOMEMB'
         IKJNAME  'MEMBERS',SUBFLD=MEMSUB

LOCWD    IKJKEYWD DEFAULT='NOLOC'
         IKJNAME  'NOLOC'
         IKJNAME  'LOCATE'

FROMWD   IKJKEYWD ,
         IKJNAME  'FROM',SUBFLD=FROMSUB

TOWD     IKJKEYWD ,
         IKJNAME  'TO',SUBFLD=TOSUB

VOLWD    IKJKEYWD ,
         IKJNAME 'VOL',SUBFLD=VOLSUB

MEMSUB   IKJSUBF ,
MASK     IKJIDENT 'MASK',UPPERCASE,MAXLNTH=8,                          X
               CHAR,VALIDCK=CHKMASK

FROMSUB  IKJSUBF ,
FROM     IKJIDENT 'FROM',MAXLNTH=8,OTHER=ALPHANUM,                     X
               PROMPT='THE ''FROM'' MEMBER NAME',                      X
               HELP=('FIRST MEMBER NAME IN A RANGE OF MEMBER NAMES')

TOSUB    IKJSUBF ,
TO       IKJIDENT 'TO',MAXLNTH=8,OTHER=ALPHANUM,                       X
               PROMPT='THE ''TO'' MEMBER NAME',                        X
               HELP=('LAST MEMBER NAME IN A RANGE OF MEMBER NAMES')

VOLSUB   IKJSUBF ,
VOLSER   IKJIDENT 'VOL',LIST,OTHER=ALPHANUM,                           X
               PROMPT='THE ''VOLSER'' LIST',                           X
               HELP=('VOLUMES TO BE SCANNED')

         IKJENDP ,
         PRINT GEN

         DYNSPACE ,
         ORG   DYNSP1+4+4         4 = START OF RB  + 4 = ERROR CODE
DYNAMERA DS    XL2                ERROR CODE
         ORG   ,

***********************************************************************
***  PARSE DESCRIPTOR ENTRY FORMAT.
***********************************************************************

DSNPDE   DSECT ,
ADDRDSN  DS    A
LENDSN   DS    H
FLGSDSN  DS    H
         DS    4F
NEXTPDE  DS    A

VOLPDE   DSECT ,
ADDRVOL  DS    F
LENVOL   DS    H
FLAGVOL  DS    H
NEXTVOL  DS    F

***********************************************************************
***  DSCB EXTENT FORMAT
***********************************************************************

EXTENT   DSECT
ID       DS    C
SEQ      DS    C
CCA      DS    H
TTA      DS    H
CCB      DS    H
TTB      DS    H

         #DSECTS ALLOC,CVT,TSO,UCB,PSA

         IHADFA ,                                              #DD16151
         IHADFVT ,                                             #DD16151

         #REGS ,
         END   ,
