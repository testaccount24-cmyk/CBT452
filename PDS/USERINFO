USERINFO TITLE '- PASS TSO USER INFORMATION TO CLIST VIA &&SYSCMD OR VI*
                A SYMBOLIC SYSTEM VARIABLES'
*---------------------------------------------------------------------*
*                                                                     *
*        Support Email Address: zOS.JES2@Gmail.com                    *
*                                                                     *
*---------------------------------------------------------------------*

***********************************************************************
*                                                                     *
*   FUNCTION: PASS USER INFO TO CLIST VIA SYMBOLIC VARIABLES          *
*                                                                     *
*   THE SUPPORTED VARIABLES ARE:                                      *
*       ACCT  - JOB CARD ACCOUNTING INFORMATION                       *
*       CPID  - CPU SERIAL NUMBER                                     *
*       DSSL  - DF/DSS RELEASE/VERSION                                *
*       FMID  - SCP SMP FMID                                          *
*       IODF  - ACTIVE I/O CONFIGURATION                              *
*       IPLD  - LAST IPL DATE                                         *
*       IPLT  - LAST IPL TIME                                         *
*       IPLU  - IPL SYSRES UNIT ADDRESS                               *
*       IPLV  - IPL SYSRES VOLUME SERIAL                              *
*       JOB#  - CURRENT JOB NUMBER (TSU 1234)                         *
*       JOBN  - CURRENT JOB NAME                                      *
*       MCAT  - MASTER CATALOG NAME                                   *
*       MODE  - SYSTEM EXECUTION MODE (XA OR 370)                     *
*       MODL  - CPU MODEL NUMBER (IE. 3083)                           *
*       PGMR  - PROGRAMMER NAME                                       *
*       REGN  - USER'S REQUESTED REGION SIZE                          *
*       REL#  - SCP RELEASE/LEVEL NUMBER                              *
*       RGRP  - RACF GROUP                                            *
*       RUSR  - RACF USER                                             *
*       SCPN  - SCP PRODUCT NAME                                      *
*       SMFI  - SMF IDENTIFIER FOR THIS SYSTEM                        *
*       SNAM  - SYSTEM IDENTIFIER                                     *
*       SSNM  - SUBSYSTEM NAME (JES2)                                 *
*       TERM  - TERMINAL TYPE                                         *
*       TMID  - TERMINAL ID                                           *
*       USER  - CURRENT USERID                                        *
*       VERS  - USER SCP VERSION IDENTIFIER                           *
*       WDAY  - DAY OF THE WEEK                                       *
*                                                                     *
*   THE SYMBOLS DECLARED IN IEASYMXX WILL ALSO BE CREATED.            *
*   IF ANY OF THESE SYMBOLS ARE DUPLICATES OF THE STANDARD "USERINFO" *
*   SYMBOLS, THE IEASYMXX SYMBOLS WILL PREVAIL.                       *
*                                                                     *
*   FUNCTION:                                                         *
*   THIS COMMAND IS USED TO OBTAIN USER & SYSTEM INFORMATION FROM     *
*   WITHIN A COMMAND PROCEDURE (CLIST).  SYSXXXX VARIABLES ARE        *
*   CREATED, AND IF AN OPTION IS SPECIFIED, THE CORRESPONDING         *
*   INFORMATION IS INSERTED INTO THE &SYSSCMD VARIABLE.  AS THE       *
*   &SYSSCMD VARIABLE REPRESENTS THE LAST SUBCOMMAND NAME, THE        *
*   VARIABLE'S INFORMATION MUST BE USED IMMEDIATELY AFTER INVOKING    *
*   USERINFO, OR COPIED TO ANOTHER VARIABLE OF THE USER'S CHOICE.     *
*                                                                     *
*   EXTERNAL ROUTINES: IKJCT441                                       *
*                                                                     *
***********************************************************************

***********************************************************************
*                                                                     *
*   AN EXAMPLE OF A CLIST WHICH USES USERINFO:                        *
*                                                                     *
*   PROC 0                                                            *
*   USERINFO ACCT                                                     *
*   SET &A EQ &SYSSCMD                                                *
*   WRITE USERID &SYSUID - ACCOUNT:&SYSACCT TERMINAL:&SYSTMID         *
*                                                                     *
*   OR                                                                *
*                                                                     *
*   PROC 0                                                            *
*   USERINFO                                                          *
*   WRITE USERID &SYSUID ACCOUNT &SYSACCT                             *
*                                                                     *
*        #DD99252 - ALLOW FOR 4 BYTE UCB ADDRESS                      *
*        #DD99328 - ADD SYSTEM SYMBOLS DECLARED IN IEASYMXX           *
*        #DD00053 - ADD MASTER CATALOG NAME                           *
*        #DD00089 - ADD RACF USER & GROUP NAMES                       *
*        #DD01215 - ADD IODF SUFFIX                                   *
*        #DD01254 - FIX DF/DSS LEVEL                                  *
*        #DD02310 - FIX ACCESS TO UCB (AMODE=31)                      *
*        #DD02316 - CONVERT MODULE TO AMODE=31 & RMODE=ANY            *
*        #DD10356 - CLEAR SYMBOL VARIABLE DATA AREA                   *
*        #DD12214 - ADD IKJCT441 RETURN CODE MESSAGE.                 *
*        #DD19130 - ADD SYSNODE.                                      *
*                                                                     *
***********************************************************************

         ACONTROL OPTABLE(ZS3)     ASSEMBLY OPTCDE TABLE
         SPLEVEL  SET=6            SPECIFY OS/390 R2 MACRO FORMAT
         SYSSTATE ARCHLVL=2        ASSEMBLY REQUIRES Z/ARCHITECTURE
         SYSSTATE OSREL=ZOSV1R13   ASSEMBLY REQUIRES Z/OS 1.13 & HIGHER

*        Note:
*          JES3 Users can remove the following lines and SYSNODE

         COPY  $HASPGBL                                        #DD19130
DSECTS   $MODULE ENVIRON=JES2,                                 #DD19130*
               TITLE='REQUIRED JES2 DSECTS',                   #DD19130*
               $HASPEQU,           REQUIRED BY DSECTS          #DD19130*
               $CADDR,             REQUIRED BY DSECTS          #DD19130*
               $MIT,               REQUIRED BY DSECTS          #DD19130*
               $MITETBL,           REQUIRED BY DSECTS          #DD19130*
               $PADDR,             REQUIRED BY DSECTS          #DD19130*
               $PARMLST,           REQUIRED BY DSECTS          #DD19130*
               $PSV,               REQUIRED BY DSECTS          #DD19130*
               $USERCBS,           REQUIRED BY DSECTS          #DD19130*
               $HFAME,             REQUIRED BY DSECTS          #DD19130*
               $SCAT,              REQUIRED BY DSECTS          #DD19130*
               $XECB,              REQUIRED BY DSECTS          #DD19130*
               $HCCT               HASP COMMON TABLE           #DD19130
         $MODEND ,                                             #DD19130
         TITLE ' '                                             #DD19130
         PRINT GEN                                             #DD19130

         GBLB  &REGS##(3)
&REGS##(3) SETB 1

USERINFO #START BASE=(R12,R11),                                #DD00053*
               #REGS=NONE,                                     #DD19130*
               AMODE=31,RMODE=ANY,                             #DD02316*
               WKDSECT=USERWORK,SP=0,LOC=BELOW,                #DD12214*
               REG1=R10,USING=(CPPL,R10,PSA,0),                #DD00053*
               APARS=,COPY=YES,                                        *
               LEVEL=V001R11                                   #DD19130
         L     R9,CPPLECT          LOAD ECT ADDRESS
         USING ECT,R9

*-------
*        INITIALIZE WORKAREA
*-------
         XC    CPECB,CPECB         CLEAR ECB
         LA    R15,GFPARMS         LOAD IKJEFF19 PLIST ADDRESS
         ST    R15,JEFF19@
         LA    R15,TSVEUPDT        LOAD ENTRY CODE
         ST    R15,ECODE
         LA    R15,ECODE           LOAD ENTRY CODE ADDRESS
         ST    R15,CVAREC@
         MVC   VARNAME,=CL7'SYSXXXX'
         LA    R15,VARNAME         LOAD VARIABLE NAME ADDRESS
         ST    R15,VARNAME@
         LA    R15,VARNAME@        LOAD VARIABLE NAME POINTER ADDRESS
         ST    R15,CVARNPT@
         MVC   NAMELEN,=F'7'       INITIALIZE VARIABLE NAME LENGTH
         LA    R15,NAMELEN         LOAD VARIABLE NAME LENGTH  ADDRESS
         ST    R15,CVARNLN@
         LA    R15,VARDATA         LOAD VARIABLE DATA ADDRESS
         ST    R15,VARDATA@
         LA    R15,VARDATA@        LOAD VARIABLE DATA POINTER ADDRESS
         ST    R15,CVARDPT@
         LA    R15,DATALEN         LOAD VARIABLE DATA LENGTH  ADDRESS
         ST    R15,CVARDLN@
         LA    R15,TOKEN           LOAD TOKEN ADDRESS
         O     R15,=X'80000000'    INDICATE END OF PARAMETER LIST
         ST    R15,CVARTKN@

         L     R15,FLCCVT          LOAD CVT ADDRESS
         USING CVTMAP,R15
         L     R15,CVTTVT          LOAD TVT ADDRESS
         USING TSVT,R15
         L     R15,TSVTVACC        LOAD IKJCT441 ADDRESS
         DROP  R15
         ST    R15,CLISTRTN

*-------
*        PARSE THE CURRENT COMMAND BUFFER
*-------
         LA    R1,WRKPPL           LOAD PPL ADDRESS
         USING PPL,R1
         MVC   PPLUPT,CPPLUPT      COPY UPT ADDRESS
         MVC   PPLECT,CPPLECT      COPY ECT ADDRESS
         MVC   PPLCBUF,CPPLCBUF    COPY COMMAND BUFFER ADDRESS
         LA    R15,CPECB           LOAD ECB ADDRESS
         ST    R15,PPLECB
         MVC   PPLPCL,=A(INFOPCL)  LOAD PCL ADDRESS
         LA    R15,CPANS           LOAD PDL ANSWER ADDRESS
         ST    R15,PPLANS
         DROP  R1
         CALLTSSR EP=IKJPARS,MF=(E,(R1))
         LTR   R15,R15             CHECK PARSE RETURN CODE
         BZ    USER0100            B. IF SUCCESSFUL
         #SETRC (R15)              SET RETURN CODE
         ST    R15,GFRCODE         STORE RETURN CODE
         MVC   GFCALLID,=AL2(GFPARSE)
         ST    R10,GFCPPLP         STORE CPPL ADDRESS          #DD00053
         LA    R15,CPECB
         ST    R15,GFECBP          STORE ECB ADDRESS
         LA    R1,JEFF19@          LOAD PLIST POINTER ADDRESS
         LINK  EP=IKJEFF19         CALL GENERAL FAIL ROUTINE
         B     USEREXIT

*-------
*        LOAD ADDRESS OF FIELD REQUESTED TO BE INSERTED INTO &SYSCMD
*-------
USER0100 DS    0H
         L     R3,CPANS            LOAD PDL ADDRESS
         USING IKJPARMD,R3
         L     R5,PARAM            LOAD PARAMETER ADDRESS
         LH    R6,PARAM+4          LOAD PARAMETER LENGTH

*-------
*        CREATE "SYSACCT" VARIABLE
*-------
         L     R15,PSATOLD         LOAD TCB  ADDRESS
         USING TCB,R15
         L     R14,TCBJSCB         LOAD JSCB ADDRESS
         USING IEZJSCB,R14
         L     R14,JSCBACT         LOAD ACTIVE JSCB ADDRESS
         L     R14,JSCBSSIB        LOAD SSIB ADDRESS
         USING SSIB,R14
         MVC   SYSJOB#,SSIBJBID    "JOB09999" / "TSU09999" / "STC09999"
         L     R14,TCBTCT          LOAD TCT  ADDRESS
         USING SMFTCT,R14
         L     R14,TCTLCTAD        LOAD LCT  ADDRESS
         USING LCT,R14
         L     R14,LCTJCTAD        LOAD JCT  ADDRESS
         USING JCT,R14
         MVC   SYSJOBN,JCTJNAME    SAVE JOB NAME
         MVC   SYSUSER,JCTUSER     SAVE USER IDENTIFIER
         TM    SYSUSER,X'BF'       CHECK IF "USER" FILLED IN
         BM    USER0199            B. IF YES
         MVC   SYSUSER,SYSJOBN     ELSE DEFAULT TO JOBNAME
USER0199 DS    0H
         SLR   R15,R15
         ICM   R15,7,JCTACTAD      LOAD ACT  ADDRESS
         USING IEFAACTB-16,R15
         MVC   SYSPGMR,ACTPRGNM    SAVE PROGRAMMER NAME

         MVC   SYSACCT,BLANKS
         LA    R1,ACTACCNT         LOAD ACCOUNTING FIELD ADDRESS
         MVI   SYSACCT,C'('        INSERT OPENNING BRACKET
         LA    R2,SYSACCT+1        POINT TO START OF OUTPUT BUFFER
         SLR   R4,R4
         ICM   R4,1,ACTJNFLD       CHECK IF ANY ACCOUNTING FIELDS EXIST
         BZ    USER0500            B. IF NOT
         B     USER0300
USER0200 DS    0H
         MVI   0(R2),C','          INSERT ACCOUNTING FIELD SEPARATOR
         LA    R2,1(,R2)           ADVANCE TO NEXT BYTE
USER0300 DS    0H
         SLR   R3,R3
         ICM   R3,1,0(R1)          LOAD LENGTH OF ACCOUNTING FIELD
         BZ    USER0400            B. IF ZERO LENGTH ACCOUNTING FIELD
         BCTR  R3,0                DECREMENT FOR EXECUTE
         #EXEC R3,MVC,0(*-*,R2),1(R1)
         LA    R1,2(R3,R1)         POINT TO NEXT ACCOUNTING FIELD
         LA    R2,1(R3,R2)         POINT TO NEXT OUTPUT AREA
USER0400 DS    0H
         BCT   R4,USER0200         PROCESS ALL ACCOUNTING FIELDS
USER0500 DS    0H
         MVI   0(R2),C')'          INSERT ENDING QUOTE
         LA    R2,1(,R2)           POINT TO END OF ACCOUNTING AREA
         LA    R1,SYSACCT          POINT TO START OF ACCOUNTING AREA

         SR    R2,R1               CALCULATE LENGTH OF ACCOUNTING FIELD
         LA    R1,SYSACCT          LOAD ADDRESS OF VARIABLE DATA
         LA    R15,=C'ACCT'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSCPID" VARIABLE
*-------
         L     R15,PSAPCCAV        LOAD PCCA ADDRESS
         USING PCCA,R15
         MVC   SYSCPID,PCCACPID    SAVE CPU SERIAL NUMBER
         DROP  R15
         LA    R1,SYSCPID          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSCPID        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'CPID'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSWDAY" VARIABLE
*-------
         #DATE SYSWDAY,FORMAT='DAYOFWEEK'
         LA    R1,SYSWDAY          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSWDAY        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'WDAY'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSRUSR" AND "SYSRGRP" VARIABLES
*-------
         MVC   SYSRGRP,BLANKS                                  #DD00089
         MVC   SYSRUSR,BLANKS                                  #DD00089
         L     R15,PSAAOLD         A(ASCB)                     #DD00089
         USING ASCB,R15                                        #DD00089
         ICM   R15,15,ASCBASXB     A(ASXB)                     #DD00089
         BZ    USER0550                                        #DD00089
         USING ASXB,R15                                        #DD00089
         ICM   R15,15,ASXBSENV     A(ACEE)                     #DD00089
         BZ    USER0550                                        #DD00089
         USING ACEE,R15                                        #DD00089
         SLR   R1,R1                                           #DD00089
         ICM   R1,1,ACEEGRPL       L(RACF GROUP NAME)          #DD00089
         BZ    USER0540                                        #DD00089
         LA    R14,ACEEGRPN        A(RACF GROUP NAME)          #DD00089
         #EXEC -R1,MVC,SYSRGRP(*-*),0(R14)                     #DD00089
USER0540 DS    0H
         SLR   R1,R1                                           #DD00089
         ICM   R1,1,ACEEUSRL       L(RACF USER)                #DD00089
         BZ    USER0550                                        #DD00089
         LA    R14,ACEEUSRI        A(RACF USER)                #DD00089
         #EXEC -R1,MVC,SYSRUSR(*-*),0(R14)                     #DD00089
         DROP  R15                                             #DD00089

USER0550 DS    0H
         LA    R1,SYSRGRP          A(VARIABLE DATA)            #DD00089
         LA    R2,L'SYSRGRP        L(VARIABLE DATA)            #DD00089
         LA    R15,=C'RGRP'        A(VARIABLE SUFFIX)          #DD00089
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE#DD00089

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME"    #DD00089

         LA    R1,SYSRUSR          A(VARIABLE DATA)            #DD00089
         LA    R2,L'SYSRUSR        L(VARIABLE DATA)            #DD00089
         LA    R15,=C'RUSR'        A(VARIABLE SUFFIX)          #DD00089
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE#DD00089

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME"    #DD00089

*-------
*        CREATE "SYSFMID" VARIABLE
*-------
         L     R15,FLCCVT          LOAD CVT ADDRESS
         LA    R0,256              LOAD PREFIX LENGTH
         SR    R15,R0              BACK UP TO START OF PREFIX
         USING CVTFIX,R15
         MVC   SYSFMID,CVTPRODI    SAVE SCP FMID
         DROP  R15
         LA    R1,SYSFMID          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSFMID        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'FMID'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSIODF" VARIABLE
*-------
         MVC   SYSIODF,BLANKS                                  #DD01215
         L     R15,FLCCVT          LOAD CVT ADDRESS            #DD01215
         USING CVT,R15                                         #DD01215
         ICM   R15,15,CVTEXT2      LOAD EXTENSION ADDRESS      #DD01215
         BZ    USER0560                                        #DD01215
         USING CVTXTNT2,R15                                    #DD01215
         MVC   SYSIODF,CVTIOCID    SAVE I/O CONFIGURATION ID   #DD01215
         DROP  R15                                             #DD01215
USER0560 DS    0H                                              #DD01215
         LA    R1,SYSIODF          LOAD ADDRESS OF VARIABLE    #DD01215
         LA    R2,L'SYSIODF        LOAD LENGTH OF VARIABLE     #DD01215
         LA    R15,=C'IODF'        LOAD VARIABLE SUFFIX        #DD01215
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE#DD01215

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME"    #DD01215

*-------
*        CREATE "SYSIPLD" VARIABLE
*-------
         L     R15,FLCCVT          LOAD CVT ADDRESS
         USING CVTMAP,R15
         ICM   R15,15,CVTSMCA      LOAD SMCA ADDRESS
         BZ    USER0600            B. IF NOT FOUND
         USING SMCABASE,R15
         L     R0,SMCAIDTE         INSERT LAST IPL DATE (YYDDDF)
         DROP  R15
         #DATE SYSIPLD,FORMAT='MM/DD/CCYY',FROM=(R0)
USER0600 DS    0H
         LA    R1,SYSIPLD          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSIPLD        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'IPLD'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSIPLT" VARIABLE
*-------
         L     R15,FLCCVT          LOAD CVT ADDRESS
         USING CVTMAP,R15
         ICM   R15,15,CVTSMCA      LOAD SMCA ADDRESS
         BZ    USER0700            B. IF NOT FOUND
         USING SMCABASE,R15
         L     R1,SMCAITME         INSERT LAST IPL TIME (BINARY)
         DROP  R15
         LA    R14,SYSIPLT         LOAD OUTPUT BUFFER ADDRESS
         SLR   R0,R0
         D     R0,=A(100)          R0=HUNDREDTHS OF SECONDS
         CVD   R0,USEDBL1
         UNPK  9(2,R14),USEDBL1
         SLR   R0,R0
         D     R0,=A(60)           R0=SECONDS
         CVD   R0,USEDBL1
         UNPK  6(2,R14),USEDBL1
         SLR   R0,R0
         D     R0,=A(60)           R0=MINUTES
         CVD   R0,USEDBL1
         UNPK  3(2,R14),USEDBL1
         CVD   R1,USEDBL1          R1=HOURS
         UNPK  0(2,R14),USEDBL1
         OC    0(11,R14),=C'00:00:00.00'
USER0700 DS    0H
         LA    R1,SYSIPLT          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSIPLT        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'IPLT'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSIPLU" VARIABLE
*-------
         L     R15,FLCCVT          LOAD CVT ADDRESS
         USING CVTMAP,R15
         L     R15,CVTSYSAD        LOAD SYSRES UCB ADDRESS
         USING UCBOB,R15
         UNPK  WRKDBL1(5),UCBCHAN(3)                           #DD99252
         TR    WRKDBL1(4),TRTABLE3-C'0'                        #DD99252
         MVC   SYSIPLU,WRKDBL1     COPY UNIT ADDRESS (4 BYTES) #DD99252
         DROP  R15
         LA    R1,SYSIPLU          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSIPLU        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'IPLU'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSIPLV" VARIABLE
*-------
         L     R15,FLCCVT          LOAD CVT ADDRESS
         USING CVTMAP,R15
         L     R15,CVTSYSAD        LOAD SYSRES UCB ADDRESS
         USING UCBOB,R15
         MVC   SYSIPLV,UCBVOLI     SAVE VOLUME SERIAL NUMBER
         DROP  R15
         LA    R1,SYSIPLV          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSIPLV        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'IPLV'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSJOB#" VARIABLE
*-------
         LA    R1,SYSJOB#          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSJOB#        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'JOB#'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSJOBN" VARIABLE
*-------
         LA    R1,SYSJOBN          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSJOBN        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'JOBN'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------                                                       #DD00053
*        CREATE "SYSMCAT" VARIABLE                             #DD00053
*-------                                                       #DD00053
         XC    @CTGPL,@CTGPL       ZERO PARAMETER LIST         #DD00053
         #CTGPL LISTCAT,                                       #DD00053*
               CRI=DUMMYPRE,                                   #DD00053*
               WORK=(WRKAREA,256),                             #DD00053*
               OPTIONS=(NAME,GENLD,RCATN,SUPLT,AM0),           #DD00053*
               MF=(E,@CTGPL)                                   #DD00053
         CATALOG @CTGPL                                        #DD00053
         LTR   R15,R15             CHECK IF DATA RETURNED      #DD00053
         BZ    USER0710            B. IF SUCCESSFUL            #DD00053
         MVC   SYSMCAT,=CL44'UNKNOWN'                          #DD00053
         B     USER0720                                        #DD00053

USER0710 DS    0H                                              #DD00053
         MVC   SYSMCAT,WRKAREA+5   COPY MASTER CATALOG NAME    #DD00053

USER0720 DS    0H                                              #DD00053
         LA    R1,SYSMCAT          LOAD ADDRESS OF VARIABLE    #DD00053
         LA    R2,L'SYSMCAT        LOAD LENGTH OF VARIABLE     #DD00053
         LA    R15,=C'MCAT'        LOAD VARIABLE SUFFIX        #DD00053
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE#DD00053

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME"    #DD00053

*-------
*        CREATE "SYSMODE" VARIABLE
*-------
         LA    R2,3                LOAD LENGTH OF VARIABLE DATA
         MVC   SYSMODE,=CL9'370'   INDICATE 370 SYSTEM
         L     R15,FLCCVT          LOAD CVT ADDRESS
         USING CVTMAP,R15
         TM    CVTDCB,CVTMVSE      CHECK FOR XA OR ESA SYSTEM
         BNO   USER0800            B. IF NOT
         LA    R2,3                LOAD LENGTH OF VARIABLE DATA
         MVC   SYSMODE,=CL9'ESA'   INDICATE ESA SYSTEM
         TM    CVTDCB,X'08'        CHECK FOR ESA SYSTEM
         BO    USER0750            B. IF YES
         LA    R2,2                LOAD LENGTH OF VARIABLE DATA
         MVC   SYSMODE,=CL9'XA'    INDICATE XA SYSTEM
         B     USER0800
USER0750 DS    0H
         TM    CVTOSLV1,X'02'      CHECK FOR "OS/390" SYSTEM
         BZ    USER0800            B. IF NOT
         L     R15,CVTECVT         A(E-CVT)                    #DD99218
         USING ECVT,R15                                        #DD99218
         MVC   SYSMODE(8),=CL8'OS/390 R'                       #DD99218
         LA    R1,SYSMODE+8                                    #DD99218

         MVC   0(1,R1),ECVTPVER+1                              #DD99218
         CLI   ECVTPVER,C'0'       LEADING ZERO?               #DD99218
         BE    USER0760            B. IF YES                   #DD99218
         MVC   0(2,R1),ECVTPVER                                #DD99218
         LA    R1,1(,R1)                                       #DD99218
USER0760 DS    0H                                              #DD99218
         LA    R1,1(,R1)                                       #DD99218
         MVI   0(R1),C'.'                                      #DD99218
         LA    R1,1(,R1)                                       #DD99218

         MVC   0(1,R1),ECVTPREL+1                              #DD99218
         CLI   ECVTPREL,C'0'       LEADING ZERO?               #DD99218
         BE    USER0770            B. IF YES                   #DD99218
         MVC   0(2,R1),ECVTPREL                                #DD99218
         LA    R1,1(,R1)                                       #DD99218
USER0770 DS    0H                                              #DD99218
         LA    R1,1(,R1)                                       #DD99218
         MVI   0(R1),C'.'                                      #DD99218
         LA    R1,1(,R1)                                       #DD99218

         MVC   0(1,R1),ECVTPMOD+1                              #DD99218
         CLI   ECVTPMOD,C'0'       LEADING ZERO?               #DD99218
         BE    USER0780            B. IF YES                   #DD99218
         MVC   0(2,R1),ECVTPMOD                                #DD99218
         LA    R1,1(,R1)                                       #DD99218
USER0780 DS    0H                                              #DD99218
         LA    R1,1(,R1)                                       #DD99218
         DROP  R15                                             #DD99218

         LR    R2,R1               A(END OF &SYSMODE)          #DD99218
         LA    R1,SYSMODE          A(START OF &SYSMODE)        #DD99218
         SR    R2,R1               CALCULATE LENGTH            #DD99218
USER0800 DS    0H
         LA    R1,SYSMODE          LOAD ADDRESS OF VARIABLE DATA
         LA    R15,=C'MODE'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSMODL" VARIABLE
*-------
         L     R15,FLCCVT          LOAD CVT ADDRESS
         LA    R0,6
         SR    R15,R0              LOAD CVTMDL ADDRESS
         UNPK  SYSMODL(5),0(3,R15) CONVERT MODEL NUMBER TO DECIMAL
         TR    SYSMODL(4),TRTABLE3-C'0'
         LA    R1,SYSMODL          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,4                LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'MODL'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSPGMR" VARIABLE
*-------
         LA    R1,SYSPGMR          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSPGMR        LOAD DEFAULT LENGTH OF VARIABLE
         CLC   SYSPGMR,BLANKS      CHECK FOR NULL PROGRAMMER NAME
         BE    USER1100            B. IF YES
         LA    R3,L'SYSPGMR-1(,R1) POINT TO END OF VARIABLE
USER0900 DS    0H
         TM    0(R3),X'BF'         CHECK FOR REAL END OF VARIABLE
         BM    USER1000            B. IF YES
         BCT   R3,USER0900         BACK UP 1 BYTE & CONTINUE
USER1000 DS    0H
         LA    R2,1(,R3)           POINT TO END OF PROGRAMMER NAME
         SR    R2,R1               CALCULATE REAL LENGTH OF VARIABLE
USER1100 DS    0H
         LA    R15,=C'PGMR'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSREGN" VARIABLE
*-------
         L     R15,PSAAOLD         LOAD ASCB ADDRESS
         USING ASCB,R15
         L     R15,ASCBLDA         LOAD LDA  ADDRESS
         USING LDA,R15
         L     R15,LDAREGRQ        LOAD REQUESTED REGION SIZE
         SRL   R15,10              DIVIDE BY 1024
         CVD   R15,USEDBL1         CONVERT TO DECIMAL
         DROP  R15
         MVC   SYSREGN,=X'40402020202120D2'
         ED    SYSREGN+1(6),USEDBL1+5
         LA    R1,SYSREGN          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSREGN        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'REGN'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSSCPN" VARIABLE
*-------
         L     R15,FLCCVT          LOAD CVT ADDRESS
         LA    R0,256              LOAD PREFIX LENGTH
         SR    R15,R0              BACK UP TO START OF PREFIX
         USING CVTFIX,R15
         MVC   SYSSCPN,CVTPRODN    SAVE SCP NAME
         DROP  R15
         LA    R1,SYSSCPN          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSSCPN        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'SCPN'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSDSSL" VARIABLE
*-------
         ADRMCLVL ,                GET DF/DSS LEVEL

         XC    WRKDBL1,WRKDBL1                                 #DD01254
         XC    WRKDBL2,WRKDBL2                                 #DD01254
         STCM  R1,B'0100',WRKDBL1+3 SAVE "VERSION"             #DD01254
         STCM  R1,B'0010',WRKDBL1+7 SAVE "RELEASE"             #DD01254
         STCM  R1,B'0001',WRKDBL2+3 SAVE "LEVEL"               #DD01254

         MVC   SYSDSSL,=C'V#R##.#'                             #DD01254
         ICM   R1,15,WRKDBL1+1     RELOAD "VERSION"            #DD02316
         CVD   R1,USEDBL1                                      #DD01254
         OI    USEDBL1+7,X'0F'                                 #DD01254
         UNPK  SYSDSSL+1(1),USEDBL1   INSERT VERSION           #DD01254
         L     R1,WRKDBL1+4        RELOAD "RELEASE"            #DD01254
         CVD   R1,USEDBL1                                      #DD01254
         OI    USEDBL1+7,X'0F'                                 #DD01254
         UNPK  SYSDSSL+3(2),USEDBL1   INSERT RELEASE           #DD01254
         L     R1,WRKDBL2+0        RELOAD "LEVEL"              #DD01254
         CVD   R1,USEDBL1                                      #DD01254
         OI    USEDBL1+7,X'0F'                                 #DD01254
         UNPK  SYSDSSL+6(1),USEDBL1   INSERT LEVEL             #DD01254

         LA    R1,SYSDSSL          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSDSSL        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'DSSL'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSREL#" VARIABLE
*-------
         L     R15,FLCCVT          LOAD CVT ADDRESS
         LA    R0,256              LOAD PREFIX LENGTH
         SR    R15,R0              BACK UP TO START OF PREFIX
         USING CVTFIX,R15
         MVC   SYSREL#(2),CVTNUMB  SAVE SCP RELEASE NUMBER
         MVI   SYSREL#+2,C'.'
         MVC   SYSREL#+3(2),CVTLEVL     SCP RELEASE LEVEL
         DROP  R15
         LA    R1,SYSREL#          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSREL#        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'REL#'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSSMFI" VARIABLE
*-------
         L     R15,FLCCVT          LOAD CVT ADDRESS
         USING CVTMAP,R15
         MVC   SYSSMFI,=CL4'????'  INSERT UNKNOWN IDENTIFIER
         ICM   R15,15,CVTSMCA      LOAD SMCA ADDRESS
         BZ    USER1200            B. IF NOT FOUND
         USING SMCABASE,R15
         MVC   SYSSMFI,SMCASID     INSERT SMF SYSTEM IDENTIFIER
         DROP  R15
USER1200 DS    0H
         LA    R1,SYSSMFI          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSSMFI        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'SMFI'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSSNAM" VARIABLE
*-------
         L     R15,FLCCVT          LOAD CVT ADDRESS
         USING CVTMAP,R15
         MVC   SYSSNAM,CVTSNAME    SAVE SYSTEM NAME
         DROP  R15
         LA    R1,SYSSNAM          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSSNAM        LOAD DEFAULT LENGTH OF VARIABLE
         LA    R15,=C'SNAM'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSSSNM" VARIABLE
*-------
         L     R15,PSATOLD         LOAD TCB ADDRESS
         USING TCB,R15
         L     R15,TCBJSCB         LOAD JSCB ADDRESS
         USING IEZJSCB,R15
         L     R15,JSCBACT         LOAD ACTIVE JSCB ADDRESS
         L     R15,JSCBSSIB        LOAD DEFAULT SSIB ADDRESS
         USING SSIB,R15

         MVC   SYSSSNM,SSIBSSNM    SAVE CURRENT SUBSYSTEM NAME
         DROP  R15
         LA    R1,SYSSSNM          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSSSNM        LOAD DEFAULT LENGTH OF VARIABLE
         LA    R15,=C'SSNM'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSTERM" VARIABLE
*-------
         #TSOTERM ,                GET CURRENT TERMINAL TYPE
         ST    R15,SYSTERM         SAVE TERMINAL/LINE INFORMATION

         LA    R7,TYPETABL         LOAD TERMINAL TABLE START ADDRESS
         LA    R1,NRENT            LOAD NUMBER OF ENTRIES IN TABLE
USER1300 DS    0H
         CLC   0(1,R7),SYSTERM+3   CHECK FOR MATCHING TERMINAL TYPE
         BE    USER1400            B. IF YES
         LA    R7,5(,R7)           LOAD ADDRESS OF NEXT TABLE ENTRY
         BCT   R1,USER1300         LOOP THROUGH TERMINAL TYPE TABLE

USER1400 DS    0H
         LA    R1,1(,R7)           LOAD ADDRESS OF VARIABLE DATA
         LA    R2,4                LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'TERM'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSTMID" VARIABLE
*-------
         LA    R2,1                LOAD DEFAULT VARIABLE LENGTH
         LA    R3,BLANKS           LOAD DEFAULT VARIABLE VALUE
         ICM   R15,15,PSAAOLD      LOAD ASCB ADDRESS
         BZ    USER1500
         USING ASCB,R15
         ICM   R15,15,ASCBASXB     LOAD ASXB ADDRESS
         BZ    USER1500
         USING ASXB,R15
         ICM   R15,15,ASXBSENV     LOAD ACEE ADDRESS
         BZ    USER1500
         USING ACEE,R15
         LA    R2,8                LOAD LENGTH OF VARIABLE DATA
         LA    R3,ACEETRID         LOAD TERMINAL ID ADDRESS
         DROP  R15
USER1500 DS    0H
         LR    R1,R3               LOAD ADDRESS OF VARIABLE DATA
         LA    R15,=C'TMID'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSUSER" VARIABLE
*-------
         LA    R1,SYSUSER          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSUSER        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'USER'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSVERS" VARIABLE
*-------
         L     R15,FLCCVT          LOAD CVT ADDRESS
         LA    R0,256              LOAD PREFIX LENGTH
         SR    R15,R0              BACK UP TO START OF PREFIX
         USING CVTFIX,R15
         MVC   SYSVERS,CVTVERID    SAVE USER SCP VERSION IDENTIFIER
         DROP  R15
         LA    R1,SYSVERS          LOAD ADDRESS OF VARIABLE DATA
         LA    R2,L'SYSVERS        LOAD LENGTH OF VARIABLE DATA
         LA    R15,=C'VERS'        LOAD VARIABLE SUFFIX
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME" IF REQ'D

*-------
*        CREATE "SYSNODE" VARIABLE
*-------
         NOP   USER1530            Change To "B" For JES3      #DD19130

         L     R2,FLCCVT           A(CVT)                      #DD19130
         USING CVT,R2                                          #DD19130
         L     R2,CVTJESCT         A(JESCT)                    #DD19130
         USING JESCT,R2                                        #DD19130
         L     R2,JESSSCT          A(SSCT)                     #DD19130
         USING SSCT,R2                                         #DD19130
         L     R3,PSATOLD          A(TCB)                      #DD19130
         USING TCB,R3                                          #DD19130
         L     R3,TCBJSCB          A(JSCB)                     #DD19130
         USING IEZJSCB,R3                                      #DD19130
         L     R3,JSCBACT          A(ACTIVE JSCB)              #DD19130
         L     R3,JSCBSSIB         A(SSIB)                     #DD19130
         USING SSIB,R3                                         #DD19130

USER1510 DS    0H                                              #DD19130
         CLC   SSCTSNAM,SSIBSSNM   CHECK FOR CURRENT SUBSYSTEM #DD19130
         BE    USER1520            B. IF YES                   #DD19130
         ICM   R2,15,SSCTSCTA      A(NEXT SSCVT)               #DD19130
         BNZ   USER1510            B. IF ANOTHER ENTRY EXISTS  #DD19130
         B     USER1530            ELSE. CREATE BLANK VARIABLE #DD19130

USER1520 DS    0H                                              #DD19130
         ICM   R1,15,SSCTSUS2      A(HCT)                      #DD19130
         BZ    USER1530            B. IF SUBSYSTEM IS UP       #DD19130
         USING HCCT,R1                                         #DD19130
         MVC   SYSNODE,CCTNDENM    SAVE NODE NAME              #DD19130
         DROP  R1,R2,R3                                        #DD19130

USER1530 DS    0H                                              #DD19130
         LA    R1,SYSNODE          A(VARIABLE DATA)            #DD19130
         LA    R2,L'SYSNODE        L(VARIABLE DATA             #DD19130
         LA    R15,=C'NODE'        LOAD VARIABLE SUFFIX        #DD19130
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE#DD19130

         BAL   R14,ECTUPDTE        UPDATE "SUBCOMMAND NAME"    #DD19130

*-------
*        CREATE VARIABLES FOR SYMBOLS DECLARED IN IEASYMXX
*-------
         L     R5,FLCCVT           A(CVT)                      #DD99328
         USING CVT,R5                                          #DD99328
         ICM   R5,15,CVTECVT       A(ECVT)                     #DD99328
         BZ    USER1900            B. IF NOT AVAILABLE         #DD99328
         USING ECVT,R5                                         #DD99328
         ICM   R5,15,ECVTSYMT      A(SYMBOL TABLE)             #DD99328
         BZ    USER1900            B. IF NONE DEFINED          #DD99328
         USING SYMBT,R5                                        #DD99328
         SLR   R7,R7                                           #DD99328
         ICM   R7,3,SYMBTNUMBEROFSYMBOLS  NUMBER OF SYMBOLS    #DD99328
         BZ    USER1900            B. IF NONE DEFINED          #DD99328
         LA    R6,SYMBTTABLEENTRIES A(START OF SYMBOL ENTRIES) #DD99328
         LR    R3,R6               A(CURRENT SYMBOL ENTRY)     #DD99328
         USING SYMBTE,R3                                       #DD99328
USER1600 DS    0H                                              #DD99328
         LM    R1,R2,SYMBTESYMBOLOFFSET O(NAME) & L(NAME)      #DD99328
         LA    R1,0(R1,R6)         A(IEASYMXX SYMBOL NAME)     #DD99328
         CLI   0(R1),C'&&'         CHECK FOR LEADING "&"       #DD99328
         BNE   USER1700            B. IF NOT                   #DD99328
         LA    R1,1(,R1)           ADVANCE PAST "&"            #DD99328
         BCTR  R2,0                SUBTRACT 1 FROM NAME LENGTH #DD99328
USER1700 DS    0H                                              #DD99328
         LA    R15,0(R2,R1)        A(END OF SYMBOL NAME)       #DD99328
         BCTR  R15,0               BACK UP TO LAST BYTE        #DD99328
         CLI   0(R15),C'.'         CHECK FOR TRAILING "."      #DD99328
         BNE   USER1800            B. IF NOT                   #DD99328
         BCTR  R2,0                SUBTRACT 1 FROM NAME LENGTH #DD99328
USER1800 DS    0H                                              #DD99328
         MVC   SYSSYMBN,BLANKS     CLEAR SYMBOL NAME AREA      #DD99328
         #EXEC -R2,MVC,SYSSYMBN(*-*),0(R1)    COPY SYMBOL NAME #DD99328
         LM    R1,R2,SYMBTESUBTEXTOFFSET  O(VALUE) & L(VALUE)  #DD99328
         LA    R1,0(R1,R6)         A(IEASYMXX SYMBOL VALUE)    #DD99328
         MVC   SYSSYMBV,BLANKS     CLEAR SYMBOL NAME AREA      #DD10356
         #EXEC -R2,MVC,SYSSYMBV(*-*),0(R1)    COPY SYMBOL NAME #DD99328

         LA    R1,SYSSYMBV         A(IEASYMXX SYMBOL VALUE)    #DD99328
         LA    R2,L'SYSSYMBV       L(IEASYMXX SYMBOL VALUE)    #DD99328
         LA    R15,SYSSYMBN        A(IEASYMXX SYMBOL NAME)     #DD99328
         OI    WRKFLAG1,FULLNAME   INDICATE 8 BYTE SYMBOL NAME #DD99328
         BAL   R14,TSOCVAR         CREATE/MODIFY CLIST VARIABLE#DD99328

         LA    R3,SYMBTE_LEN(,R3)  A(NEXT SYMBOL TABLE ENTRY)  #DD99328
         BCT   R7,USER1600         LOOP THROUGH SYMBOL TABLE   #DD99328

USER1900 DS    0H                                              #DD99328

*-------
*        TERMINATE
*-------
USEREXIT #STOP ,                   TERMINATE

*---------------------------------------------------------------------*
*                                                                     *
*        CREATE CLIST VARIABLES                                       *
*                                                                     *
*---------------------------------------------------------------------*

         PUSH  USING                                           #DD99333
TSOCVAR  DS    0H
         STM   R0,R15,SAVEREGS     SAVE ALL REGISTERS
         L     R6,CPANS            LOAD PDL ADDRESS            #DD99333
         USING IKJPARMD,R6                                     #DD99333

         MVC   VARNAME,0(R15)      INSERT "FULL" SYMBOL NAME   #DD99328
         TM    WRKFLAG1,FULLNAME   CHECK IF FULL NAME PROVIDED #DD99328
         BO    TSOC0150            B. IF YES                   #DD12214
         MVC   VARNAME,BLANKS                                  #DD99328
         MVC   VARNAME(3),=CL3'SYS'                            #DD99328
         MVC   VARNAME+3(4),0(R15) COMPLETE VARIABLE NAME (&SYSXXXX)

TSOC0100 DS    0H                                              #DD99328
         CLC   PREFIX+4(2),=AL2(3) CHECK FOR VALID PREFIX LEN. #DD99333
         BNE   TSOC0150            B. IF NOT                   #DD99333
         ICM   R3,15,PREFIX        A(VARIABLE PREFIX)          #DD99333
         BZ    TSOC0150            B. IF NO "PREFIX(...)"      #DD99333
         MVC   VARNAME(3),0(R3)    COPY USER SPECIFIED PREFIX  #DD99333

TSOC0150 DS    0H                                              #DD99333
         LA    R15,VARNAME+L'VARNAME-1                         #DD99333
TSOC0160 DS    0H                                              #DD99333
         TM    0(R15),X'BF'        CHECK FOR END OF NAME       #DD99333
         BM    TSOC0170            B. IF FOUND                 #DD99333
         BCT   R15,TSOC0160                                    #DD99333

TSOC0170 DS    0H                                              #DD99333
         LA    R15,1(,R15)         A(END OF NAME)              #DD99333
         LA    R14,VARNAME         A(START OF NAME)            #DD99333
         SR    R15,R14             CALCULATE NAME LENGTH       #DD99333
         ST    R15,NAMELEN         SET VARIABLE NAME LENGTH    #DD99333
         MVC   VARDATA,BLANKS      INITIALIZE DATA AREA
         #EXEC -R2,MVC,VARDATA(*-*),0(R1)
         LA    R2,1(,R2)

         LR    R14,R2              COPY LENGTH OF DATA
TSOC0200 DS    0H
         TM    VARDATA,X'BF'       CHECK FOR BLANK OR ZERO
         BNZ   TSOC0300            B. IF NOT
         MVC   VARDATA,VARDATA+1   SHIFT VARIABLE DATA OVER 1 BYTE
         BCT   R14,TSOC0200        LOOP TILL AT 1ST BYTE OF DATA

TSOC0300 DS    0H
         LA    R15,VARDATA(R2)     POINT PAST LAST BYTE IN VARIABLE
TSOC0400 DS    0H
         BCTR  R15,0               BACK UP 1 BYTE
         TM    0(R15),X'BF'        CHECK FOR BLANK OR ZERO
         BNZ   TSOC0500            B. IF NOT
         BCT   R2,TSOC0400         LOOP TILL AT 1ST BYTE OF DATA

TSOC0500 DS    0H
         ST    R2,DATALEN          SAVE LENGTH OF VARIABLE DATA

         LA    R1,CVARPARM         LOAD ADDRESS OF IKJCT441 PLIST
         L     R15,CLISTRTN        LOAD IKJCT441 ADDRESS
         BALR  R14,R15             INVOKE IKJCT441
         ST    R15,WRKR15                                      #DD12214

         B     TSOC0600            ZAP TO NOP TO ISSUE MSGS    #DD12214
         LTR   R15,R15             CHECK RETURN CODE           #DD12214
         BZ    TSOC0600            B. IF SUCCESSFUL            #DD12214
         CHI   R15,16              "BUILT-IN FUNCTION" NAME ?  #DD12214
         BE    TSOC0600            B. YES (ALREADY EXISTS)     #DD12214
         UNPK  WRKDBL1(9),WRKR15(5)                            #DD12214
         TR    WRKDBL1(8),TRTABLE3-C'0'                        #DD12214
         MVC   WRKAREA(256),BLANKS                             #DD12214
         MVC   WRKAREA(8),VARNAME                              #DD12214
         MVC   WRKAREA+9(24),=C'- IKJCT441 RETURN CODE: '      #DD12214
         MVC   WRKAREA+32(8),WRKDBL1                           #DD12214
         TPUT  WRKAREA,40                                      #DD12214

TSOC0600 DS    0H                                              #DD12214
         NI    WRKFLAG1,255-FULLNAME                           #DD99328
         LM    R0,R15,SAVEREGS     RESTORE ALL REGISTERS
         BR    R14                 RETURN TO CALLER
         POP   USING                                           #DD99333

*---------------------------------------------------------------------*
*        UPDATE SUBCOMMAND NAME WITH SPECIFIED VARIABLE               *
*---------------------------------------------------------------------*
ECTUPDTE DS    0H
         CLC   0(4,R5),VARNAME+3   CHECK IF CURRENT VARIABLE SPECIFIED
         BNER  R14                 B. IF NOT

         STM   R0,R15,SAVEREGS     SAVE ALL REGISTERS
         CL    R2,=F'8'            CHECK IF VARIABLE LENGTH > 8
         BNH   *+8                 B. IF NOT
         LA    R2,8                SET MAXIMUM LENGTH
         BCTR  R2,0
         MVC   ECTSCMD,BLANKS      CLEAR &SYSSCMD BUFFER
         #EXEC R2,MVC,ECTSCMD(*-*),0(R1)
         LM    R0,R15,SAVEREGS     RESTORE ALL REGISTERS
         BR    R14                 RETURN TO CALLER

*---------------------------------------------------------------------*
*        CONSTANTS & TABLES                                           *
*---------------------------------------------------------------------*
BLANKS   DC    CL256' '            SOME BLANKS
DUMMYPRE DC    AL1(12),CL44'SYS1.INVALID'                      #DD00053

TYPETABL DC    X'00',C'????'       TERMINAL TYPE TABLE
         DC    X'04',C'3270'
         DC    X'08',C'5041'
         DC    X'0C',C'2741'
         DC    X'10',C'TWX '
         DC    X'14',C'1050'
NRENT    EQU   (*-TYPETABL)/5      NUMBER OF TERMINAL TYPES
         DC    X'00',C'    '       LAST TERMINAL TYPE (IF NOT FOUND)

TRTABLE1 DC    256X'00'
         ORG   TRTABLE1+C' '       FIND BLANKS
         DC    X'01'
         ORG   TRTABLE1+C'-'       FIND DASHES
         DC    X'02'
         ORG   ,
TRTABLE2 DC    256X'00'
         ORG   TRTABLE2+C' '       FIND BLANKS
         DC    X'01'
         ORG   ,
TRTABLE3 DC    C'0123456789ABCDEF' HEX TRANSLATION TABLE

         #STARTWA PATCH=NO
         IKJEFFGF GFDSECT=NO       IKJEFF19 PARAMETER LIST
WRKR15   DS    F                   IKJCT441 RETURN CODE        #DD12214
WRKDBL1  DS    D                   DOUBLEWORD WORK AREA        #DD99252
WRKDBL2  DS    D                   DOUBLEWORD WORK AREA        #DD01254
WRKFLAG1 DS    X                   FLAG BYTE #1                #DD99328
FULLNAME EQU   BIT0   1... ....    - DON'T PREFIX SYMBOL NAME  #DD99328
WRKAREA  DS    0F,CL256            CATALOG WORKAREA BUFFER     #DD00053
@CTGPL   DS    XL(CTGPLLEN)        CATALOG PARAMETER LIST      #DD00053
SYSACCT  DS    CL146               ACCOUNTING INFORMATION
SYSCPID  DS    CL12                CPU SERIAL NUMBER
SYSDSSL  DS    CL7                 DF/DSS LEVEL
SYSWDAY  DS    CL9                 DAY OF THE WEEK
SYSFMID  DS    CL8                 SCP FMID
SYSIODF  DS    CL2                 IODF SUFFIX                 #DD01215
SYSIPLD  DS    CL10                LAST IPL DATE (MM/DD/CCYY)
SYSIPLT  DS    CL11                LAST IPL TIME (HH:MM:SS.HT)
SYSIPLU  DS    CL4                 SYSRES UNIT ADDRESS         #DD99252
SYSIPLV  DS    CL6                 SYSRES VOLUME SERIAL NUMBER
SYSJOB#  DS    CL8                 JOB NUMBER
SYSJOBN  DS    CL8                 JOB NAME
SYSMCAT  DS    CL44                MASTER CATALOG NAME         #DD00053
SYSMODE  DS    CL9,CL10            PROCESSING MODE
SYSMODL  DS    CL8                 PROCESSOR MODEL NUMBER
SYSPGMR  DS    CL(L'ACTPRGNM)      PROGRAMMER NAME             #DD99328
SYSREGN  DS    CL8                 REQUESTED REGION SIZE
SYSRGRP  DS    CL8                 RACF GROUP NAME             #DD00089
SYSRUSR  DS    CL8                 RACF USERID                 #DD00089
SYSSCPN  DS    CL8                 SCP PRODUCT NAME
SYSREL#  DS    CL5                 SCP RELEASE NUMBER
SYSSMFI  DS    CL4                 SMF IDENTIFIER
SYSSSNM  DS    CL(L'SSIBSSNM)      SUBSYSTEM NAME
SYSSYMBN DS    CL8                 IEASYMXX SYMBOL NAME        #DD99328
SYSSYMBV DS    CL254               IEASYMXX SYMBOL VALUE       #DD99328
SYSSNAM  DS    CL8                 SYSTEM IDENTIFIER
SYSTERM  DS    F                   TERMINAL TYPE
SYSTMID  DS    CL8                 TERMINAL IDENTIFIER
SYSUSER  DS    CL(L'JCTUSER)       USER IDENTIFIER
SYSVERS  DS    CL16                USER SCP VERSION IDENTIFIER
SYSNODE  DS    CL8                 JES2 NODE NAME              #DD19130
CLISTRTN DS    A                   IKJCT441 ADDRESS
CPANS    DS    A                   RETURNED PDL BUFFER ADDRESS
CPECB    DS    A                   COMMAND PROCESSOR ECB
CVARPARM DS    0F                  IKJCT441 PARAMETER LIST
CVAREC@  DS    A                   ENTRY CODE ADDRESS
CVARNPT@ DS    A                   VARIABLE NAME POINTER ADDRESS
CVARNLN@ DS    A                   VARIABLE NAME LENGTH  ADDRESS
CVARDPT@ DS    A                   VARIABLE DATA POINTER ADDRESS
CVARDLN@ DS    A                   VARIABLE DATA LENGTH  ADDRESS
CVARTKN@ DS    A                   TOKEN ADDRESS
DATALEN  DS    F                   VARIABLE DATA LENGTH
ECODE    DS    A                   CLIST VARIABLE ROUTINE ENTRY CODE
JEFF19@  DS    F                   IKJEFF19 PARAMETER LIST ADDRESS
NAMELEN  DS    F                   VARIABLE NAME LENGTH
SAVEREGS DS    16F                 REGISTER SAVE AREA
TOKEN    DS    A                   TOKEN USED BY IKJCT441
VARDATA  DS    CL256               VARIABLE DATA BUFFER
VARDATA@ DS    A                   VARIABLE DATA POINTER
VARNAME  DS    CL8                 VARIABLE NAME "SYSXXXX"
VARNAME@ DS    A                   VARIABLE NAME POINTER
WRKPPL   DS    7F                  PARSE PARAMETER LIST
         #STOPWA ,

         PRINT NOGEN

INFOPCL  IKJPARM
INFOPCL  AMODE 31                                              #DD02316
INFOPCL  RMODE ANY                                             #DD02316
PARAM    IKJIDENT 'USER INFORMATION FUNCTION',MAXLNTH=4,               *
               DEFAULT='SETV',                                         *
               HELP='ACCT, IPLD, IPLT, IPLU, IPLV, JOB#, JOBN, MODE, MO*
               DL, PGMR, TERM, TMID OR USER'

PREFKW   IKJKEYWD DEFAULT='PREFIX(SYS)'                        #DD99333
         IKJNAME 'PREFIX',SUBFLD=PREFSUB                       #DD99333
PREFSUB  IKJSUBF ,                                             #DD99333
PREFIX   IKJIDENT 'PREFIX',OTHER=ALPHANUM,MAXLNTH=3,           #DD99333X
               PROMPT='VARIABLE PREFIX'                        #DD99333
         IKJENDP

         IKJTSVT ,            MAP TSO VECTOR TABLE
         IHAPCCA ,
         ASASYMBP DSECT=YES,SYMBP=NO,SYMBT=YES                 #DD99328
         #DSECTS ACT,ASCB,ASXB,CVT,ECT,ECVT,JCT,LCT,LDA,PSA,SMCA,SSIB, *
               TCB,TCT,TSO,UCB,ACEE                            #DD00083
         #DSECTS CATLG                                         #DD00053
         END   ,
