***********************************************************************
*                                                                     *
*     WARNING:                                                        *
*      1) THIS CODE WAS WRITTEN IN 1988..AND AMAZINGLY STILL WORKS.   *
*      2) DO NOT "PLAY" WITH STARTIO UNLESS YOU KNOW ARE AWARE OF     *
*         ALL THE CONSEQUENCES...                                     *
*         SYSTEM OUTAGES AND POSSIBLE DATA LOSS.                      *
*                                                                     *
*       - READ THE MANUALS BEFORE CONTINUING.                         *
*                                                                     *
***********************************************************************

READVOL1 TITLE ' - READ VOLUME LABEL RECORD'
***********************************************************************
*                     *                                               *
*   R E A D V O L 1   *                                               *
*                     *                                               *
***********************                                               *
*                                                                     *
*   FUNCTION :        READ VOLUME LABEL OF AN OFFLINE DASD DEVICE     *
*                                                                     *
*   PARMS:            R1 >>---> +0 RESERVED WORD                      *
*                               +4 UCB ADDRESS                        *
*                               +8 LABEL OUTPUT BUFFER                *
*                                                                     *
*   EXIT CODE:         4  -  SPECIFIED UCB INVALID (ONLINE OR NON-DA) *
*                     16  -  DEVICE NOT ACCESSIBLE                    *
*                     20  -  I/O ERROR OR I/O TIMEOUT                 *
*                                                                     *
*   REGISTER USAGE :   R0 - WORK REGISTER                             *
*                      R1 - WORK REGISTER                             *
*                      R2 - WORK REGISTER                             *
*                      R3 - WORK REGISTER                             *
*                      R4 - SRB ADDRESS                               *
*                      R5 - IOSB ADDRESS                              *
*                      R6 - IOS POST STATUS TERMINATION BASE REGISTER *
*                      R7 - ASCB ADDRESS                              *
*                      R8 - UCB ADDRESS                               *
*                      R9 - LABEL OUTPUT BUFFER ADDRESS               *
*                     R10 - WORK REGISTER                             *
*                     R11 - WORK REGISTER                             *
*                     R12 - BASE REGISTER                             *
*                     R13 - WORKAREA BASE REGISTER                    *
*                     R14 - RETURN ADDRESS                            *
*                     R15 - RETURN CODE                               *
*                                                                     *
*   MACROS : #CCW     #DSECTS  #SETRC   #START   #STARTWA #STOP       *
*            #STOPWA  CCW      FREEMAIN GETMAIN  LINK     MODESET     *
*            POST     PURGE    SETLOCK  STARTIO  STIMER   TTIMER      *
*            WAIT                                                     *
*                                                                     *
*   ROUTINES CALLED : IEEVDEV                                         *
*                                                                     *
*   HISTORY :  APR  5,1988 - INITIAL INSTALL                          *
*                                                                     *
***********************************************************************

         ACONTROL OPTABLE(ZS3)     ASSEMBLY OPTCDE TABLE
         SPLEVEL  SET=6            SPECIFY OS/390 R2 MACRO FORMAT
         SYSSTATE ARCHLVL=2        ASSEMBLY REQUIRES Z/ARCHITECTURE
         SYSSTATE OSREL=ZOSV1R13   ASSEMBLY REQUIRES Z/OS 1.13 & HIGHER

READVOL1 #START BASE=(R12),WKDSECT=WORKAREA,COPY=YES,                  *
               AMODE=31,RMODE=24,SP=230

*---------------------------------------------------------------------*
*                                                                     *
*        LOAD USER SPECIFIED PARAMETERS                               *
*                                                                     *
*---------------------------------------------------------------------*

         USING PSA,0
         L     R3,CVTPTR           LOAD CVT ADDRESS
         USING CVT,R3
         LM    R8,R9,4(R1)         LOAD UCB ADDRESS & BUFFER ADDRESS
         USING UCBOB,R8

*---------------------------------------------------------------------*
*                                                                     *
*        VALIDATE SPECIFIED UCB                                       *
*                                                                     *
*---------------------------------------------------------------------*

         TM    UCBSTAT,UCBONLI+UCBALOC
         BNZ   BADUCB              B. IF DEVICE IS ONLINE OR ALLOCATED
         TM    UCBDMCT,UCBDMC      CHECK IF DEVICE IS IN USE
         BNZ   BADUCB              B. IF YES
         CLI   UCBTBYT3,UCB3DACC   CHECK IF DEVICE IS DIRECT ACCESS
         BNE   BADUCB              B. IF NOT
         TM    UCBJBNR,UCBVRDEV    CHECK IF DEVICE IS VIRTUAL
         BO    BADUCB              B. IF YES

         TM    CVTDCB,CVTMVSE      CHECK FOR MVS/XA SYSTEM
         BO    RV1XABOX            B. IF YES

         TM    UCBJBNR,16          CHECK FOR MVS/370 BOX FLAG
         BO    NOTOPER             B. IF YES
         B     RV1PATH             ELSE. CONTINUE

RV1XABOX TM    UCBFLA,UCBBOX       CHECK FOR MVS/XA BOX FLAG
         BO    NOTOPER             B. IF YES

*---------------------------------------------------------------------*
*                                                                     *
*        VALIDATE PATH TO SPECIFIED DEVICE                            *
*                                                                     *
*---------------------------------------------------------------------*

RV1PATH  DS    0H
         MODESET KEY=ZERO,MODE=SUP GET INTO KEY ZERO & SUPERVISOR STATE

         LA    R0,IEEPARMS         LOAD PARAMETER LIST ADDRESS
         ST    R0,RV1PLIST         SAVE PARAMETERS ADDRESS
         ST    R8,PARMUCB          SAVE UCB ADDRESS
         LA    R1,RV1PLIST         LOAD IEEVDEV PARAMETER LIST
         LINK  EP=IEEVDEV          CALL IEEVDEV
         LTR   R15,R15             CHECK IF PATH IS OPERATIONAL
         BNZ   NOTOPER             B. IF NOT

*---------------------------------------------------------------------*
*                                                                     *
*        OBTAIN STORAGE & INITIALIZE                                  *
*                                                                     *
*---------------------------------------------------------------------*

         MVC   PROLOG(12),MPROLOG  BUILD STIMER EXIT PROLOG
         LA    R0,ROUTINE          LOAD ROUTINE ADDRESS
         ST    R0,TIMEPARM         SAVE ROUTINE ADDRESS IN WORK AREA
         ST    R13,TIMEPARM+4      SAVE WORKAREA ADDRESS

         LA    R2,245              LOAD MVS/XA  STORAGE SUBPOOL
         TM    CVTDCB,CVTMVSE      CHECK FOR MVS/XA SYSTEM
         BNO   *+8                 B. IF NOT
         LA    R2,226              LOAD MVS/370 STORAGE SUBPOOL

         LA    R0,SRBSIZE+IOSBSIZE+CCWSIZE
         GETMAIN RU,LV=(0),SP=(R2) OBTAIN STORAGE FOR SRB/IOSB/CCWS
         XC    0(SRBSIZE+IOSBSIZE,R1),0(R1)
         LR    R4,R1               LOAD ADDRESS OF SRB STORAGE
         USING SRB,R4
         LA    R5,SRB+SRBSIZE      LOAD ADDRESS OF IOSB STORAGE
         USING IOSB,R5
         LA    R10,IOSB+IOSBSIZE   LOAD ADDRESS OF CCWS STORAGE
         USING CCWAREA,R10
         L     R7,PSAAOLD          LOAD ADDRESS OF ASCB
         USING ASCB,R7
         MVC   SRBID,=CL4'SRB'     INITIALIZE SRB ID
         MVC   SRBPTCB,PSATOLD     INSERT TCB ADDRESS
         MVC   SRBPASID,ASCBASID   INSERT ASID
         ST    R7,SRBASCB          INSERT ASCB ADDRESS
         ST    R5,SRBPARM          INSERT IOSB ADDRESS

*---------------------------------------------------------------------*
*                                                                     *
*        INITIALIZE THE IOSB.  MOST OF THE FIELDS ARE SELF            *
*        EXPLANATORY.  AN EXCEPTION IS THE FIELD IOSDVRID WHICH IS    *
*        USED AS AN INDEX INTO THE VECTOR OF IOS DRIVERS (VOID)       *
*        TABLE.  THIS IS WHERE IOS DIRECT ACCESS ERROR RECOVERY       *
*        COMPONENT FINDS THE ADDRESS OF THE EXTENT CHECKING           *
*        SUBROUTINE.  A RETURN +0 FROM THIS SUBROUTINE INDICATES      *
*        CONTINUE (THE ROUTINE MAY HAVE ALSO UPDATED THE DYNAMIC      *
*        SEEK ADDRESS IN THE IOSB).  A RETURN +4 FROM THIS            *
*        SUBROUTINE INDICATES THE UPDATED SEEK ADDRESS VIOLATES       *
*        EXTENTS.  THIS IS ALSO WHERE IOS PURGE AND RESTORE           *
*        COMPONENTS FIND THE ADDESSES OF THE PURGE AND RESTORE        *
*        SUBROUTINES.  IT'S VOID ENTRY CONTAIN THE ADDRESS OF         *
*        DUMMY (NOOP) SUBROUTINES.                                    *
*                                                                     *
*---------------------------------------------------------------------*

         MVI   IOSFLA,IOSCCHN      INDICATE COMMAND CHAINING
         MVI   IOSDVRID,IOSMISID   INSERT DRIVER ID
         MVI   IOSOPT,IOSNERP      INDICATE NO ERROR RECOVERY
         MVC   IOSASID,ASCBASID    INSERT ASID
         LA    R1,STIOPSTR
         ST    R1,IOSPGAD          INSERT THE TERMINATION RTN ADDRESS
         ST    R8,IOSUCB           INSERT THE UCB ADDRESS
         ST    R8,IOSDSID          - SAVE AS THE PURGE ID
         ST    R13,IOSUSE          INSERT WORKAREA ADDRESS
         ST    R4,IOSSRB           INSERT THE SRB ADDRESS
         LA    R1,STIONRMR
         ST    R1,IOSNRM           SAVE POST STATUS NORMAL EXIT ADDR
         LA    R1,STIOABNR
         ST    R1,IOSABN           SAVE POST STATUS ABNORMAL EXIT ADDR
         MVI   IOSFMSK,X'40'       INSERT FILE MASK
         MVI   IOSEEK+7,3          INSERT SEEK ADDRESS (0,00,00,00,3)
         MVC   IOSEEKA,IOSEEK      INSERT DYNAMIC SEEK ADDR

*---------------------------------------------------------------------*
*                                                                     *
*        BUILD THE CHANNEL PROGRAM:                                   *
*        -  SEARCH ID EQUAL  -  TIC  -  READ                          *
*                                                                     *
*---------------------------------------------------------------------*

         XC    LABEL,LABEL         CLEAR THE OUTPUT BUFFER
         MVC   CCW1(24),MCCW1      INSERT CHANNEL PROGRAM CHAIN
         LRA   R0,IOSEEK+3
         STCM  R0,7,CCW1+1         SAVE REAL ADDRESS OF CCHHR
         LRA   R0,CCW1
         STCM  R0,7,CCW2+1         SAVE REAL ADDRESS OF CCW CHAIN
         LRA   R0,LABEL
         STCM  R0,7,CCW3+1         SAVE REAL ADDRESS OF OUTPUT BUFFER
         LRA   R0,CCW1
         ST    R0,IOSRST           SAVE REAL ADDRESS OF CHANEL PGM
         LA    R0,CCW1
         ST    R0,IOSVST           SAVE VIRTUAL ADDRESS OF CHANEL PGM

*---------------------------------------------------------------------*
*                                                                     *
*        INVOKE CHANNEL SCHEDULER (IOS)                               *
*                                                                     *
*---------------------------------------------------------------------*

         TM    CVTDCB,CVTMVSE      CHECK FOR MVS/XA SYSTEM
         BNO   *+8                 B. IF NOT
         NI    UCBFLB,255-UCBNOPTH INDICATE DEVICE HAS PATH(S)
         NI    UCBFLA,255-UCBNRY   INDICATE DEVICE IS READY
         MVI   RV1ECB,0            CLEAR ECB

         STM   R14,R12,12(R13)     SAVE REGISTERS AS IOS DESTROYS THEM
         LR    R1,R4               LOAD SRB ADDRESS
         STARTIO SRB=(1),TCB=SRB   INVOKE THE CHANNEL SCHEDULER
         LM    R14,R12,12(R13)     RESTORE REGISTERS

         STIMER REAL,PROLOG,BINTVL=TIMEXPY
         WAIT  ECB=RV1ECB          WAIT FOR I/O COMPLETION
         OI    UCBFLA,UCBNRY       INDICATE DEVICE IS NOT READY
         TTIMER CANCEL             CANCEL TIMER ROUTINE

         MVC   RV1ECB+1(1),IOSCOD  SAVE I/O COMPLETION CODE
         MVC   0(80,R9),LABEL      RETURN VOL1 LABEL

         LR    R1,R4               LOAD ADDR OF SRB/IOSB/CCWS STORAGE
         LA    R0,SRBSIZE+IOSBSIZE+CCWSIZE
         FREEMAIN RU,LV=(0),A=(1),SP=(R2)

         CLI   RV1ECB,X'33'        CHECK IF I/O TIMED OUT
         BE    NOTOPER             B. IF YES

         CLI   RV1ECB+1,X'7F'      CHECK IF I/O WAS SUCCESSFUL
         BNE   ERROR20             B. IF NOT
         CLC   =C'VOL1',0(R9)      CHECK IF VOLUME LABEL IS VALID
         BNE   ERROR20             B. IF NOT
         B     EXIT                B. IF YES

*---------------------------------------------------------------------*
*                                                                     *
*        TERMINATE WITH APPROPRIATE RETURN CODE                       *
*                                                                     *
*---------------------------------------------------------------------*

ERROR20  DS    0H
         #SETRC 20                 SET RETURN CODE - I/O ERROR
         B     EXIT                TERMINATE

BADUCB   DS    0H
         #SETRC 4                  SET RETURN CODE - INVALID UCB
         B     EXIT                TERMINATE

NOTOPER  DS    0H
         #SETRC 16                 SET RETURN CODE - NOT ACCESSIBLE
         B     EXIT                TERMINATE

EXIT     DS    0H
         MODESET MODE=PROB,KEY=NZERO
         #STOP ,                   RETURN TO CALLER

*---------------------------------------------------------------------*
*                                                                     *
*        IOS POST STATUS NORMAL EXIT.                                 *
*                                                                     *
*---------------------------------------------------------------------*

STIONRMR DS    0H
         SR    R15,R15
         B     PSARET

*---------------------------------------------------------------------*
*                                                                     *
*        IOS POST STATUS ABNORMAL EXIT.                               *
*                                                                     *
*---------------------------------------------------------------------*

STIOABNR DS    0H
         SR    R15,R15
         B     PSARET

*---------------------------------------------------------------------*
*                                                                     *
*        IOS POST STATUS TERMINATION ROUTINE.  THIS ROUTINE IS        *
*        EXECUTED UNDER THE SRB PASSED AS A PARAMETER TO IOS.  THE    *
*        LOCAL LOCK IS HELD.  AT LEAST TWO THINGS MUST BE DONE IN A   *
*        TERMINATION ROUTINE: 1) THE COMPLETION ECB MUST BE POSTED    *
*        USING BRANCH ENTRY POST, 2) THE PURGE ROUTINE MUST BE        *
*        CALLED IF AN IPIB EXISTS.                                    *
*                                                                     *
*---------------------------------------------------------------------*

STIOPSTR DS    0H
*        SETLOCK OBTAIN,TYPE=LOCAL,RELATED=(POST,RELEASE),
*              MODE=UNCOND,REGS=USE
         L     R3,CVTPTR           LOAD THE CVT ADDRESS
         LR    R5,R1               LOAD THE IOSB ADDRESS
         BALR  R6,0                LOAD THE BASE REGISTER
         USING *,R6

         L     R13,IOSUSE          LOAD WORKAREA ADDRESS
         IC    R10,IOSCOD          LOAD THE COMPLETION CODE
         SLL   R10,24              SHIFT TO HIGH ORDER NIBBLE
         LA    R11,RV1ECB          LOAD ECB ADDRESS
         L     R15,CVT0PT01        LOAD BRANCH ENTRY POST ADDRESS
         BALR  R14,R15             CALL BRANCH ENTRY POST

         ICM   R1,15,IOSIPIB       LOAD Q/IPIB ADDRES
         BZ    RELEASE             B. IF NOT PRESENT
         SR    R0,R0               INDICATE LOCAL LOCK HELD
         L     R15,CVTIXAVL
         L     R15,IOCQCNT-IOCOM(,R15)
         BALR  R14,R15             UPDATE QUIESCE COUNT

RELEASE  DS    0H
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=(POST,OBTAIN)
         L     R14,CVTSRBRT        LOAD RETURN ADDRESS
         BR    R14                 RETURN TO DISPATCHER

*---------------------------------------------------------------------*
*                                                                     *
*        TIMER ROUTINE                                                *
*                                                                     *
*---------------------------------------------------------------------*

         PUSH  USING
         DROP  ,

MPROLOG  STM   R14,R12,12(R13)     SAVE REGISTERS
         LM    R2,R3,12(R15)       LOAD REGISTERS
         USING ROUTINE,R2
         USING WORKAREA,R3
         B     0(0,R2)             GO TO EXIT ROUTINE

ROUTINE  MVI   PURGOPTS,B'10100100'
         PURGE PURGLIST
         LA    R0,X'33'
         SLL   R0,24
         POST  RV1ECB,(0)
         LM    R14,R12,12(R13)
         BR    R14
         POP   USING

*---------------------------------------------------------------------*
*                                                                     *
*        WORK AREA                                                    *
*                                                                     *
*---------------------------------------------------------------------*

         DS    0D
MCCW1    CCW   SIDEQ,*-*,CC,5           CHANNEL PROGRAM TO READ
MCCW2    CCW   TIC,*-*,0,0              DATA FROM RECORD 3
MCCW3    CCW   RDT,*-*,0,80

TIMEXPY  DC    F'50'                    INTERVAL IS .50 SEC

         #STARTWA ,

         DS    0F                       MUST BE ON WORD BOUNDARY
PROLOG   STM   R14,R12,12(R13)          SAVE REGS
         LM    R2,R3,12(R15)            LOAD REGS
         B     0(0,R2)                  GO TO EXIT
TIMEPARM DS    2F                       PARMS

PURGLIST DS    0F             ***  I/O PURGE PARAMETER LIST
PURGOPTS DC    B'10100100'         1... .... SINGLE DATASET PURGE
*                                  .1.. .... POST ASSOCIATED ECB X'48'
*                                  ..1. .... HALT I/O (NOT QUIESCE)
*                                  ...1 .... RELATED REQUESTS ONLY
*                                  .... .1.. DONT PURGE IRB'S
*                                  .... ..1. PURGE BY TCB
UCBADDR  DC    AL3(0)                   DATASET ID (UCB ADDRESS)
         DC    A(0)                     TCB ADDRESS (NOT REQUIRED)
         DC    A(0)                     UNUSED (RESTORE POINTER)

RV1ECB   DC    F'0'                     EVENT CONTROL BLOCK

RV1PLIST DC    A(IEEPARMS)              ************************
IEEPARMS DS    0D                       * THIS IS THE REQUIRED *
PARMUCB  DS    A                        * PARAMETER POINTING   *
PARMFC   DC    X'00'                    * SCHEME REQUIRED      *
PARMRES1 DS    CL1                      *  BY IEEVDEV          *
PARMCHP  DS    CL1                      *                      *
PARMRES2 DS    CL1                      ************************

         #STOPWA ,

CCWAREA  DSECT ,

CCW1     CCW   SIDEQ,*-*,CC,5           CHANNEL PROGRAM TO READ
CCW2     CCW   TIC,*-*,0,0              DATA FROM RECORD 3
CCW3     CCW   RDT,*-*,0,80

LABEL    DS    CL80                     LABEL IS READ IN HERE

CCWSIZE  EQU   *-CCWAREA

         PRINT NOGEN
         #DSECTS CVT,IOSB,SRB,UCB,PSA,ASCB,IOCOM
IOSBSIZE EQU   IOSEND-IOSB
         #CCW  ,

         END   ,
