/*-REXX/PRUREXX ------------------------------
   AUTHOR:   Oscar Omar Ortega Ortega (modified by Greg Shirey for BEK)
      (original source from CBT File452)
   OUTPUT:   SST.USERID.library.name.RESCUE
      (unless name is too long, then see bottom of this routine)
   This EXEC will also create various datasets under the user's prefix.

  ---------------------------------------------*/
Trace O
address TSO
Say "                  Ben E. Keith Company "
Say "This utility will 'rescue' deleted or modified members of a PDS."
Say "A new partitioned data set will be created, prefixed by 'SST' and"
Say "your User ID, and appended by 'RESCUE'.  If the source PDS has not"
Say "been compressed, the 'dead members' will be copied to the new PDS"
Say "and assigned member names of MEM001 to MEMNNN where NNN will be"
Say "the most recently saved member.  The MEM number assigned to "
Say "the deleted members will not be predictable."
Say "This utility cannot be used on a PDSE library."

/*  param = "'ALL'"   */
param = "'DEAD'"
Do Forever
  Say " "
  Say "Enter the PDS to be rescued, or Q to quit"
  Pull bib
  bib = Strip(bib)
  If bib = "Q" Then Exit
  if bib = "" then do
     Say 'You must provide PDS name to process'
     Iterate
  end
  apos1 = pos("'",bib)
  if apos1 = 0 then bib = "'"bib"'"    /* Add tics if needed         */
  Exist = SYSDSN(bib)                  /* check dsn existance        */
  If Exist = 'OK' Then NOP             /* if no, say it and iterate  */
    Else do
      Say 'PDS 'bib' NOT found or not catalogued'
      Iterate
  end
  msgst =  MSG('OFF')
  x = LISTDSI(bib directory)           /* to check if its a PDS     */
                                       /* If no, say it & iterate   */
  if sysdsorg <> 'PO' & sysdsorg <> 'POU' then do
     Say 'Dataset 'bib' is NOT a PDS, it is 'sysdsorg
     Iterate
  end
  if SYSUDIRBLK = 'N/A' Then Do          /* Check if it is a PDSE  */
     Say 'Dataset 'bib' is a PDSE - rescue not possible'
     Exit
  end
  Leave                               /* Break loop                */
End                                   /* End Do Forever            */

upref = Userid()
dsprin = "'"upref".PRUPGM.SYSPRINT'"          /* pru pgm sysprint   */

bibnoq = Strip(TRANSLATE(bib," ","'"))     /*  Remove tics          */

bib2 = "'SST."upref"."bibnoq"'"            /* DSN for rescue PDS    */
do forever
   totlng = length(bib2)                   /* check current length   */
   bib2 = left(bib2,totlng-1)              /* delete last quote      */
   bib2 = bib2".RESCUE'"                   /* append RESCUE to dsn   */
   if totlng > 38 then call Change_Name    /* check if dsn > 44 char */
   Exist = sysdsn(bib2)
   If Exist <> 'OK'                        /* check dsn existance    */
   then leave                              /* if so, iterate         */
end

msgst =  MSG('OFF')
if sysdsn(dsprin) = 'OK' then "DELETE "dsprin /* if exists, delete it*/

msgst =  MSG('OFF')
"FREE FI(SYSPRINT,INPUT,OUTPUT)"   /* include SYSUDUMP as optional   */
msgst =  MSG(msgst)

/*  allocate all work files       */

Say "Allocating work files...."

"ALLOC FI(SYSPRINT) DA("dsprin") REUSE UNIT(SYSDA) ",
       "SPACE(5 1) TRACKS RECFM(F,B,A) LRECL(133) BLK(27930)"
"ALLOC FI(INPUT)    DA("bib") SHR REUSE"
"ALLOC FI(OUTPUT)   DA("bib2") NEW UNIT(SYSDA) LIKE("bib") RELEASE"

Say "Calling PRU program....."

"CALL 'SYS2.SYSTEMS.ZOSR13.LOADLIB(PRU)' "param   /* call PRU pgm */
RcPRU = rc                                 /* save return code    */

"FREE FI(SYSPRINT,INPUT,OUTPUT)"   /* include SYSUDUMP as optional   */
"ALLOC FI(SYSPRINT) DA(*)"         /* reallocate SYSPRINT to terminal*/
select
   when RcPRU = 0 then do
      if sysvar("SYSISPF") = "ACTIVE"
      then Do
         Say bib2 'created - press ENTER to view report'
         address ISPEXEC "VIEW DATASET("dsprin")"
      End
      else Say 'PDS 'bib' processed with name 'bib2' successfully'
   end
   when RcPRU = 4 then do
      Say 'PDS 'bib' processed and no members were recoverable'
      msgst =  MSG('OFF')
      "DELETE "dsprin
      "DELETE "bib2
      msgst =  MSG(msgst)
   end
   otherwise Say 'PDS 'bib' processed with errors RC='RcPRU
end
exit

Change_Name:
 fecS = date('S')
 timN = time()
 timN = left(timN,2)substr(timN,4,2)right(timN,2)
 Say 'Output PDS 'bib2
 bib2 = "'SST."upref".PDS.D"right(fecS,6)".T"timN".RESCUE'"
 Say 'changed to 'bib2' due to dsn length'
return
