LISTVOLS TITLE 'LISTVOLS - Display All Volume Entries for a Cataloged D-
               ataset'
***********************************************************************
*                                                                     *
*   Program Name:   LISTVOLS                                          *
*                                                                     *
*  Documentation:   This TSO command tells you what volumes a         *
*                   dataset is cataloged to.  It is especially        *
*                   useful for displaying information about datasets  *
*                   which are cataloged to multiple volumes, even a   *
*                   very large number (much bigger than 20).          *
*                                                                     *
*                   A direct SVC 26 LISTCAT interface is used,        *
*                   courtesy of Dan Dalby.  Prettified by Sam Golob   *
*                   and fixed again by Dan Dalby.                     *
*                                                                     *
*                   The first dataset prompt and input are via TPUT   *
*                   and TGET.  But the other terminal outputs are     *
*                   via PUTLINE, so they can be sysouttrap'ed.        *
*                                                                     *
*         Syntax:   LISTVOLS                                          *
*                                                                     *
*                   Then answer the prompt:                           *
*                                                                     *
*              Enter Dataset Name whose Volumes are to be Listed:     *
*                                                                     *
*              Give the unquoted, full dataset name.                  *
*                                                                     *
*     Sample Captured Output:                                         *
*                                                                     *
*        LISTVOLS - Display Volumes of a Cataloged Dataset            *
*        -------- - ------- ------- -- - --------- -------            *
*        Dataset Name:  IBMUSER.B.CBTEX05.XMI                         *
*        Volume # :     1  WORK01                                     *
*        Volume # :     2  WORK02                                     *
*                                                                     *
*     This program is REENTRANT.                                      *
*                                                                     *
*     Required Externals:  Macros from CBT Tape File 452 MACLIB       *
*                          member:                                    *
*                                                                     *
*          #CATRC   #COPY    #CTGFL   #CTGPL   #DSECTS                *
*          #GETFL   #PATCH   #REGS    #START   #STARTWA               *
*          #STOP    #STOPWA  CICB     IDAAMDSB IEZCAML                *
*          IEZCTGFL IEZCTGFV IEZCTGPL IEZCTGVL IEZCTGWA               *
*          IGGCAXWA IGGCCA   IGGCCX   SHI                             *
*                                                                     *
*                                                                     *
***********************************************************************

         ACONTROL OPTABLE(ZS3)     Assembly OPTCDE Table
         SPLEVEL  SET=6            Specify OS/390 R2 macro format
         SYSSTATE ARCHLVL=2        Assembly requires z/Architecture
         SYSSTATE OSREL=ZOSV1R13   Assembly requires z/OS 1.13 & higher

         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R9,HEX
         LM    R15,R1,HEXSAVE
         MEND
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
LISTVOLS #START ,                  Start Procedure                     *
               AMODE=31,           Execute In 31-Bit AMode             *
               BASE=(R12),         Define Base Register(S)             *
               COPY=YES,                                               *
               LOC=BELOW,          Indicate 24-Bit WorkArea            *
               RMODE=ANY,          Execute In Any RMode                *
               WKDSECT=WRKAREA,    Define WorkArea Name                *
               LEVEL=**TEST**      Maintenance Level

*-------
*        Prompt For Dataset Name To Be Listed
*-------
         APUT  TITLE1,L'TITLE1
         APUT  TITLE2,L'TITLE2
         MVC   WRKTPUT,PROMPT1     Copy Message To Below The Line
         TPUT  WRKTPUT,L'PROMPT1,ASIS
         TGET  DSNAME,L'DSNAME     Get User Specified Dsname
         OC    DSNAME,BLANKS       Ensure It Is In Upper Case
         MVC   WKTITLE(15),=CL15'Dataset Name:  '
         APUT  WKTITLE,WKLENTH     PUT Dsname into command output
         OC    DSNAME,BLANKS       OC here, is just to get Cond Code
         BZ    LISTEXIT            B. If No Name Specified

*-------
*        Build And Issue The Catalog Request
*-------
         L     R2,=A(32*1024)      Start With A 32K Buffer
LIST0100 DS    0H
         GETMAIN RU,LV=(R2),LOC=ANY
         ST    R1,WRKBUFF@         Save Catalog Work Buffer ADDRESS
         ST    R2,WRKBUFFL         Save Catalog Work Buffer LENGTH

         XC    WRKCTGFL,WRKCTGFL
         #CTGFL VOLSER,            Request Volume Serial               *
               MF=(E,WRKCTGFL)
         L     R2,WRKBUFF@         A(Work Buffer)
         L     R3,WRKBUFFL         L(Work Buffer)
*        Check The Catalog Parameter List (IEZCTGPL) To Understand
         #CTGPL LISTCAT,                                               *
               OPTIONS=(NAME,AM0),                                     *
               CRI=DSNAME,                                             *
               FIELDS=(WRKCTGFL),                                      *
               WORK=((R2),(R3),FORMAT2),                               *
               MF=(E,WRKCTGPL)
         CATALOG WRKCTGPL          Issue LISTCAT Request

         C     R15,=A(40)          Check For "Work Area Too Small"
         BNE   LIST0200            B. If Not
         L     R1,WRKBUFF@         A(Work Area)
         L     R2,4(,R1)           Load "Required" Work Area Length
         L     R3,WRKBUFFL         L(Work Area)
         FREEMAIN RU,A=(R1),LV=(R3)
         B     LIST0100            Retry LISTCAT With The Larger Buffer

LIST0200 DS    0H
         LTR   R15,R15             Check If "LISTCAT" Worked
         BZ    LISTWKED            B. If Yes
         LA    R5,WRKCTGPL
         USING CTGPL,R5
         ST    R15,WRKST15
         MVC   WORKAG1(MESSAG1L),MESSAG1
         HEX   WORKAG1H,4,WRKST15
         MVC   WORKAG1M,CTGMODID
         HEX   WORKAG1R,2,CTGREASN
         DROP  R5
         APUT  WORKAG1,WORKAG1L    Else. Put out error message.
         B     LISTEXIT
LISTWKED DS    0H
*-------
*        Display The Volumes Returned From The Catalog
*-------
         #GETFL WRKCTGFL,(R2),(R3),ZERO=LISTEXIT
LIST0300 DS    0H
         MVC   WRKLIT1(L'VOLLIT1),VOLLIT1
         LA    R5,1
         ST    R5,VOLSBIN
LIST03LP DS    0H
         CVD   R5,CVDAREA          Convert count to printable
         MVC   WRKNUMSP(10),MASK10     Move in the mask
         ED    WRKNUMSP(10),CVDAREA+3  Make it pretty
         MVC   WRKMASK(8),BLANKS
         MVC   WRKMASK(6),WRKNUMSP+4
         MVC   WRKVOL,0(R2)        Copy The Current Volume Serial
         APUT  WRKVOLMS,WRKLLEN
         L     R5,VOLSBIN          Increment
         LA    R5,1(,R5)              Volser
         ST    R5,VOLSBIN                Count
         AHI   R2,6                A(Next Volume Serial)
         SHI   R3,6                Subtract Length Of Volume
         LTR   R3,R3               Check For More Data
         BP    LIST03LP            B. If Yes

         B     LISTEXIT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      DS    0H
         ST    R9,SAVR9HEX
         MVC   1(1,R15),0(R1)        Move byte
         UNPK  0(3,R15),1(2,R15)     Unpack
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)           Increment output pointer
         LA    R1,1(,R1)             Increment input pointer
         BCT   R0,HEX                Decrement length, then loop
         MVI   0(R15),C' '           Blank the trailing byte
         L     R9,SAVR9HEX
         BR    R9                    Return to caller
HEXTAB   DC    C'0123456789ABCDEF'   Translate table
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*---------------------------------------------------------------------*
*                                                                     *
*        TERMINATE                                                    *
*                                                                     *
*---------------------------------------------------------------------*

LISTEXIT #STOP ,                   Terminate

*---------------------------------------------------------------------*
*                                                                     *
*        Constants And Work Area                                      *
*                                                                     *
*---------------------------------------------------------------------*

BLANKS   DC    256C' '
PROMPT1  DC    C'Enter Dataset Name whose Volumes are to be Listed: '
TITLE1   DC    C'LISTVOLS - Display Volumes of a Cataloged Dataset'
TITLE2   DC    C'-------- - ------- ------- -- - --------- -------'
MESSAG1  DC    C'LISTCAT Failed. Catalog Error in IGG0CL'
MESSAG1M DC    C'  '
         DC    C'. RC='
MESSAG1H DC    C'         '
         DC    C' RS='
MESSAG1R DC    C'    '
MESSAG1L EQU   *-MESSAG1
VOLLIT1  DC    C'Volume # :'
MASK10   DC    XL10'40202020202020202120'
         #STARTWA ,
HEXSAVE  DS    3F                    Register save for HEX macro
SAVR9HEX DS    F
CVDAREA  DS    D                   For CVD instruction
WRKTPUT  DS    CL(L'PROMPT1)       TPUT Buffer Must Be Below The Line
         CNOP  0,4
WRKCTGPL DS    XL(CTGPLLEN+1*4)
WRKCTGFL DS    XL(CTGFLLEN)

WORKAG1  DC    C'LISTCAT Failed. Catalog Error in IGG0CL'
WORKAG1M DC    C'  '
         DC    C'. RC='
WORKAG1H DC    C'         '
         DC    C' RS='
WORKAG1R DC    C'    '
WORKAG1L EQU   *-WORKAG1
WRKBUFF@ DS    A                   Catalog Buffer Address
WRKBUFFL DS    A                   Catalog Buffer Length
WRKST15  DS    F
VOLSBIN  DS    F
WKTITLE  DC    CL15'Dataset Name:  '
DSNAME   DS    CL44                Full Data Set Name
WKLENTH  EQU   *-WKTITLE
WRKVOLMS DS    0CL26
WRKLIT1  DC    C'          '
WRKMASK  DC    CL8' '
WRKVOL   DS    CL6                 Volume Serial
WRKLLEN  EQU   *-WRKLIT1
WRKNUMSP DC    CL12' '
         #STOPWA ,

* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*                                                                     *
*        DSECTS                                                       *
*                                                                     *
*---------------------------------------------------------------------*

         #DSECTS ALLOC,CATLG
         END   ,
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   128                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

         IKJCPPL

         IKJTCB   LIST=YES                                  *HMD 10/85*

         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*

         IHAPSA   LIST=YES                                     HD APR88

PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS

***********************************************************************
*  SET UP LINKAGE
***********************************************************************

EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN

***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************

         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES

***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************

         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE

***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************

         USING PSA,0
         L     R2,PSATOLD               @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT

***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************

         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)

***********************************************************************
*  RETURN TO CALLER
***********************************************************************

RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS

***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************

PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER

         LTORG ,

         END   ,
