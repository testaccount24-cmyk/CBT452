WHOSGOT  TITLE 'WHOSGOT - DISPLAY DATASET(S) ENQ STATUS'
*---------------------------------------------------------------------*
*                                                                     *
*        Support Email Address: zOS.JES2@Gmail.com                    *
*                                                                     *
*---------------------------------------------------------------------*

*---------------------------------------------------------------------*
* MODNAME     : WHOSGOT                                               *
*                                                                     *
* FUNCTION    : THIS MODULE USES GQSCAN TO DISPLAY THE ENQ STATUS OF  *
*               A SPECIFIED DATASET(S) .                              *
*                                                                     *
* ENTRY  PARMS: R1 -> CPPL                                            *
* EXIT PARMS  : ENQ STATUS DISPLAYED                                  *
*                                                                     *
* REGS USED   : R0  -> WORK                                           *
*               R1  -> WORK                                           *
*               R2  -> CPPL, WORK                                     *
*               R3  -> PDL, PDE, WORK                                 *
*               R4  -> WORK                                           *
*               R5  -> WORK                                           *
*               R6  -> NOT USED                                       *
*               R7  -> NOT USED                                       *
*               R8  -> NOT USED                                       *
*               R9  -> NOT USED                                       *
*               R10 -> NOT USED                                       *
*               R11 -> 1ST BASE REG                                   *
*               R12 -> NOT USED                                       *
*               R13 -> REGISTER SAVE AREA AND WORK AREA               *
*               R14 -> WORK                                           *
*               R15 -> WORK                                           *
*                                                                     *
* ATTRIBUTES : RENT                                                   *
*                                                                     *
* MESSAGES ISSUED : GRS300I                                           *
*                   GRS301I                                           *
*                   GRS302I                                           *
*                   GRS303I                                           *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* HISTORY : 2000.147 - FIX JOBNAME MESSAGE INSERT LENGTH              *
*                                                                     *
***********************************************************************

         PUNCH ' ALIAS WG'

         ACONTROL OPTABLE(ZS3)     ASSEMBLY OPTCDE TABLE
         SPLEVEL  SET=6            SPECIFY OS/390 R2 MACRO FORMAT
         SYSSTATE ARCHLVL=2        ASSEMBLY REQUIRES Z/ARCHITECTURE
         SYSSTATE OSREL=ZOSV1R13   ASSEMBLY REQUIRES Z/OS 1.13 & HIGHER

WHOSGOT  #START BASE=R11,WKDSECT=WRKWG,REG1=R2,                        X
               USING=(CPPL,R2),                                        X
               APARS=,COPY=YES,                                        X
               LEVEL=#V001R03                                  #DD00147

*-------
*        BUILD I/O SERVICE ROUTINE PARAMETER LIST
*-------

         LA    R1,WIOPL                -> IOPL IN WORKAREA
         USING IOPL,R1
         MVC   IOPLUPT,CPPLUPT         COPY UPT ADDR
         MVC   IOPLECT,CPPLECT         COPY ECT ADDR
         LA    R0,WORKECB              -> ECB IN WORKAREA
         ST    R0,IOPLECB              PUT IN IOPL

*-------
*        BUILD PARSE PARAMETER LIST AND LINK TO IKJPARS TO PARSE
*        ANY OPERANDS.
*-------

         LA    R1,WORKPPL              A(PPL IN WORKAREA)
         USING PPL,R1
         MVC   PPLUPT,CPPLUPT          COPY ADDRESS OF UPT
         MVC   PPLECT,CPPLECT          COPY ADDRESS OF ECT
         MVC   PPLCBUF,CPPLCBUF        COPY ADDRESS OF COMMAND BUFFER
         LA    R0,WORKPDLP             A(PDL POINTER IN WORKAREA)
         ST    R0,PPLANS               PUT IN PPL
         LA    R0,WORKECB              A(ECB IN WORKAREA)
         ST    R0,PPLECB               PUT IN PPL
         L     R0,=A(WGPCL)            -> PCL
         ST    R0,PPLPCL              PUT IN PPL
         ST    R13,PPLUWA              PASS ADDR OF WORKAREA
         CALLTSSR EP=IKJPARS,MF=(E,(1)) PARSE THE COMMAND BUFFER
         LTR   R15,R15                 PARSE O.K.?
         BNZ   WGEXIT                  TERMINATE IF NOT
         DROP  R2

*-------
*        OBTAIN STORAGE FOR GQSCAN AREA.
*-------

         MVC   WGETMAIN,GETMAIN        COPY MF=L TO WORKAREA
         GETMAIN VU,A=VGETAREA,MF=(E,WGETMAIN)

*-------
*        COPY INFORMATION TO WORKAREA.
*-------

         MVC   WPTPB,PTPB              COPY MF=L TO WORKAREA
         L     R3,WORKPDLP             PICK UP ADDR OF PDL
         USING WGPDL,R3
         LA    R3,WGDSNAME             -> DSN PDE
         USING WGDSNAME,R3
SCANLOOP DS    0H
         L     R1,WGDSNAME             PICK UP ADDR OF CHAR STRING
         LH    R15,WGDSNAME+4          PICK UP LNTH OF CHAR STRING
         STH   R15,WRNAMELN            SAVE LNTH FOR GQSCAN
         #EXEC -R15,MVC,WRKDSNAM(*-*),0(R1) COPY RNAME (DSNAME)

*-------
*        USE GQSCAN TO FIND DATASET'S ENQ STATUS
*-------

         MVC   WGQSCAN,GQSCAN          COPY MF=L TO WORKAREA
         LH    R2,WRNAMELN             PICK UP LNTH OF RNAME
         LM    R4,R5,VGETAREA          PICK UP ADDR AND LNTH
         GQSCAN AREA=((R4),(R5)),RESNAME=(SYSDSN,WRKDSNAM,(R2)),       X
               MF=(E,WGQSCAN)
         STM   R15,R0,SCANREGS         SAVE IMPORTANT REGS

*-------
*        PROCESS RETURN CODE FROM GQSCAN
*-------

         C     R15,=F'8'               ERROR?
         BH    SCANERR                 B. IF YES
         C     R15,=F'4'               NO MATCH?
         BE    SCANNONE                B. IF YES

*-------
*        BEGIN PROCESSING THE RIBE
*-------

SCANPROC DS    0H
         L     R2,VGETAREA             PICK UP ADDR OF SCAN AREA
         USING RIB,R2
         L     R4,RIBNRIBE             PICK UP # OF RIBE
         AH    R2,RIBVLEN              POINT TO
         AH    R2,SCANR0HI                     FIRST RIBE
         USING RIBE,R2
SCANRIBE DS    0H
         MVC   WQUEUE,=CL9'allocated'  INDICATE "ALLOCATED"    #DD99281
         TM    RIBESFLG,RIBESTAT       CHECK IF WAITING        #DD99281
         BNZ   NOWAIT                  B. IF NOT               #DD99281
         MVC   WQUEUE,=CL9'waiting  '  INDICATE "WAITING"      #DD99281
NOWAIT   DS    0H                                              #DD99281
         MVC   WALLNAME,RIBEJBNM       COPY JOBNAME TO MSG
         MVC   WALLSYSN,RIBESYSN       COPY SYSTEM NAME TO MSG
         MVC   WALLSTAT,=C'SHR'        DEFAULT TO SHR
         TM    RIBERFLG,RIBETYPE       SHARED?
         BO    SCANBOLD                B. IF YES
         MVC   WALLSTAT,=C'EXC'        SET TO EXCLUSIVE

*-------
*        BUILD THE OLD FOR THE ALLOCATION STATUS MESSAGE.
*-------

SCANBOLD DS    0H
         LA    R0,6                    # OF MSG SEGMENTS       #DD99281
         ST    R0,OLD                  SET IN OLD
         LA    R0,GRS302               -> 1ST MSG SEGMENT
         ST    R0,OLD+4                SET IN OLD
         LA    R0,WDSNSEG              -> 2ND MSG SEGMENT
         ST    R0,OLD+8                SET IN OLD
         LH    R1,WRNAMELN             PICK UP DSNAME LNTH
         LA    R1,4(,R1)               ADD 4 FOR SEGMENT HEADER
         STH   R1,WDSNSEG              SET LNTH OF DSN MSG SEGMENT
         LA    R0,GRS302DS             OFFSET TO DSN IN MSG
         STH   R0,WDSNSEG+2            SET OFFSET TO DSN IN MSG
         LA    R0,L'WQUEUE+4           LENGTH OF ALLOC/WAIT SEG#DD99281
         STH   R0,WQUESEG              SET LENGTH OF INSERT    #DD99281
         LA    R0,GRS302AW             OFFSET TO MSG INSERT    #DD99281
         STH   R0,WQUESEG+2            SET OFFSET TO INSERT    #DD99281
         LA    R0,WQUESEG              -> 3RD MSG SEGMENT      #DD99281
         ST    R0,OLD+12               SET IN OLD              #DD99281
         LA    R0,WSTATSEG             -> 3RD MSG SEGMENT
         ST    R0,OLD+16               SET IN OLD              #DD99281
         LA    R0,7                    LNTH OF STATUS MSG SEGMENT
         STH   R0,WSTATSEG             SET LNTH OF STATUS MSG SEGMENT
         LA    R0,GRS302ST             OFFSET TO STATUS IN MSG
         STH   R0,WSTATSEG+2           SET OFFSET TO STATUS IN MSG
         LA    R0,WNAMESEG             -> 5TH MSG SEGMENT
         ST    R0,OLD+20               SET IN OLD              #DD99281
         LA    R0,12                   LNTH OF JOBNAME MSG SEGMENT
         STH   R0,WNAMESEG             SET LNTH OF JOBNAME MSG SEGMENT
         LA    R0,GRS302NM             OFFSET TO JOBNAME IN MSG
         STH   R0,WNAMESEG+2           SET OFFSET TO JOBNAME IN MSG
         LA    R0,WSYSNSEG             -> 6TH MSG SEGMENT
         ST    R0,OLD+24               SET IN OLD              #DD99281
         LA    R0,12                   LNTH OF SYSNAME MSG SEGMENT
         STH   R0,WSYSNSEG             SET LNTH OF SYSNAME MSG SEGMENT
         LA    R0,GRS302SY             OFFSET TO SYSNAME IN MSG
         STH   R0,WSYSNSEG+2           SET OFFSET TO SYSNAME IN MSG

*-------
*        ISSUE THE ALLOCATION STATUS MESSAGE
*-------

SCANPUTL DS    0H
         PUTLINE PARM=WPTPB,                                           X
               OUTPUT=(OLD,TERM,SINGLE,INFOR),                         X
               MF=(E,WIOPL)

*-------
*        POINT TO NEXT RIBE
*-------

SCANNRIB DS    0H
         AH    R2,SCANR0L              -> NEXT RIBE
         BCT   R4,SCANRIBE             CONTINUE IF MORE TO PROCESS

*-------
*        ALL RIBE HAVE BEEN PROCESSED. IF THE GQSCAN RETURN CODE WAS
*        ZERO, PROCESS THE NEXT DATASET.
*-------

         ICM   R0,15,SCANR15           PICK UP RETURN CODE
         BZ    SCANNEXT                B. IF ZERO

*-------
*        THERE WAS INSUFFICIENT STORAGE SUPPLIED TO COMPLETE THE SCAN
*        FOR THE CURRENT DATASET.
*-------

         LA    R0,2                    # OF MSG SEGMENTS
         ST    R0,OLD                  SET IN OLD
         LA    R0,GRS303               -> 1ST MSG SEGMENT
         ST    R0,OLD+4                SET IN OLD
         LA    R0,WDSNSEG              -> 2ND MSG SEGMENT
         ST    R0,OLD+8                SET IN OLD
         LH    R1,WRNAMELN             PICK UP DSNAME LNTH
         LA    R1,4(,R1)               ADD 4 FOR SEGMENT HEADER
         STH   R1,WDSNSEG              SET LNTH OF DSN MSG SEGMENT
         LA    R0,GRS303DS             OFFSET TO DSNAME IN MSG
         STH   R0,WDSNSEG+2            SET OFFSET TO DSN IN MSG
         PUTLINE PARM=WPTPB,                                           X
               OUTPUT=(OLD,TERM,SINGLE,INFOR),                         X
               MF=(E,WIOPL)
         B     SCANNEXT                CONTINUE WITH NEXT DATASET

*-------
*        AN ERROR OCCURRED DURING THE GQSCAN
*-------

SCANERR  DS    0H
         STC   R15,WORKRC              SAVE RETURN CODE
         UNPK  GQSCANRC,WORKRC         CONVERT RETURN CODE
         TR    GQSCANRC,HEXCONV-C'0'   MAKE IT PRINTABLE
         LA    R0,2                    # OF MSG SEGMENTS
         ST    R0,OLD                  SET IN OLD
         LA    R0,GRS301               -> 1ST MSG SEGMENT
         ST    R0,OLD+4                SET IN OLD
         LA    R0,RCSEG                -> 2ND MSG SEGMENT
         ST    R0,OLD+8                SET IN OLD
         LA    R0,6                    LNTH OF RC MSG SEGMENT
         STH   R0,RCSEG                SET LNTH OF RC MSG SEGMENT
         LA    R0,GRS301RC             OFFSET TO RC IN MSG
         STH   R0,RCSEG+2              SET OFFSET TO RC IN MSG
         PUTLINE PARM=WPTPB,                                           X
               OUTPUT=(OLD,TERM,SINGLE,INFOR),                         X
               MF=(E,WIOPL)
         B     SCANEND                 TERMINATE NOW

*-------
*        THE REQUESTED DATASET IS NOT ALLOCATED
*-------

SCANNONE DS    0H
         LA    R0,2                    # OF MSG SEGMENTS
         ST    R0,OLD                  SET IN OLD
         LA    R0,GRS300               -> 1ST MSG SEGMENT
         ST    R0,OLD+4                SET IN OLD
         LA    R0,WDSNSEG              -> 2ND MSG SEGMENT
         ST    R0,OLD+8                SET IN OLD
         LH    R1,WRNAMELN             PICK UP DSNAME LNTH
         LA    R1,4(,R1)               ADD 4 FOR SEGMENT HEADER
         STH   R1,WDSNSEG              SET LNTH OF DSN MSG SEGMENT
         LA    R0,GRS300DS             OFFSET TO DSNAME IN MSG
         STH   R0,WDSNSEG+2            SET OFFSET TO DSN IN MSG
         PUTLINE PARM=WPTPB,                                           X
               OUTPUT=(OLD,TERM,SINGLE,INFOR),                         X
               MF=(E,WIOPL)

*-------
*        SCAN FOR NEXT DATASET REQUESTED
*-------

SCANNEXT DS    0H
         ICM   R3,15,WGDSNAME+24       -> NEXT DSNAME SPECIFIED
         BNM   SCANLOOP                B. IF NOT AT END
         DROP  R3

*-------
*        FREE STORAGE USED FOR GQSCAN AREA
*-------

SCANEND  DS    0H
         L     R0,VGETAREA+4           PICK UP LNTH OBTAINED
         L     R1,VGETAREA             PICK UP ADDR
         FREEMAIN RU,LV=(0),A=(1),SP=1

*-------
*        RESTORE REGS AND RETURN
*-------

WGEXIT   #STOP ,

*-------
*        IKJPARS DATA SET NAME PROCESSING VALIDATION EXIT
*-------

         PUSH  USING
         DROP  ,
DSNCHECK DS    0H
         STM   R14,R12,12(R13)         SAVE PARSE'S REG
         LR    R11,R15                 GET A BASE REG
         USING DSNCHECK,R11
         L     R12,4(,R1)              PICK UP ADDR OF WORKAREA
         USING WRKWG,R12
         L     R3,0(,R1)               PICK UP ADDR OF PDE
         USING WGDSNAME,R3

*-------
*        COPY THE DATASET NAME TO THE WORKAREA
*-------

         GETMAIN RU,LV=44              ACQUIRE A DSNAME WORK AREA
         LR    R4,R1
         MVI   0(R4),C' '              CLEAR DSNAME
         MVC   1(43,R4),0(R4)
         L     R1,WGDSNAME             PICK UP ADDR OF CHAR STRING
         LH    R15,WGDSNAME+4          PICK UP LNTH OF CHAR STRING
         #EXEC -R15,MVC,0(*-*,R4),0(R1) COPY DSNAME TO WORKAREA
         ST    R4,WGDSNAME             SAVE CONVERTED DSNAME ADDRESS

         MVC   WRKCTGPL(LOCATEL),LOCATE
         ST    R4,WRKCTGPL+4           FORMAT
         LA    R0,WRKCATLG                CATALOG
         ST    R0,WRKCTGPL+12                PARAMETER LIST
         LOCATE WRKCTGPL               CONVERT ALIAS TO REAL NAME

         LA    R1,44                   LOAD MAXIMUM DSNAME LENGTH
         LA    R2,43(,R4)              LOAD ADDRESS OF LAST CHARACTER
DSNCH001 DS    0H
         CLI   0(R2),C' '              CHECK FOR END OF DSNAME
         BNE   DSNCH002                B. IF YES
         BCTR  R2,0                    BACK UP 1 CHARACTER
         BCT   R1,DSNCH001             LOOP BACK TO LAST CHARACTER
DSNCH002 DS    0H
         STH   R1,WGDSNAME+4           SAVE CONVERTED DSNAME LENGTH

         LA    R15,0                   INDICATE DSNAME IS INVALID
         L     R14,12(,R13)            RESTORE RETURN ADDR
         LM    R0,R12,20(R13)          RESTORE OTHER REGS
         BR    R14                     RETURN TO PARSE
         DROP  ,
         POP   USING

*-------
*        CONSTANTS AND MF=L FORMS OF MACROS
*-------

HEXCONV  DC    C'0123456789ABCDEF'     USED IN HEX CONVERSION
VULA     DC    A(1024),A(500*1024)     VAR GETMAIN VAULES
BLANKS   DC    CL80' '                 USEFUL CONSTANT
SYSDSN   DC    CL8'SYSDSN'             QNAME FOR ALL DATASETS
GQSCAN   GQSCAN REQLIM=MAX,                                            X
               SCOPE=ALL,                                              X
               REQCNT=1,                                               X
               MF=L
GQSCANLN EQU   *-GQSCAN                LNTH OF GQSCAN PARAMATER LIST

*-------
*        CONSTANTS AND MF=L FORMS OF MACROS
*-------

PTPB     PUTLINE MF=L                  GENERAL PUTLINE PARAMETER BLOCK
LPTPB    EQU   *-PTPB                  LNTH OF PTPB
DUMMY    DS    0C

GETMAIN  GETMAIN VU,LA=VULA,SP=1,MF=L
LGETMAIN EQU   *-GETMAIN

*-------
*        MESSAGES
*-------

GRS300   #MSG  'WHO300I Dataset  not allocated'
GRS300DS EQU   16                      OFFSET TO DSN IN MSG

GRS301   #MSG  'WHO301I Unexpected return code from GQSCAN, RC='
GRS301RC EQU   47                      OFFSET TO RETURN CODE IN MSG

GRS302   #MSG  'WHO302I    by  on '                            #DD00147
GRS302DS EQU   8                       OFFSET TO DSN IN MSG
GRS302AW EQU   9                       OFFSET TO ALLOCATED/WAITING  281
GRS302ST EQU   10                      OFFSET TO SHR/EXC IN MSG     281
GRS302NM EQU   14                      OFFSET TO JOBNAME IN MSG     281
GRS302SY EQU   18                      OFFSET TO SYSTEM NAME IN MSG 147

GRS303   #MSG  'WHO303I Insufficient storage to complete scan for '
GRS303DS EQU   50                      OFFSET TO DSN IN MSG

*-------
*        PCL FOR WHOSGOT COMMAND
*-------

         PRINT ON,NOGEN
WGPCL    IKJPARM DSECT=WGPDL
WGDSNAME IKJPOSIT DSNAME,USID,LIST,VALIDCK=DSNCHECK,                   X
               PROMPT='DATASET NAME'
         IKJENDP
         PRINT ON,GEN

LOCATE   CAMLST NAME,*-*,,*-*
LOCATEL  EQU   *-LOCATE
         #STARTWA ,
OLD      DS    10F                     OLD WITH UP TO 9 MSG SEGMENTS
WORKECB  DS    F                       ECB FOR PUTLINE AND IKJPARS
WORKPDLP DS    A                       POINTER TO PDL
VGETAREA DS    2F                      VAR GETMAIN ADDR AND LNTH
SCANREGS DS    2F                      GQSCAN REGS R15,R0
         ORG   SCANREGS
SCANR15  DS    F                       RETURN FROM GQSCAN
SCANR0HI DS    H                       HI-ORDER  2 BYTES = RIB  LNTH
SCANR0L  DS    H                       LOW-ORDER 2 BYTES = RIBE LNTH
         ORG   ,
WRKCTGPL CAMLST NAME,*-*,,*-*
WRKCATLG DS    0F,265C                 CATALOG LOCATE WORKAREA
WORKPPL  DS    0F,XL(LPPL)             PARSE PARAMETER LIST
WGETMAIN DS    XL(LGETMAIN)            MF=E GETMAIN
WPTPB    DS    XL(LPTPB)               MF=E PUTLINE
WIOPL    DS    XL(LIOPL)               I/O SERVICES PARAMETER LIST
WGQSCAN  DS    XL(GQSCANLN)            MF=E GQSCAN
WRNAMELN DS    H                       LENGTH OF DSNAME AS RNAME
WDSNSEG  DS    2H                      DSN MSG SEGMENT
WRKDSNAM DS    CL44                    RNAME=DSNAME FOR GQSCAN
WQUESEG  DS    2H                      ENQ QUEUE MSG SEGMENT   #DD99281
WQUEUE   DS    CL9                     ALLOCATED/WAITING       #DD99281
WSTATSEG DS    2H                      SHR/EXC MSG SEGMENT
WALLSTAT DS    CL3' '                  SHR/EXC
WSYSNSEG DS    2H                      SYSTEM NAME MSG SEGMENT
WALLSYSN DS    CL8' '                  SYSTEM NAME
WNAMESEG DS    2H                      JOBNAME/TSOUSER/STCNAME MSG SEG
WALLNAME DS    CL8' '                  JOBNAME/TSOUSER/STC NAME
WORKRC   DS    XL2                     WORK FOR RETURN CODE CONVERSION
RCSEG    DS    2H                      RC MSG SEGMENT
GQSCANRC DS    CL3                     WORK FOR RETURN CODE CONVERSION
         #STOPWA ,

*-------
*        THE FOLLOWING MACROS GENERATE DSECTS WHICH ARE MAPPED IN THE
*        DEBUGGING HANDBOOKS AND THUS ARE NOT EXPANDED HERE.
*-------

         PRINT ON,NOGEN
         IKJCPPL
         IKJUPT
         IKJPPL
LPPL     EQU   *-PPL
         IKJIOPL
LIOPL    EQU   *-IOPL
         ISGRIB
         #DSECTS CVT
         END   ,
