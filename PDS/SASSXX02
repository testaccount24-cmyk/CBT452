SASSXX02 TITLE ' -- CA-7 -- JCL SUBMISSION EXIT'
*---------------------------------------------------------------------*
*                                                                     *
*        Support Email Address: zOS.JES2@Gmail.com                    *
*                                                                     *
*---------------------------------------------------------------------*

*---------------------------------------------------------------------*
*                 |                                                   *
* S A S S X X 0 2 |            JCL SUBMISSION EXIT                    *
*                 |                                                   *
*------------------                                                   *
*                                                                     *
*    FUNCTION: USED TO ADD, DELETE OR CHANGE JCL STATMENTS OR CONTROL *
*              CARDS IMMEDIATELY PRECEDING JOB SUBMISSION.  MUST BE   *
*              CODED AS REUASABLE, BUT NOT NECESSARILY REENTRANT.     *
*              CHANGES MADE TO THE JCL BY THIS EXIT ARE NOT REFLECTED *
*              IN THE QUEUE JCL.                                      *
*                                                                     *
*       INPUT: R02 = ADDRESS OF PARAMETER LIST                        *
*               +0 = ADDRESS OF 80-BYTE AREA CONTAINING THE JCL       *
*                    STATEMENT.                                       *
*               +4 = ADDRESS OF THE JOB'S QUEUE RECORD (MAPPED BY     *
*                    JQREC IN THE CA-7 MACRO LIBRARY).                *
*                                                                     *
*      OUTPUT: R15 = RETURN CODE                                      *
*                0 = WRITE THIS STATEMENT AND CONTINUE PROCESSING     *
*                    (THE JCL STATEMENT MAY HAVE BEEN MODIFIED).      *
*                1 = DELETE THIS STATEMENT FROM THE JCL.              *
*                2 = WRITE THE STATEMENT AND RETURN TO THE EXIT       *
*                    (USED TO ADD STATEMENTS).                        *
*                                                                     *
*         THE JOB NAME AND COLUMNS 69 THROUGH 71 IN THE JOB CARD      *
*         MUST NOT BE CHANGED.  ADDRESSES IN THE PARAMETER LIST       *
*         MUST NOT BE CHANGED.                                        *
*                                                                     *
*        THIS EXIT IS CALLED BY SASSSSM0.                             *
*                                                                     *
*   REGISTERS:  R0 - DESTROYED                                        *
*               R1 - DESTORYED                                        *
*               R2 - SAVED ACROSS CA-7 SYSTEM REQUESTS                *
*                    USED FOR PARAMETER LIST ADDRESS                  *
*               R3 - SAVED ACROSS CA-7 SYSTEM REQUESTS                *
*                    USED FOR JCL STATEMENT ADDRESS                   *
*               R4 - SAVED ACROSS CA-7 SYSTEM REQUESTS                *
*                    USED FOR JOB QUEUE RECORD ADDRESS                *
*               R5 - SAVED ACROSS CA-7 SYSTEM REQUESTS                *
*               R6 - SAVED ACROSS CA-7 SYSTEM REQUESTS                *
*               R7 - SAVED ACROSS CA-7 SYSTEM REQUESTS                *
*               R8 - SAVED ACROSS CA-7 SYSTEM REQUESTS                *
*               R9 - SAVED ACROSS CA-7 SYSTEM REQUESTS                *
*                    (SECONDARY BASE REGISTER)                        *
*              R10 - SAVED ACROSS CA-7 SYSTEM REQUESTS                *
*                    (PRIMARY BASE REGISTER)                          *
*              R11 - POINTS TO THE SCT - MUST NOT BE MODIFIED         *
*                    MAPPED BY MACRO SCTENTRY                         *
*              R12 - POINTS TO THE SVT - MUST NOT BE MODIFIED         *
*                    MAPPED BY MACRO UCC7SVT                          *
*              R13 - DESTROYED - DOES NOT POINT TO A SAVE AREA UNLESS *
*                    OTHERWISE NOTED                                  *
*              R14 - SAVED ACROSS CA-7 SYSTEM REQUESTS                *
*              R15 - DESTORYED - BUT UPON ENTRY CONTAINS THE ENTRY    *
*                    ADDRESS                                          *
*                                                                     *
*  ATTRIBUTES: RE-ENTRANT, REUSABLE, AC(1) APF-AUTHORIZED             *
*                                                                     *
*---------------------------------------------------------------------*

*---------------------------------------------------------------------*
*                                                                     *
*   INSTALLATION USEAGE:                                              *
*        SCAN ALL RECORDS BEING SUBMITTED FOR A "&".  IF FOUND,       *
*        A SEARCH FOR A DELIMITER IS MADE.  NOW WE HAVE THE ADDRESS   *
*        AND LENGTH OF THE VARIABLE, AND CAN CHECK TO SEE IF IT IS    *
*        ONE OF THE SUPPORTED VARIABLES.  IF IT IS, THE VARIABLE IS   *
*        REPLACED BY IT'S REAL VALUE.  FOR NUMERIC VARIABLES, CHECK   *
*        IF THE USER REQUESTED AN EVALUATION TO BE PERFORMED.  THIS   *
*        IS DENOTED BY A +## OR -## PRECEEDING THE TRAILING PERIOD.   *
*        IN THESE CASES, THE VALUE IS CALCULATED PRIOR TO ITS         *
*        INSERTION INTO THE RECORD.                                   *
*                                                                     *
*   VARIABLES:                                                        *
*        &Y.                                                          *
*        &MM.                                                         *
*        &DD.                                                         *
*        &YY.                                                         *
*        &DDD.                                                        *
*        &DAY.                                                        *
*        &DOW.                                                        *
*        &CCYY.                                                       *
*        &YYDDMM.                                                     *
*        &YYMMDD.                                                     *
*        &DDMMYY.                                                     *
*        &MMDDYY.                                                     *
*                                                                     *
*---------------------------------------------------------------------*

         ACONTROL OPTABLE(ZS3)     ASSEMBLY OPTCDE TABLE
         SPLEVEL  SET=6            SPECIFY OS/390 R2 MACRO FORMAT
         SYSSTATE ARCHLVL=2        ASSEMBLY REQUIRES Z/ARCHITECTURE
         SYSSTATE OSREL=ZOSV1R13   ASSEMBLY REQUIRES Z/OS 1.13 & HIGHER

*---------------------------------------------------------------------*
*                                                                     *
*     HISTORY: MAR 15,1991 - INSTALL R2L9 (9010)                      *
*                                                                     *
*---------------------------------------------------------------------*

SASSXX02 START 0
         PRINT NOGEN
         SASSEQU ,
         SASSTBLK ,
         SCTENTRY ,
         UCC7SVT ,
         JQREC ,
         PRINT GEN

*---------------------------------------------------------------------*
*                                                                     *
*        ESTABLISH BASE REGISTER AND ACQUIRE WORK AREA                *
*                                                                     *
*---------------------------------------------------------------------*

SASSXX02 CSECT ,
         SASSVRSN VRSN=000,REGS=R10

XX020010 DS    0H
         LA    R0,WRKAREAL             LOAD WORKAREA LENGTH
         SGETM SIZE=(R0),BUSY=XX020020,RETURN=XX020030

XX020020 DS    0H
         SWAIT ECFADD=(R0),ECFMASK=(R0),RETURN=XX020010

XX020030 DS    0H
         LR    R13,R1                  LOAD WORKAREA ADDRESS
         USING WRKAREA,R13

         LR    R0,R13                  LOAD WORKAREA ADDRESS
         LA    R1,WRKAREAL             LOAD WORKAREA LENGTH
         LR    R14,R0
         SLR   R15,R15
         MVCL  R0,R14                  ZERO WORKAREA

*---------------------------------------------------------------------*
*                                                                     *
*        LOAD JCL STATEMENT AND JOB QUEUE RECORD ADDRESSES            *
*                                                                     *
*---------------------------------------------------------------------*

         LM    R7,R8,0(R2)             LOAD INPUT PARAMETER ADDRESSES
         USING JQREC,R8

         MVI   WRKREC1,C' '            CLEAR STATEMENT WORK AREA
         MVC   WRKREC1+1(L'WRKREC1-1),WRKREC1
         MVC   WRKREC1(80),0(R7)       COPY INPUT STATEMENT TO WORKAREA

         LA    R3,WRKREC1              LOAD STATEMENT STARTING ADDRESS

*---------------------------------------------------------------------*
*                                                                     *
*        CHECK IF CURRENT STATEMENT CONTAINS ONE OF OUR VARIABLES     *
*                                                                     *
*---------------------------------------------------------------------*

XX020040 DS    0H
         L     R15,CVTPTR              LOAD CVT ADDRESS
         USING CVT,R15
         MVC   WRKCVTDD,CVTDATE+2      SAVE CVT JULIAN DATE "DDDF"
         ICM   R14,3,CVTDATE           LOAD CURRENT JULIAN YEAR
         DROP  R15
         SLL   R14,4                   MAKE ROOM FOR SIGN
         STCM  R14,3,WRKCVTYY          SAVE CVT JULIAN YEAR "0YY?'
         OI    WRKCVTYY+1,X'0F'        INSERT SIGN

         LA    R14,WRKREC1+80          LOAD STATEMENT ENDING ADDRESS
         SR    R14,R3                  CALCULATE REMAINING LENGTH
         BNP   XX020240                B. IF RECORD PROCESSING COMPLETE
         XC    WRKTRTAB,WRKTRTAB
         MVI   WRKTRTAB+C'&&',C'&&'    INSERT VARIABLE PREFIX BYTE
         BCTR  R14,0                   DECREMENT FOR EXECUTE
         #EXEC R14,TRT,0(*-*,R3),WRKTRTAB
         BZ    XX020240                B. IF NO VARIABLE PREFIX FOUND
         LR    R3,R1                   LOAD ADDRESS OF AMPERSAND

         LA    R14,WRKREC1+80          LOAD STATEMENT ENDING ADDRESS
         SR    R14,R3                  CALCULATE REMAINING LENGTH
         BNP   XX020240                B. IF RECORD PROCESSING COMPLETE
         XC    WRKTRTAB,WRKTRTAB
         MVI   WRKTRTAB+C'.',C'.'      INSERT VARIABLE SUFFIX BYTE
         MVI   WRKTRTAB+C'+',C'+'      INSERT VARIABLE SUFFIX BYTE
         MVI   WRKTRTAB+C'-',C'-'      INSERT VARIABLE SUFFIX BYTE
         BCTR  R14,0                   DECREMENT FOR EXECUTE
         #EXEC R14,TRT,0(*-*,R3),WRKTRTAB
         BZ    XX020240                B. IF NO VARIABLE SUFFIX FOUND
         ST    R1,WRKEND@              SAVE SUFFIX END ADDRESS
         STC   R2,WRKENDC              SAVE SUFFIX END CHARACTER
         MVC   WRKREC2,1(R1)           SAVE DATA AFTER "."

         LR    R14,R1                  LOAD TERMINATOR ADDRESS
         SR    R14,R3                  CALCULATE VARIABLE NAME LENGTH
         BCTR  R14,0                   SUBTRACT 1 FOR &
         CH    R14,=H'08'              CHECK FOR MAXIMUM NAME LENGTH
         BH    XX020230                B. IF TOO LONG

         BCTR  R14,0                   DECREMENT FOR EXECUTE
         LA    R6,XX02TAB1             LOAD VARIABLE NAME TABLE ADDRESS
XX020050 DS    0H
         CLI   0(R6),X'FF'             CHECK FOR END OF TABLE
         BE    XX020230                B. IF END
         CLM   R14,3,0(R6)             CHECK LENGTH OF VARIABLE NAME
         BNE   XX020060                B. IF NOT THE SAME
         #EXEC R14,CLC,1(*-*,R3),2(R6)
         BE    XX020070                B. IF FOUND
XX020060 DS    0H
         LA    R6,14(,R6)              POINT TO NEXT VARIABLE NAME
         B     XX020050                CONTINUE SEARCH

*---------------------------------------------------------------------*
*                                                                     *
*        RE-CALCULATE DATE IF XXXX+01. OR XXXX-01. FOUND              *
*                                                                     *
*---------------------------------------------------------------------*

XX020070 DS    0H
         ZAP   WRKVAR#,=P'+0'          FORMAT THE NUMERIC VARIABLE
         CLI   WRKENDC,C'.'            CHECK IF CALCULATION IS REQUIRED
         BE    XX020080                B. IF NOT
         L     R4,WRKEND@              LOAD "+" OR "-" ADDRESS
         LA    R4,1(,R4)               POINT PAST "+" OR "-"
         LA    R14,WRKREC1+80          LOAD STATEMENT ENDING ADDRESS
         SR    R14,R4                  CALCULATE REMAINING LENGTH
         BNP   XX020240                B. IF RECORD PROCESSING COMPLETE
         XC    WRKTRTAB,WRKTRTAB
         MVI   WRKTRTAB+C'.',C'.'      INSERT VARIABLE SUFFIX BYTE
         BCTR  R14,0                   DECREMENT FOR EXECUTE
         #EXEC R14,TRT,0(*-*,R4),WRKTRTAB
         BZ    XX020240                B. IF NO VARIABLE SUFFIX FOUND
         ST    R1,WRKEND@              SAVE ADDRESS OF "."
         MVC   WRKREC2,1(R1)           SAVE DATA AFTER "."
         SR    R1,R4                   CALCULATE LENGTH OF NUMERICS
         BNP   XX020080                B. IF NULL VALUE
         LR    R14,R1                  LOAD LENGTH OF NUMERICS
         MVI   WRKTRTAB,X'FF'
         MVC   WRKTRTAB+1(L'WRKTRTAB-1),WRKTRTAB
         MVC   WRKTRTAB+C'0'(10),=10X'00'
         BCTR  R14,0                   DECREMENT FOR EXECUTE
         #EXEC R14,TRT,0(*-*,R4),WRKTRTAB
         BNZ   XX020230                B. IF NON-NUMERICS FOUND
         #EXEC R14,PACK,WRKVAR#,0(*-*,R4)

XX020080 DS    0H
         ICM   R14,15,10(R6)           LOAD INSERT PROCESSING ADDRESS
         BR    R14                     OVERLAY INPUT VARIABLE TEXT

*---------------------------------------------------------------------*
*                                                                     *
*        INSERT DATE INTO WORKING RECORD AND ADVANCE POINTER          *
*                                                                     *
*---------------------------------------------------------------------*

XX020090 DS    0H
         BAL   R14,CONVYEAR            CALCULATE REQUESTED DATE
         BAL   R14,FORMAT              FORMAT THE DATE FIELDS
         MVC   0(1,R3),YY+1            INSERT "Y"
         B     XX020220                CONTINUE

XX020100 DS    0H
         BAL   R14,CONVMNTH            CONVERT AND FORMAT DATE FIELDS
         MVC   0(2,R3),MM              INSERT "MM"
         B     XX020220                CONTINUE

XX020110 DS    0H
         BAL   R14,CONVDATE            CALCULATE REQUESTED DATE
         BAL   R14,FORMAT              FORMAT THE DATE FIELDS
         MVC   0(2,R3),DD              INSERT "DD"
         B     XX020220                CONTINUE

XX020120 DS    0H
         BAL   R14,CONVYEAR            CALCULATE REQUESTED DATE
         BAL   R14,FORMAT              FORMAT THE DATE FIELDS
         MVC   0(2,R3),YY              INSERT "YY"
         B     XX020220                CONTINUE

XX020130 DS    0H
         BAL   R14,CONVDATE            CALCULATE REQUESTED DATE
         BAL   R14,FORMAT              FORMAT THE DATE FIELDS
         MVC   0(3,R3),DDD             INSERT "DDD"
         B     XX020220                CONTINUE

XX020140 DS    0H
         BAL   R14,CONVDATE            CALCULATE REQUESTED DATE
         BAL   R14,FORMAT              FORMAT THE DATE FIELDS
         MVC   0(3,R3),DAY             INSERT "DAY"
         B     XX020220                CONTINUE

XX020150 DS    0H
         BAL   R14,CONVDATE            CALCULATE REQUESTED DATE
         BAL   R14,FORMAT              FORMAT THE DATE FIELDS
         MVC   0(3,R3),DAY             INSERT "DOW"
         B     XX020220                CONTINUE

XX020170 DS    0H
         BAL   R14,CONVYEAR            CALCULATE REQUESTED DATE
         BAL   R14,FORMAT              FORMAT THE DATE FIELDS
         MVC   0(4,R3),CCYY            INSERT "CCYY"
         B     XX020220                CONTINUE

XX020180 DS    0H
         BAL   R14,CONVDATE            CALCULATE REQUESTED DATE
         BAL   R14,FORMAT              FORMAT THE DATE FIELDS
         MVC   0(2,R3),YY              INSERT "YY"
         MVC   2(2,R3),DD              INSERT "DD"
         MVC   4(2,R3),MM              INSERT "MM"
         B     XX020220                CONTINUE

XX020190 DS    0H
         BAL   R14,CONVDATE            CALCULATE REQUESTED DATE
         BAL   R14,FORMAT              FORMAT THE DATE FIELDS
         MVC   0(2,R3),YY              INSERT "YY"
         MVC   2(2,R3),MM              INSERT "MM"
         MVC   4(2,R3),DD              INSERT "DD"
         B     XX020220                CONTINUE

XX020200 DS    0H
         BAL   R14,CONVDATE            CALCULATE REQUESTED DATE
         BAL   R14,FORMAT              FORMAT THE DATE FIELDS
         MVC   0(2,R3),DD              INSERT "DD"
         MVC   2(2,R3),MM              INSERT "MM"
         MVC   4(2,R3),YY              INSERT "YY"
         B     XX020220                CONTINUE

XX020210 DS    0H
         BAL   R14,CONVDATE            CALCULATE REQUESTED DATE
         BAL   R14,FORMAT              FORMAT THE DATE FIELDS
         MVC   0(2,R3),MM              INSERT "MM"
         MVC   2(2,R3),DD              INSERT "DD"
         MVC   4(2,R3),YY              INSERT "YY"
         B     XX020220                CONTINUE

*---------------------------------------------------------------------*
*                                                                     *
*        RESTORE SUFFIX, ADVANCE TO NEXT BYTE AND CONTINUE SEARCH     *
*                                                                     *
*---------------------------------------------------------------------*

XX020220 DS    0H
         LH    R1,0(,R6)               LOAD MACHINE LENGTH OF INSERT
         AR    R3,R1                   POINT TO END OF INSERT
         MVC   1(80,R3),WRKREC2        RESTORE DATA TRAILING VARIABLE
         OI    WRKFLAG,WRK$MOD         REMEMBER RECORD WAS MODIFIED

XX020230 DS    0H
         LA    R3,1(,R3)               POINT TO NEXT BYTE IN RECORD
         B     XX020040                CONTINUE TILL END OF STATEMENT

*---------------------------------------------------------------------*
*                                                                     *
*        FREE THE WORKAREA AND EXIT WITH APPROPRIATE RETURN CODE      *
*                                                                     *
*---------------------------------------------------------------------*

XX020240 DS    0H
         TM    WRKFLAG,WRK$MOD         CHECK IF RECORD WAS MODIFIED
         BNO   XX02EXIT                B. IF NOT
         MVC   0(80,R7),WRKREC1        OVERLAY ORIGINAL STATEMENT

XX02EXIT DS    0H
         L     R9,WRKRCODE             SAVE RETURN CODE
         LA    R0,WRKAREAL             SET WORKAREA LENGTH
         SPUTM SIZE=(R0),AREA=(R13)
         LR    R15,R9                  LOAD RETURN CODE
         SEXIT ,                       TERMINATE

*---------------------------------------------------------------------*
*                                                                     *
*        FORMAT THE DATE FROM THE CONVERTED DATE & TIME               *
*                                                                     *
*---------------------------------------------------------------------*

FORMAT   DS    0H
         ST    R14,WRKREG14            SAVE RETURN ADDRESS

         ICM   R0,12,WRKCVTYY          LOAD 0YYF....
         SRL   R0,4                    CONVERT TO 00YYF...
         OI    WRKCVTDD+1,X'0F'        ENSURE DATE IS DDDF
         ICM   R0,3,WRKCVTDD           LOAD DDDF (R0 = 00YYDDDF)
         #DATE WRKDATE,FORMAT='DDD CCYY MM DD DAYOFWEEK',FROM=(0)

         L     R14,WRKREG14            RESTORE RETURN ADDRESS
         BR    R14                     RETURN TO CALLER

*---------------------------------------------------------------------*
*                                                                     *
*        CALCULATE CURRENT DATE BASED ON NUMERIC SUFFIX               *
*                                                                     *
*---------------------------------------------------------------------*

CONVDATE DS    0H
         ST    R14,WRKREG14            SAVE RETURN ADDRESS

         CLI   WRKENDC,C'+'            CHECK FOR VARIABLE+##.
         BNE   CONVD010                B. IF NOT
         AP    WRKCVTDD,WRKVAR#        ADD VARIABLE NUMERIC
         CP    WRKCVTDD,=P'+366'       CHECK FOR "NEXT" YEAR
         BL    CONVDXIT                B. IF NOT
         AP    WRKCVTYY,=P'+1'         ADD TO YEAR
         SP    WRKCVTDD,=P'+365'       SUBTRACT FROM DATE
         B     CONVDXIT

CONVD010 DS    0H
         CLI   WRKENDC,C'-'            CHECK FOR VARIABLE-##.
         BNE   CONVDXIT                B. IF NOT
         SP    WRKCVTDD,WRKVAR#        SUBTRACT VARIABLE NUMERIC
         CP    WRKCVTDD,=P'+0'         CHECK FOR "LAST" YEAR
         BH    CONVDXIT                B. IF NOT
         SP    WRKCVTYY,=P'+1'         SUBTRACT FROM YEAR
         AP    WRKCVTDD,=P'+365'       ADD TO DATE

CONVDXIT DS    0H
         L     R14,WRKREG14            RESTORE RETURN ADDRESS
         BR    R14                     RETURN TO CALLER

CONVMNTH DS    0H
         LR    R4,R14                  SAVE RETURN ADDRESS
         BAL   R14,FORMAT              FORMAT THE CURRENT DATE

         ST    R4,WRKREG14             SAVE RETURN ADDRESS
         PACK  DBL1,MM                 INSERT "MM"

         CLI   WRKENDC,C'+'            CHECK FOR VARIABLE+##.
         BNE   CONVM020                B. IF NOT
         AP    DBL1,WRKVAR#            ADD VARIABLE NUMERIC
CONVM010 DS    0H
         CP    DBL1,=P'+12'            CHECK IF PAST DECEMBER
         BNH   CONVM040                B. IF NOT
         SP    DBL1,=P'+12'            SUBTRACT 1 YEAR
         B     CONVM010

CONVM020 DS    0H
         CLI   WRKENDC,C'-'            CHECK FOR VARIABLE-##.
         BNE   CONVMXIT                B. IF NOT
         SP    DBL1,WRKVAR#            SUBTRACT VARIABLE NUMERIC
CONVM030 DS    0H
         CP    DBL1,=P'+1'             CHECK IF PAST JANUARY
         BNL   CONVM040                B. IF NOT
         AP    DBL1,=P'+12'            ADD 1 YEAR
         B     CONVM030

CONVM040 DS    0H
         OI    DBL1+7,X'0F'            ENSURE POSITIVE SIGN
         UNPK  MM,DBL1                 INSERT CONVERTED MONTH

CONVMXIT DS    0H
         L     R14,WRKREG14            RESTORE RETURN ADDRESS
         BR    R14                     RETURN TO CALLER

CONVYEAR DS    0H
         ST    R14,WRKREG14            SAVE RETURN ADDRESS

         CLI   WRKENDC,C'+'            CHECK FOR VARIABLE+##.
         BNE   CONVY010                B. IF NOT
         AP    WRKCVTYY,WRKVAR#        ADD VARIABLE NUMERIC
         B     CONVYXIT

CONVY010 DS    0H
         CLI   WRKENDC,C'-'            CHECK FOR VARIABLE-##.
         BNE   CONVYXIT                B. IF NOT
         SP    WRKCVTYY,WRKVAR#        SUBTRACT VARIABLE NUMERIC

CONVYXIT DS    0H
         L     R14,WRKREG14            RESTORE RETURN ADDRESS
         BR    R14                     RETURN TO CALLER

*---------------------------------------------------------------------*
*                                                                     *
*        CONSTANTS & DYNAMIC WORKAREA                                 *
*                                                                     *
*---------------------------------------------------------------------*

         #EXEC ,                       EXECUTED STATEMENTS
         LTORG ,                       LITERAL POOL
XX02TAB1 DS    0F
         DC    AL2(0),CL8'Y       ',AL4(XX020090)
         DC    AL2(1),CL8'MM      ',AL4(XX020100)
         DC    AL2(1),CL8'DD      ',AL4(XX020110)
         DC    AL2(1),CL8'YY      ',AL4(XX020120)
         DC    AL2(2),CL8'DDD     ',AL4(XX020130)
         DC    AL2(2),CL8'DAY     ',AL4(XX020140)
         DC    AL2(2),CL8'DOW     ',AL4(XX020150)
         DC    AL2(3),CL8'CCYY    ',AL4(XX020170)
         DC    AL2(5),CL8'YYDDMM  ',AL4(XX020180)
         DC    AL2(5),CL8'YYMMDD  ',AL4(XX020190)
         DC    AL2(5),CL8'DDMMYY  ',AL4(XX020200)
         DC    AL2(5),CL8'MMDDYY  ',AL4(XX020210)
         DC    AL1(255)

WRKAREA  DSECT ,                       DYNAMIC WORKAREA
         DS    18F                     STANDARD SAVE AREA
DBL1     DS    D                       #DATE WORK AREA #1
DBL2     DS    D                       #DATE WORK AREA #2
WRKCVTYY DS    PL2                     CVT YEAR
WRKCVTDD DS    PL2                     CVT DAY
WRKDATE  DC    C'DDD CCYY MM DD DAYOFWEEK'
DDD      EQU   WRKDATE+00,3            - JULIAN DATE
CCYY     EQU   WRKDATE+04,4            - CENTURY & YEAR
YY       EQU   WRKDATE+06,2            - YEAR
MM       EQU   WRKDATE+09,2            - NUMERIC MONTH OF YEAR
DD       EQU   WRKDATE+12,2            - DAY OF MONTH
DAY      EQU   WRKDATE+15,3            - DAY OF THE WEEK
WRKEND@  DS    F                       VARIABLE NAME ENDING ADDRESS
WRKENDC  DS    C                       VARIABLE NAME ENDING CHARACTER
WRKFLAG  DS    X                       FLAG BYTE
WRK$MOD  EQU   B'10000000'             - RECORD HAS BEEN MODIFIED
WRKRCODE DS    F                       RETURN CODE
WRKREC1  DS    CL160                   RECORD WORK AREA #1
WRKREC2  DS    CL80                    RECORD WORK AREA #2
WRKREG14 DS    F                       SUBROUTINE RETURN ADDRESS
WRKTRTAB DS    XL256                   DYNAMIC TRANSLATE TABLE
WRKVAR#  DS    PL2                     VARIABLE NUMERIC SUFFIX (PACKED)
         DS    0D
WRKAREAL EQU   *-WRKAREA               LENGTH OF WORK AREA

         #DSECTS CVT
         END   ,
