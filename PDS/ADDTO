ADDTO    TITLE '- ADDTO - ADD DATASETS TO CONCATENATION'
*---------------------------------------------------------------------*
*                 |                                                   *
* A D D T O       |      Expand/Shrink A DD's Allocation.             *
*                 |                                                   *
*------------------                                                   *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*    FUNCTION: Expand the list of datasets that are allocated to a    *
*              specific DD statement.                                 *
*              You can also decrease the number of datasets that are  *
*              allocated to a specific DD statement.                  *
*                                                                     *
*       PARMS: ADDTO ddname (dsname-list)                             *
*                           [ NOCREATE ]                              *
*                           [ REMOVE ] | [ FIRST ] | [ LAST ]         *
*                           [ BLKSIZE(size) ]                         *
*                           [ NOMSGS ] | [ VERBOSE ]                  *
*                                                                     *
*    Return Codes:                                                    *
*               0 - Successful                                        *
*               4 - Parse Error                                       *
*               8 - DD Statement Not Found                            *
*              12 - Allocation Error                                  *
*              16 - Command Syntax Error                              *
*              20 - Dsname Not Found (REMOVE)                         *
*                                                                     *
*---------------------------------------------------------------------*

*---------------------------------------------------------------------*
*                                                                     *
*     HISTORY: V001R01  - Initial Version                             *
*              V001R02  - EAV Support                                 *
*              V001R03  - Add "REMOVE" keyword                        *
*              V001R04  - Check for "NOCREATE"                        *
*              V001R05  - Add "FIRST", "LAST" & "VERBOSE"             *
*                                                                     *
*---------------------------------------------------------------------*

         ACONTROL OPTABLE(ZS3)     Assembly OPTCDE Table
         SPLEVEL  SET=6            Specify OS/390 R2 MACRO Format
         SYSSTATE ARCHLVL=2        Assembly Requires z/Architecture
         SYSSTATE OSREL=ZOSV1R13   Assembly Requires z/OS 1.13 or More

*---------------------------------------------------------------------*
*                                                                     *
*        Support Email Address: zOS.JES2@Gmail.com                    *
*                                                                     *
*        V001R03 - #DD13072 - Make CREATE Default, Add "NOCREATE"     *
*        V001R04 - #DD17072 - Build &ADDTO VARIABLE                   *
*        V001R05 - #DD17088 - Support "FIRST" & "LAST"                *
*        V001R06 - #DD18120 - Allow for FIRST/LAST/REMOVE Default     *
*                                                                     *
*---------------------------------------------------------------------*
ADDTO    #START ,                  Start Procedure                     *
               AMODE=CAP31,        Execute In 31-Bit AMode             *
               BASE=(R11,R12),     Use Relative Addressing             *
               COPY=YES,           Generate Copyright Notice           *
               LOC=BELOW,          Indicate 24-Bit WorkArea            *
               REG1=R8,            Save Input Parameter Address        *
               RMODE=ANY,          Execute In 24-Bit Rmode             *
               USING=(CPPL,R8),    Address The Parameter List          *
               WKDSECT=ADDTWRK,    Define WorkArea Name                *
               LEVEL=#V001R06      Modification Level          #DD18120
         USING PSA,0

*---------------------------------------------------------------------*
*                                                                     *
*        Initialize The WorkArea                                      *
*                                                                     *
*---------------------------------------------------------------------*
         MVC   WRKDDNL@(2),=AL2(DCCDDNAM)
         MVC   WRKDDNL@+2(2),=AL2(2)
         MVC   WRKDDN1,=AL2(8)     Set 1st DDName Length
         MVC   WRKDDN1+2(8),BLANKS
         MVC   WRKDDN2,=AL2(8)     Set 2nd DDName Length
         MVC   WRKDDN2+2(8),BLANKS
         LA    R0,WRKDDN
         ST    R0,WRKDDN@          Save DDName Address
         LA    R1,L'WRKDDN
         STH   R1,WRKDDN@+4        Save DDName Length
         LA    R0,WRKDSN
         ST    R0,WRKDSN@          Save DSName Address
         LA    R1,L'WRKDSN
         STH   R1,WRKDSN@+4        Save DSName Length
         LA    R0,WRKVOL
         ST    R0,WRKVOL@          Save Volser Address
         LA    R1,L'WRKVOL
         STH   R1,WRKVOL@+4        Save Volser Length
         MVC   WRKPERM(2),=AL2(DCCPERMC)  Permanent Allocations

*---------------------------------------------------------------------*
*                                                                     *
*        Parse The Input Command Buffer (DDName/DSName List)          *
*                                                                     *
*---------------------------------------------------------------------*
         LA    R1,WRKPPL           A(Parse Parameter List)
         USING PPL,R1
         MVC   PPLUPT,CPPLUPT      Copy UPT Address
         MVC   WRKUPT,CPPLUPT                                  #DD17088
         MVC   PPLECT,CPPLECT      Copy ECT Address
         MVC   WRKECT,CPPLECT                                  #DD17088
         MVC   PPLCBUF,CPPLCBUF    Copy Command Buffer Address
         LA    R0,WRKECB
         ST    R0,PPLECB           Save ECB Address
         MVC   PPLPCL,=A(ADDPCL)   Copy PCL Address
         LA    R0,WRKANS
         ST    R0,PPLANS           Save PDL Return Address
         DROP  R1
         CALLTSSR EP=IKJPARS       Invoke Parse Routine
         LTR   R15,R15             Check Parse Return Code
         JNZ   ADDTERR1            B. If Parse Failed

         L     R7,WRKANS           A(PDL)
         USING IKJPARMD,R7

         CLI   KWCREATE+1,$CREATE  Check For "CREATE" Request  #DD99182
         JNE   ADDT0100            B. If Not                   #DD99182
         CLI   KWOPTS+1,$REMOVE    Check For "REMOVE" Request  #DD99182
         JE    ADDTERR4            B. If Yes (MUT-EXCL)        #DD99182

*---------------------------------------------------------------------*
*                                                                     *
*        Obtain The Current DDName's DSName List                      *
*                                                                     *
*---------------------------------------------------------------------*
ADDT0100 DS    0H                                              #DD99182
         L     R1,DDNAME           A(Specified DDName)
         LH    R2,DDNAME+4         L(Specified DDName)
         MVC   WRKDDN,BLANKS
         #EXEC -R2,MVC,WRKDDN(*-*),0(R1)
         MVC   DCBDDNAM-IHADCB+SYSLIB,WRKDDN
         MVC   WRKDDN1+2(8),WRKDDN

         LA    R2,DCBDDNAM-IHADCB+SYSLIB
         TIOTSCAN DDN=(R2),OK=ADDT0200                         #DD17088

         OI    WRKFLAG1,WRK$CREA   Indicate "CREATE" New DD    #DD17088
         CLI   KWOPTS+1,$REMOVE    Check For "REMOVE"          #DD17088
         JE    ADDTERR2            B. If Yes (Error)           #DD17088
         CLI   KWCREATE+1,$NOCREATE Check For "NOCREATE"       #DD17088
         JE    ADDTERR2            B. If Yes (Error)           #DD17088
         J     ADDT2000            Allocate New Datasets Only  #DD17088

ADDT0200 DS    0H                                              #DD17088
         OI    ARLOPT1,ARLLANY     Return Info Can Be Above The Line
         RDJFCB SYSLIB             Get Currently Allocated DSName List
         LTR   R15,R15             Check If Information Returned
         JNZ   ADDTERR2            B. If Not

*---------------------------------------------------------------------*
*                                                                     *
*        IF "REMOVE" CHECK THAT ALL DATASETS ARE WITHIN DD.           *
*                                                                     *
*---------------------------------------------------------------------*
ADDT0300 DS    0H                                              #DD17088
         CLI   KWOPTS+1,$REMOVE    Check For "REMOVE"          #DD17088
         JNE   ADDT0700            B. If Not                   #DD17088
         LA    R9,DSNAMES          A(DSName List)              #DD17088

ADDT0400 DS    0H                                              #DD17088
         L     R1,0(,R9)           A(DSName)                   #DD17088
         LH    R2,4(,R9)           L(DSName)                   #DD17088
         MVC   WRKDSN2,BLANKS                                  #DD17088
         #EXEC -R2,MVC,WRKDSN2(*-*),0(R1)                      #DD17088

         L     R5,ARLAREA          A(1st Element)              #DD17088
         LH    R6,ARLRTRVD         #(Returned Elements)        #DD17088
ADDT0500 DS    0H                                              #DD17088
         LA    R15,4(,R5)          A(Element's JFCB)           #DD17088
         USING JFCB,R15                                        #DD17088
         MVC   WRKDSN,JFCBDSNM     Save Current Dataset Name   #DD17088
         DROP  R15                                             #DD17088
         CLC   WRKDSN,WRKDSN2      Check If DSNname Found      #DD17088
         BE    ADDT0600            B. If Yes                   #DD17088

         LH    R15,0(,R5)          L(Element)                  #DD17088
         LA    R5,0(R15,R5)        A(Next Element)             #DD17088
         BRCT  R6,ADDT0500         Process The Element List    #DD17088
         B     ADDTERR5                                        #DD17088

ADDT0600 DS    0H                                              #DD17088
         CLI   24(R9),X'FF'        Check For End Of List       #DD17088
         JE    ADDT0700            B. If Yes                   #DD17088
         ICM   R9,15,24(R9)        A(Next DSName)              #DD17088
         JNZ   ADDT0400            B. If More Datasets         #DD17088

*---------------------------------------------------------------------*
*                                                                     *
*        CREATE &ADDTO VARIABLE                                       *
*                                                                     *
*---------------------------------------------------------------------*
ADDT0700 DS    0H                                              #DD17088
         MVC   CVARCODE,=A(TSVEUPDT)  "UPDATE"                 #DD17072
         LA    R0,CVARCODE                                     #DD17072
         ST    R0,CVAREC@                                      #DD17072
         MVC   CVARN,=CL8'ADDTO'   Set Variable Name           #DD17072
         LA    R0,CVARN            A(Variable Name)            #DD17072
         ST    R0,CVARN@                                       #DD17072
         LA    R0,CVARN@                                       #DD17072
         ST    R0,CVARNPT@                                     #DD17072
         MVC   CVARL,=F'5'         Set Variable Name Length    #DD17072
         LA    R0,CVARL            A(Variable Name Length)     #DD17072
         ST    R0,CVARNLN@                                     #DD17072
         LA    R0,CVARD@                                       #DD17072
         ST    R0,CVARDPT@                                     #DD17072
         LA    R0,CVARDL           A(Variable Data Length)     #DD17072
         ST    R0,CVARDLN@                                     #DD17072
         LA    R0,CVARTKN          A(Token)                    #DD17072
         ST    R0,CVARTKN@                                     #DD17072
         OI    CVARTKN@,X'80'      Set End Of List             #DD17072

         L     R5,ARLAREA          A(1st Element)              #DD17072
         LH    R6,ARLRTRVD         #(Returned Elements)        #DD17072
         LR    R0,R6                                           #DD17072
         AHI   R0,1                                            #DD17088
         MHI   R0,47               Quoted & Separated          #DD17072
         ST    R0,WRKBUFFL         L(Variable Data)            #DD17088
         GETMAIN RU,LV=(0),LOC=BELOW                           #DD17072
         ST    R1,CVARD@           A(Variable Data)            #DD17072
         ST    R1,WRKBUFF@                                     #DD17072
         LR    R0,R1               A(Variable Data)            #DD17072
         L     R1,WRKBUFFL         L(Variable Data)            #DD17072
         #BLANK (R0),LEN=(R1),PAD=C' '                         #DD17072

         L     R4,CVARD@           A(Start Of Variable Area)   #DD17072
         XC    CVARDL,CVARDL       Initialize Variable Length  #DD17088
         LTR   R6,R6               Check If Any DSNames        #DD17088
         JZ    ADDT0900            B. If Not                   #DD17088
ADDT0800 DS    0H                                              #DD17072
         LA    R15,4(,R5)          A(Element's JFCB)           #DD17072
         USING JFCB,R15                                        #DD17072
         MVI   0(R4),C''''                                     #DD17072
         MVC   1(44,R4),JFCBDSNM   Insert Dataset Name         #DD17072
         DROP  R15                                             #DD17072
         LA    R2,1(,R4)           A(1st Byte)                 #DD17072
         LA    R1,46(,R4)          A(Last Byte)                #DD17072
         SLR   R0,R0                                           #DD17072
         IC    R0,=C' '                                        #DD17072
         SRST  R1,R2               Search For A Blank          #DD17072
         MVI   0(R1),C''''                                     #DD17072
         MVI   1(R1),C','          Insert Separator            #DD17072
         LA    R4,2(,R1)           A(Next Field)               #DD17072

         LH    R15,0(,R5)          L(Element)                  #DD17072
         LA    R5,0(R15,R5)        A(Next Element)             #DD17072
         BRCT  R6,ADDT0800         Process The Element List    #DD17072

         SHI   R4,1                A(Last Separator)           #DD17072
         MVI   0(R4),C' '          Clear It                    #DD17072
         L     R0,CVARD@           A(Start Of Buffer)          #DD17072
         SR    R4,R0               Calculate Used Length       #DD17072
         ST    R4,CVARDL           Save Used Length            #DD17072

ADDT0900 DS    0H                                              #DD17088
         L     R15,FLCCVT          A(CVT)                      #DD17072
         USING CVTMAP,R15                                      #DD17072
         L     R15,CVTTVT          A(TVT)                      #DD17072
         USING TSVT,R15                                        #DD17072
         L     R15,TSVTVACC        A(IKJCT441)                 #DD17072
         DROP  R15                                             #DD17072
         LA    R1,CVARPARM         A(IKJCT441 Parameter List)  #DD17072
         BASR  R14,R15             Call IKJCT441               #DD17072

*---------------------------------------------------------------------*
*                                                                     *
*        If "LAST" Specified Leave Existing Allocation Alone          *
*        And Simply Concatenate The New DSNames To The End.           *
*                                                                     *
*        If "REMOVE" Specified                                        *
*        Re-Allocate The Dsnames From The Original Allocation         *
*        Removing Any That Match The User Specified DSName List.      *
*                                                                     *
*---------------------------------------------------------------------*
         XC    WRKBLKSZ,WRKBLKSZ   Default BLKSIZE=0           #DD17088
         CLI   KWBLKSIZ+1,$BLKSIZE Check For "BLKSIZE(...)"    #DD17088
         JNE   ADDT1000            B. If Not                   #DD17088
         ICM   R0,15,BLKSIZE       Load Specified Value        #DD17088
         STCM  R0,3,WRKBLKSZ       Save Specified Value        #DD17088
ADDT1000 DS    0H                                              #DD17088
         OI    WRKFLAG1,WRK$ALLO   Remember DD Started         #DD17088
         CLI   KWOPTS+1,0          Check For "DEFAULT"         #DD18120
         JNE   ADDT1050            B. If Not (Do As Specified) #DD18120
         MVI   KWOPTS+1,$FIRST     Set Default to "FIRST"      #DD18120
ADDT1050 DS    0H                                              #DD18120
         CLI   KWOPTS+1,$LAST      Check For "LAST"            #DD17088
         JE    ADDT1600            B. If Yes (Add To End)      #DD17088

         FREE  PERM,DDN=WRKDDN@    Free The Current Allocations
         NI    WRKFLAG1,255-WRK$ALLO                           #DD17088

*        Re-Allocate Original List Removing Specified Dataset Names
         CLI   KWOPTS+1,$REMOVE    Check For "REMOVE"          #DD99182
         JNE   ADDT2000            B. If Not                   #DD17088

ADDT1100 DS    0H                                              #DD17088
         ICM   R5,15,ARLAREA       A(1st Element)              #DD17088
         JZ    ADDT2700            B. If No Previous Datasets  #DD17088
         SLR   R6,R6                                           #DD17088
         ICM   R6,3,ARLRTRVD       #(Returned Elements)        #DD17088
         JZ    ADDT2700                                        #DD17088
ADDT1200 DS    0H                                              #DD99182
         LA    R15,4(,R5)          A(Element's JFCB)           #DD99182
         USING JFCB,R15                                        #DD99182
         MVC   WRKDSN,JFCBDSNM     Copy The Dataset Name       #DD99182
         MVC   WRKVOL,JFCBVOLS                                 #DD99182
         DROP  R15                                             #DD99182
         BAS   R14,CHECKDSN        Process This DSName         #DD99182
         LTR   R15,R15             Check If To Be "REMOVED"    #DD99182
         JZ    ADDT1300            B. If Not (Allocate It)     #DD99182

         LH    R15,0(,R5)          L(Element)                  #DD99182
         LA    R5,0(R15,R5)        A(Next Element)             #DD99182
         BRCT  R6,ADDT1200         Process The Element List    #DD99182
         J     ADDT2700            B. If Done Original List    #DD17088

ADDT1300 DS    0H                                              #DD99182
         ALLOC PERM,DDN=WRKDDN@,BLKSIZE=WRKBLKSZ,              #DD17088*
               DSN=WRKDSN@,VOL=WRKVOL@,UNIT='SYSALLDA',DISP=SHR, D99182*
               ERROR=ADDTERR3                                  #DD17088
         OI    WRKFLAG1,WRK$ALLO   Remember DD Started         #DD17088

         LH    R15,0(,R5)          L(Element)                  #DD99182
         LA    R5,0(R15,R5)        A(Next Element)             #DD99182
         CHI   R6,1                Check For Last Element      #DD17088
         JE    ADDT2700            B. If List Exhausted        #DD17088
         SHI   R6,1                Subtract 1 From Count       #DD17088

ADDT1400 DS    0H                                              #DD17088
         LA    R15,4(,R5)          A(Element's JFCB)           #DD17088
         USING JFCB,R15                                        #DD17088
         MVC   WRKDSN,JFCBDSNM     Copy The Dataset Name       #DD17088
         MVC   WRKVOL,JFCBVOLS     Copy The Volser             #DD17088
         DROP  R15                                             #DD17088

         BAS   R14,CHECKDSN        Process This DSName         #DD17088
         LTR   R15,R15             Check If To Be "REMOVED"    #DD17088
         JNZ   ADDT1500            B. If Yes (Don't CONCAT)    #DD17088

         ALLOC PERM,DDNTO=WRKDDN2+2,                           #DD17088*
               DSN=WRKDSN@,VOL=WRKVOL@,UNIT='SYSALLDA',DISP=SHR, D17088*
               ERROR=ADDTERR3                                  #DD17088
         ALLOC VERB=S99VRBCC,TU=(WRKDDNL@,WRKPERM),            #DD17088*
               ERROR=ADDTERR3                                  #DD17088

ADDT1500 DS    0H                                              #DD17088
         LH    R15,0(,R5)          L(Element)                  #DD17088
         LA    R5,0(R15,R5)        A(Next Element)             #DD17088
         BRCT  R6,ADDT1400         Process The Element List    #DD17088
         J     ADDT2700                                        #DD17088

*        Concatenate Specified Dataset Names To End Of Existing List.
ADDT1600 DS    0H                                              #DD17088
         LA    R5,DSNAMES          A(New DSName List)          #DD17088
         TM    WRKFLAG1,WRK$ALLO   Check If DDName Allocated   #DD17088
         JO    ADDT1800            B. If Yes                   #DD17088
         ALLOC PERM,DDN=WRKDDN@,BLKSIZE=WRKBLKSZ,              #DD17088*
               DSN=(R5),DISP=SHR,                              #DD17088*
               ERROR=ADDTERR3                                  #DD17088
         OI    WRKFLAG1,WRK$ALLO   Remember DD Started         #DD17088

         CLI   KWMSGS+1,$VERBOSE   Check For "VERBOSE"         #DD17088
         JNE   ADDT1700            B. If Not                   #DD17088
         MVC   WRKINS1(T002IDSL),T002IDS                       #DD17088
         MVC   WRKINS1+4(44),BLANKS                            #DD17088
         L     R1,0(,R5)           A(DSName)                   #DD17088
         LH    R2,4(,R5)           L(DSName)                   #DD17088
         #EXEC -R2,MVC,WRKINS1+4(*-*),0(R1)                    #DD17088
         LA    R1,WRKINS1                                      #DD17088
         BAS   R14,FIXLEN          Update Insert Length        #DD17088
         MVC   WRKINS2(T002IDDL),T002IDD                       #DD17088
         MVC   WRKINS2+4(8),WRKDDN                             #DD17088
         LA    R1,WRKINS2                                      #DD17088
         BAS   R14,FIXLEN          Update Insert Length        #DD17088
         LA    R0,3                Indicate 3 Segments         #DD17088
         LA    R1,ADDT002I         A(Message Text)             #DD17088
         LA    R2,WRKINS1          A(Message Insert #1)        #DD17088
         LA    R3,WRKINS2          A(Message Insert #2)        #DD17088
         STM   R0,R3,WRKOLD                                    #DD17088
         BAS   R14,PUTLINE         ADDT002I  added             #DD17088

ADDT1700 DS    0H                                              #DD17088
         CLI   24(R5),X'FF'        Check For End Of List       #DD17088
         JE    ADDT2700            B. If Yes                   #DD17088
         ICM   R5,15,24(R5)        A(Next DSName)              #DD17088
         JZ    ADDT2700            B. If Only The One          #DD17088

ADDT1800 DS    0H                                              #DD17088
         ALLOC PERM,DDNTO=WRKDDN2+2,                           #DD17088*
               DSN=(R5),DISP=SHR,                              #DD17088*
               ERROR=ADDTERR3                                  #DD17088
         ALLOC VERB=S99VRBCC,TU=(WRKDDNL@,WRKPERM),            #DD17088*
               ERROR=ADDTERR3                                  #DD17088

         CLI   KWMSGS+1,$VERBOSE   Check For "VERBOSE"         #DD17088
         JNE   ADDT1900            B. If Not                   #DD17088
         MVC   WRKINS1(T002IDSL),T002IDS                       #DD17088
         MVC   WRKINS1+4(44),BLANKS                            #DD17088
         L     R1,0(,R5)           A(DSName)                   #DD17088
         LH    R2,4(,R5)           L(DSName)                   #DD17088
         #EXEC -R2,MVC,WRKINS1+4(*-*),0(R1)                    #DD17088
         LA    R1,WRKINS1                                      #DD17088
         BAS   R14,FIXLEN          Update Insert Length        #DD17088
         MVC   WRKINS2(T002IDDL),T002IDD                       #DD17088
         MVC   WRKINS2+4(8),WRKDDN                             #DD17088
         LA    R1,WRKINS2                                      #DD17088
         BAS   R14,FIXLEN          Update Insert Length        #DD17088
         LA    R0,3                Indicate 3 Segments         #DD17088
         LA    R1,ADDT002I         A(Message Text)             #DD17088
         LA    R2,WRKINS1          A(Message Insert #1)        #DD17088
         LA    R3,WRKINS2          A(Message Insert #2)        #DD17088
         STM   R0,R3,WRKOLD                                    #DD17088
         BAS   R14,PUTLINE         ADDT002I  added             #DD17088

ADDT1900 DS    0H                                              #DD17088
         CLI   24(R5),X'FF'        Check For End Of List       #DD17088
         JE    ADDT2700            B. If Yes                   #DD17088
         ICM   R5,15,24(R5)        A(Next DSName)              #DD17088
         JNZ   ADDT1800            B. If Another DSName        #DD17088
         J     ADDT2700                                        #DD17088

*---------------------------------------------------------------------*
*                                                                     *
*        If "FIRST" Specified                                         *
*        Allocate The New DSNames                                     *
*        And Concatenate The Old DSNames To The End.                  *
*                                                                     *
*---------------------------------------------------------------------*
ADDT2000 DS    0H                                              #DD17088
         LA    R5,DSNAMES          A(New DSName List)          #DD17088
         ALLOC PERM,DDN=WRKDDN@,BLKSIZE=WRKBLKSZ,              #DD17088*
               DSN=(R5),DISP=SHR,                              #DD17088*
               ERROR=ADDTERR3                                  #DD17088
         OI    WRKFLAG1,WRK$ALLO   Remember DD Started         #DD17088

         CLI   KWMSGS+1,$VERBOSE   Check For "VERBOSE"         #DD17088
         JNE   ADDT2100            B. If Not                   #DD17088
         MVC   WRKINS1(T002IDSL),T002IDS                       #DD17088
         MVC   WRKINS1+4(44),BLANKS                            #DD17088
         L     R1,0(,R5)           A(DSName)                   #DD17088
         LH    R2,4(,R5)           L(DSName)                   #DD17088
         #EXEC -R2,MVC,WRKINS1+4(*-*),0(R1)                    #DD17088
         LA    R1,WRKINS1                                      #DD17088
         BAS   R14,FIXLEN          Update Insert Length        #DD17088
         MVC   WRKINS2(T002IDDL),T002IDD                       #DD17088
         MVC   WRKINS2+4(8),WRKDDN                             #DD17088
         LA    R1,WRKINS2                                      #DD17088
         BAS   R14,FIXLEN          Update Insert Length        #DD17088
         LA    R0,3                Indicate 3 Segments         #DD17088
         LA    R1,ADDT002I         A(Message Text)             #DD17088
         LA    R2,WRKINS1          A(Message Insert #1)        #DD17088
         LA    R3,WRKINS2          A(Message Insert #2)        #DD17088
         STM   R0,R3,WRKOLD                                    #DD17088
         BAS   R14,PUTLINE         ADDT002I  added             #DD17088

ADDT2100 DS    0H                                              #DD17088
         CLI   DSNAMES+24,X'FF'    Check For End Of List
         JE    ADDT2400            B. If Yes
         ICM   R5,15,DSNAMES+24    A(Next DSName)
         JZ    ADDT2400            B. If Only The One

ADDT2200 DS    0H
         ALLOC PERM,DDNTO=WRKDDN2+2,                                   *
               DSN=(R5),DISP=SHR,                                      *
               ERROR=ADDTERR3
         ALLOC VERB=S99VRBCC,TU=(WRKDDNL@,WRKPERM),                    *
               ERROR=ADDTERR3

         CLI   KWMSGS+1,$VERBOSE   Check For "VERBOSE"         #DD17088
         JNE   ADDT2300            B. If Not                   #DD17088
         MVC   WRKINS1(T002IDSL),T002IDS                       #DD17088
         MVC   WRKINS1+4(44),BLANKS                            #DD17088
         L     R1,0(,R5)           A(DSName)                   #DD17088
         LH    R2,4(,R5)           L(DSName)                   #DD17088
         #EXEC -R2,MVC,WRKINS1+4(*-*),0(R1)                    #DD17088
         LA    R1,WRKINS1                                      #DD17088
         BAS   R14,FIXLEN          Update Insert Length        #DD17088
         MVC   WRKINS2(T002IDDL),T002IDD                       #DD17088
         MVC   WRKINS2+4(8),WRKDDN                             #DD17088
         LA    R1,WRKINS2                                      #DD17088
         BAS   R14,FIXLEN          Update Insert Length        #DD17088
         LA    R0,3                Indicate 3 Segments         #DD17088
         LA    R1,ADDT002I         A(Message Text)             #DD17088
         LA    R2,WRKINS1          A(Message Insert #1)        #DD17088
         LA    R3,WRKINS2          A(Message Insert #2)        #DD17088
         STM   R0,R3,WRKOLD                                    #DD17088
         BAS   R14,PUTLINE         ADDT002I  added             #DD17088

ADDT2300 DS    0H                                              #DD17088
         CLI   24(R5),X'FF'        Check For End Of List
         JE    ADDT2400            B. If Yes
         ICM   R5,15,24(R5)        A(Next DSName)
         JNZ   ADDT2200            B. If Another DSName Specified

ADDT2400 DS    0H
         ICM   R5,15,ARLAREA       A(1st Element)              #DD17088
         JZ    ADDT2700                                        #DD17088
         SLR   R6,R6                                           #DD17088
         ICM   R6,3,ARLRTRVD       #(Returned Elements)        #DD17088
         JZ    ADDT2700                                        #DD17088
ADDT2500 DS    0H
         LA    R15,4(,R5)          A(Element's JFCB)
         USING JFCB,R15
         MVC   WRKDSN,JFCBDSNM     Copy The Dataset Name
         MVC   WRKVOL,JFCBVOLS     Copy The Volser
         DROP  R15

         BAS   R14,CHECKDSN        Process This DSName         #DD99182
         LTR   R15,R15             Check If To Be "REMOVED"    #DD99182
         JNZ   ADDT2600            B. If Yes (Don't Concat)    #DD99182

         ALLOC PERM,DDNTO=WRKDDN2+2,                                   *
               DSN=WRKDSN@,VOL=WRKVOL@,UNIT='SYSALLDA',DISP=SHR,       *
               ERROR=ADDTERR3
         ALLOC VERB=S99VRBCC,TU=(WRKDDNL@,WRKPERM),                    *
               ERROR=ADDTERR3

ADDT2600 DS    0H                                              #DD99182
         LH    R15,0(,R5)          L(Element)
         LA    R5,0(R15,R5)        A(Next Element)
         BRCT  R6,ADDT2500         Process The Element List

*---------------------------------------------------------------------*
*                                                                     *
*        Free The Obtained JFCB List, Parse Storage and Exit.         *
*                                                                     *
*---------------------------------------------------------------------*
ADDT2700 DS    0H                                              #DD17088
         ICM   R3,15,ARLAREA       A(Element Buffer)           #DD17088
         JZ    ADDT2800                                        #DD17088
         SLR   R4,R4
         IC    R4,ARLPOOL          ARL Subpool
         SLR   R5,R5
         ICM   R5,7,ARLRLEN        L(Element Buffer)
         JZ    ADDT2800                                        #DD17088
         FREEMAIN RC,A=(R3),SP=(R4),LV=(R5)

ADDT2800 DS    0H                                              #DD99182
         IKJRLSA WRKANS            Release The PDL Buffer
         J     ADDTEXIT

*---------------------------------------------------------------------*
*                                                                     *
*        Terminate With Appropriate Return Code                       *
*                                                                     *
*---------------------------------------------------------------------*
ADDTERR1 DS    0H
         ST    R15,WRKRC           Save Return Code            #DD17088
         ST    R0,WRKRS            Save Reason Code            #DD17088
         MVC   WRKINS1(T006IRCL),T006IRC                       #DD17088
         UNPK  WRKINS1+4(9),WRKRC(5)                           #DD17088
         TR    WRKINS1+4(8),HEXTABLE-C'0'                      #DD17088
         MVC   WRKINS2(T006IRSL),T006IRS                       #DD17088
         UNPK  WRKINS2+4(9),WRKRS(5)                           #DD17088
         TR    WRKINS2+4(8),HEXTABLE-C'0'                      #DD17088
         LA    R0,3                Indicate 3 Segments         #DD17088
         LA    R1,ADDT006I         A(Message Text)             #DD17088
         LA    R2,WRKINS1          A(Message Insert #1)        #DD17088
         LA    R3,WRKINS2          A(Message Insert #2)        #DD17088
         STM   R0,R3,WRKOLD                                    #DD17088
         BAS   R14,PUTLINE         ADDT006I IKJPARS return     #DD17088
         #SETRC 4                  Indicate "Parse Error'
         J     ADDTEXIT

ADDTERR2 DS    0H
         MVC   WRKINS1(T003IDDL),T003IDD                       #DD17088
         MVC   WRKINS1+4(8),WRKDDN Insert DDName               #DD17088
         LA    R1,WRKINS1                                      #DD17088
         BAS   R14,FIXLEN          Update Insert Length        #DD17088
         LA    R0,2                Indicate 2 Segments         #DD17088
         LA    R1,ADDT003I         A(Message Text)             #DD17088
         LA    R2,WRKINS1          A(Message Insert #1)        #DD17088
         STM   R0,R2,WRKOLD                                    #DD17088
         BAS   R14,PUTLINE         ADDT003I unable to locate   #DD17088
         #SETRC 8                  Indicate Error
         J     ADDTEXIT

ADDTERR3 DS    0H
         S99FAIL ,                 Display Allocation Error Message
         #SETRC 12                 Indicate Error
         J     ADDTEXIT

ADDTERR4 DS    0H                                              #DD99182
         LA    R0,1                Indicate 2 Segments         #DD17088
         LA    R1,ADDT004I         A(Message Text)             #DD17088
         STM   R0,R1,WRKOLD                                    #DD17088
         BAS   R14,PUTLINE         ADDT004I "CREATE"/"REMOVE"  #DD17088
         #SETRC 16                 Indicate Error              #DD99182
         J     ADDTEXIT                                        #DD99182

ADDTERR5 DS    0H                                              #DD99182
         MVC   WRKINS1(T005IDSL),T005IDS                       #DD17088
         MVC   WRKINS1+4(44),WRKDSN2 Current Dataset Name      #DD17088
         LA    R1,WRKINS1                                      #DD17088
         BAS   R14,FIXLEN          Update Insert Length        #DD17088
         MVC   WRKINS2(T005IDDL),T005IDD                       #DD17088
         MVC   WRKINS2+4(8),WRKDDN Current DD Name             #DD17088
         LA    R1,WRKINS2                                      #DD17088
         BAS   R14,FIXLEN          Update Insert Length        #DD17088
         LA    R0,3                Indicate 3 Segments         #DD17088
         LA    R1,ADDT005I         A(Message Text)             #DD17088
         LA    R2,WRKINS1          A(Message Insert #1)        #DD17088
         LA    R3,WRKINS2          A(Message Insert #1)        #DD17088
         STM   R0,R3,WRKOLD                                    #DD17088
         BAS   R14,PUTLINE         ADDT005I dsname not found   #DD17088
         #SETRC 20                 Indicate Error              #DD99182
         J     ADDTEXIT                                        #DD99182

ADDTEXIT DS    0H                                              #DD17072
         ICM   R1,15,WRKBUFF@      A(DSName Buffer)            #DD17072
         JZ    ADDT9999                                        #DD17072
         ICM   R0,15,WRKBUFFL      L(DSName Buffer)            #DD17072
         JZ    ADDT9999                                        #DD17072
         FREEMAIN RU,LV=(0),A=(1)                              #DD17072

ADDT9999 #STOP ,                   Return To Caller

*---------------------------------------------------------------------*
*                                                                     *
*        Check If Dataset Is To Be "REMOVED" From Concatenation.      *
*                                                                     *
*---------------------------------------------------------------------*
CHECKDSN DS    0H                  Start Subroutine            #DD99182
         STM   R0,R15,SUBSAVE1     Save All Registers          #DD99182
         LHI   R9,0                Indicate "Not Found"        #DD99182

         CLI   KWOPTS+1,$REMOVE    Check For "REMOVE"          #DD99182
         JNE   CHECKXIT            B. If Not                   #DD99182

         LA    R5,DSNAMES          A(DSName List)              #DD99182
CHEC0100 DS    0H                                              #DD99182
         L     R4,0(,R5)           A(DSName)                   #DD99182
         LH    R3,4(,R5)           L(DSName)                   #DD99182
         MVC   WRKDSN2,BLANKS                                  #DD99182
         #EXEC -R3,MVC,WRKDSN2(*-*),0(R4)                      #DD99182
         CLC   WRKDSN,WRKDSN2      Check If Dsnames Match      #DD99182
         JNE   CHEC0300            B. If Not                   #DD99182

         CLI   KWMSGS+1,$VERBOSE   Check For "VERBOSE"         #DD17088
         JNE   CHEC0200            B. If Not                   #DD17088
         MVC   WRKINS1(T001IDSL),T001IDS                       #DD17088
         MVC   WRKINS1+4(44),WRKDSN2 Current Dataset Name      #DD17088
         LA    R1,WRKINS1                                      #DD17088
         BAS   R14,FIXLEN          Update Insert Length        #DD17088
         MVC   WRKINS2(T001IDDL),T001IDD                       #DD17088
         MVC   WRKINS2+4(8),WRKDDN Current DD Name             #DD17088
         LA    R1,WRKINS2                                      #DD17088
         BAS   R14,FIXLEN          Update Insert Length        #DD17088
         LA    R0,3                Indicate 3 Segments         #DD17088
         LA    R1,ADDT001I         A(Message Text)             #DD17088
         LA    R2,WRKINS1          A(Message Insert #1)        #DD17088
         LA    R3,WRKINS2          A(Message Insert #2)        #DD17088
         STM   R0,R3,WRKOLD                                    #DD17088
         BAS   R14,PUTLINE         ADDT001I ddname removed     #DD17088

CHEC0200 DS    0H                                              #DD99182
         LHI   R9,4                Indicate "REMOVE" DSName    #DD99182
         J     CHECKXIT                                        #DD99182

CHEC0300 DS    0H                                              #DD99182
         CLI   24(R5),X'FF'        Check For End Of List       #DD99182
         JE    CHECKXIT            B. If DSName Not Found      #DD17088
         ICM   R5,15,24(R5)        A(Next DSName)              #DD99182
         JNZ   CHEC0100            B. If Another Name Exists   #DD99182

CHECKXIT DS    0H                  Return To Caller            #DD99182
         LR    R15,R9                                          #DD15088
         LM    R0,R14,SUBSAVE1     Restore All Registers       #DD99182
         BR    R14                 Return To Caller            #DD99182

*---------------------------------------------------------------------*
*                                                                     *
*        Correct Insert Length.                                       *
*                                                                     *
*---------------------------------------------------------------------*
FIXLEN   DS    0H                  Start Subroutine            #DD17088
         STM   R0,R15,SUBSAVE3     Save All Registers          #DD17088
         LR    R5,R1               A(Start Of Insert)          #DD17088
         SLR   R14,R14                                         #DD17088
         ICM   R14,3,0(R5)         L(Insert Area)              #DD17088
         JZ    FIX00300            B. If Length Is Zero        #DD17088
         AR    R14,R5              A(End Of Insert Area)       #DD17088
         SHI   R14,1               A(Last Byte Of Insert Area) #DD17088
FIX00100 DS    0H                                              #DD17088
         TM    0(R14),X'BF'        Check For Blanks Or Zeros   #DD17088
         JNZ   FIX00200            B. If End Found             #DD17088
         BRCT  R14,FIX00100        Back Up & Keep Looking      #DD17088
FIX00200 DS    0H                                              #DD17088
         AHI   R14,1               A(End Of Insert Text)       #DD17088
         SR    R14,R5              Calculate Insert Length     #DD17088
         STCM  R14,3,0(R5)         L(Used Insert Area)         #DD17088
FIX00300 DS    0H                                              #DD17088
         LM    R0,R14,SUBSAVE3     Restore All Registers       #DD17088
         BR    R14                 Return To Caller            #DD17088

*---------------------------------------------------------------------*
*                                                                     *
*        Output Message To Terminal.                                  *
*                                                                     *
*---------------------------------------------------------------------*
PUTLINE  DS    0H                                              #DD17088
         CLI   KWMSGS+1,$QUIET     Check For "NOMSGS"          #DD17088
         JE    PUTLEXIT                                        #DD17088

         STM   R0,R15,SUBSAVE2     Save All Registers          #DD17088
         L     R2,WRKUPT           A(UPT)                      #DD17088
         L     R3,WRKECT           A(ECT)                      #DD17088
         LA    R4,WRKECB           A(ECB)                      #DD17088
         XC    WRKECB,WRKECB                                   #DD17088
         MVC   PUTLINEL(MODPUTLL),MODPUTL                      #DD17088
         PUTLINE PARM=PUTLINEL,UPT=(R2),ECT=(R3),ECB=(R4),     #DD17088*
               OUTPUT=(WRKOLD,TERM,SINGLE,INFOR),              #DD17088*
               MF=(E,WRKIOPL)                                  #DD17088
         LM    R0,R15,SUBSAVE2     Restore All Registers       #DD17088

PUTLEXIT DS    0H                                              #DD17088
         BR    R14                 Return To Caller            #DD17088

*---------------------------------------------------------------------*
*                                                                     *
*        Constants And WorkArea.                                      *
*                                                                     *
*---------------------------------------------------------------------*
         LTORG ,                   Literal Pool                #DD17088
         #EXEC ,                   Executed Statements         #DD17088

ADDT001I #MSG  'ADDT001I  removed from  successfully.'         #DD17088
T001IDS  #MSG  '_________+_________+_________+_________+____',OFFSET=9
T001IDSL EQU   *-T001IDS                                       #DD17088
T001IDD  #MSG  '________',OFFSET=23                            #DD17088
T001IDDL EQU   *-T001IDD                                       #DD17088

ADDT002I #MSG  'ADDT002I  added to  successfully.'             #DD17088
T002IDS  #MSG  '_________+_________+_________+_________+____',OFFSET=9
T002IDSL EQU   *-T002IDS                                       #DD17088
T002IDD  #MSG  '________',OFFSET=19                            #DD17088
T002IDDL EQU   *-T002IDD                                       #DD17088

ADDT003I #MSG  'ADDT003I unable to locate DD .'                #DD17088
T003IDD  #MSG  '________',OFFSET=29                            #DD17088
T003IDDL EQU   *-T003IDD                                       #DD17088

ADDT004I #MSG  'ADDT004I "CREATE" and "REMOVE" are mutually exclusive.'

ADDT005I #MSG  'ADDT005I  not found in  DD statement.'         #DD17088
T005IDS  #MSG  '_________+_________+_________+_________+____',OFFSET=9
T005IDSL EQU   *-T005IDS                                       #DD17088
T005IDD  #MSG  '________',OFFSET=23                            #DD17088
T005IDDL EQU   *-T005IDD                                       #DD17088

ADDT006I #MSG  'ADDT006I IKJPARS return code X'''', reason code X''''.'
T006IRC  #MSG  '________',OFFSET=31                            #DD17088
T006IRCL EQU   *-T006IRC                                       #DD17088
T006IRS  #MSG  '________',OFFSET=48                            #DD17088
T006IRSL EQU   *-T006IRC                                       #DD17088

MODPUTL  PUTLINE MF=L
MODPUTLL EQU   *-MODPUTL

BLANKS   DC    CL256' '            Lots Of Blanks
SYSLIB   DCB   DSORG=PO,DDNAME=*-*,MACRF=R,EXLST=EXITLIST,             *
               DCBE=SYSLDCBE                                   #DD12062
SYSLDCBE DCBE  EADSCB=OK                                       #DD12062
EXITLIST DS    0F
         DC    X'93',AL3(DDARL)    "LIST" RDJFCB Exit (Obtain ARL)
DDARL    DS    0F
         IHAARL DSECT=NO           Allocation Retrieval List

HEXTABLE DC    C'0123456789ABCDEF'                             #DD17088

         #STARTWA PATCH=NO
SUBSAVE1 DS    16F                 Subroutine Save Area        #DD99182
SUBSAVE2 DS    16F                 Subroutine Save Area        #DD17088
SUBSAVE3 DS    16F                 Subroutine Save Area        #DD17088

PUTLINEL PUTLINE MF=L              Putline Parameter List      #DD17088

         DYNSPACE ,                Dynamic Allocation Work Area
WRKRC    DS    F                   Return Code                 #DD17088
WRKRS    DS    F                   Reason Code                 #DD17088
WRKFLAG1 DS    X                   General Flag Byte #1        #DD99182
WRK$CREA EQU   X'80'   1... ....   - Create New File Only      #DD99182
WRK$ALLO EQU   X'40'   .1.. ....   - DDName Allocation Started #DD17088
WRKANS   DS    F                   Parse Answer Buffer
WRKPERM  DS    AL2,AL2
WRKDDNL@ DS    AL2,AL2             DDName List Address/Count
WRKDDN1  DS    AL2,CL8             DDName Length / DDName
WRKDDN2  DS    AL2,CL8             DDName Length / DDName
WRKDDN@  DS    A,AL2               DDName Address/Length
WRKDDN   DS    CL8                 DDName
WRKDSN@  DS    A,AL2               DSName Address/Length
WRKDSN   DS    CL44                DSName
WRKDSN2  DS    CL44                Specified DSName            #DD99182
WRKUPT   DS    A                   A(UPT)                      #DD17088
WRKECT   DS    A                   A(ECT)                      #DD17088
WRKECB   DS    F                   Parse ECB
WRKIOPL  DS    7F                  IOPL                        #DD17088
WRKOLD   DS    4F                  Output Line Descriptor      #DD17088
WRKPPL   DS    7F                  Parse Parameter List
WRKVOL@  DS    A,AL2               Volser Address/Length
WRKVOL   DS    CL6                 Volser

WRKBLKSZ DS    AL2                 Blksize                     #DD17088

WRKBUFF@ DS    A                   A(Dsname Buffer)            #DD17072
WRKBUFFL DS    F                   L(Dsname Buffer)            #DD17072

CVARPARM DS    0D                  IKJCT441 Parameter List     #DD17072
CVAREC@  DS    A                   A(Entry Code)               #DD17072
CVARNPT@ DS    A                   A(Variable Name Pointer)    #DD17072
CVARNLN@ DS    A                   A(Variable Name Length Pointer) 7072
CVARDPT@ DS    A                   A(Variable Data)            #DD17072
CVARDLN@ DS    A                   A(Variable Data Length)     #DD17072
CVARTKN@ DS    A                   A(Token)                    #DD17072
CVARCODE DS    F                   Entry Code                  #DD17072
CVARN@   DS    A                   A(Variable Name)            #DD17072
CVARN    DS    CL8                 Variable Name               #DD17072
CVARL    DS    F                   Variable Name Length        #DD17072
CVARD@   DS    A                   A(Variable Data)            #DD17072
CVARDL   DS    F                   L(Variable Data)            #DD17072
CVARTKN  DS    D                   Token                       #DD17072

WRKINS1  DS    A,CL256             Message Insert Area         #DD17088
WRKINS2  DS    A,CL256             Message Insert Area         #DD17088
         #STOPWA ,

*---------------------------------------------------------------------*
*                                                                     *
*        Parse Parameter List                                         *
*                                                                     *
*---------------------------------------------------------------------*
ADDPCL   IKJPARM ,
DDNAME   IKJPOSIT DSNAME,DDNAM,                                        *
               PROMPT='Current DDName',                                *
               HELP='Name Of Currently Allocated DD'

DSNAMES  IKJPOSIT DSNAME,USID,LIST,                                    *
               PROMPT='New DSName(s)',                                 *
               HELP='Name Of Dataset(s) To Be Added'

KWCREATE IKJKEYWD ,                                            #DD99182
         IKJNAME 'CREATE'                                      #DD99182
         IKJNAME 'NOCREATE'                                    #DD13072
$CREATE  EQU   1                                               #DD17088
$NOCREATE EQU  2                                               #DD17088

KWBLKSIZ IKJKEYWD ,
         IKJNAME 'BLKSIZE',SUBFLD=SUBFLD1
$BLKSIZE EQU   1                                               #DD17088

KWOPTS   IKJKEYWD ,                                            #DD99182
         IKJNAME 'REMOVE',ALIAS='DELETE'                       #DD99182
         IKJNAME 'FIRST',ALIAS=('BEFORE','FRONT')              #DD17088
         IKJNAME 'LAST',ALIAS=('AFTER','END')                  #DD17088
$REMOVE  EQU   1                                               #DD17088
$FIRST   EQU   2                                               #DD17088
$LAST    EQU   3                                               #DD17088

KWMSGS   IKJKEYWD ,                                            #DD17088
         IKJNAME 'QUIET',ALIAS='NOMSGS'                        #DD17088
         IKJNAME 'VERBOSE',ALIAS='MSGS'                        #DD17088
$QUIET   EQU   1                                               #DD17088
$VERBOSE EQU   2                                               #DD17088

SUBFLD1  IKJSUBF ,
BLKSIZE  IKJIDENT 'BLKSIZE',INTEG,                                     *
               HELP='BLKSIZE Of The Largest Dataset (Or Greater)'
         IKJENDP ,

*---------------------------------------------------------------------*
*                                                                     *
*        DSECTS                                                       *
*                                                                     *
*---------------------------------------------------------------------*
         #DSECTS ALLOC,CVT,DCB,JFCB,TSO,PSA
*        IKJEFFDF DFDSECT=YES,DFDSEC2=YES                      #DD17088
         IKJTSVT ,           TSO Vector Table                  #DD17072
         END   ,
