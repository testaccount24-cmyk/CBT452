*-------
*
*        Check if a STEPLIB was created by the TSO STEPLIB command
*
*-------
         ACONTROL OPTABLE(ZS3)     Assembly OPTCDE Table
         SPLEVEL  SET=6            Specify OS/390 R2 macro format
         SYSSTATE ARCHLVL=2        Assembly requires z/Architecture
         SYSSTATE OSREL=ZOSV1R13   Assembly requires z/OS 1.13 & higher

$TEPTERM #START AMODE=31,RMODE=ANY,                                    *
               BASE=RELATIVE,                                          *
               CONSTANT=R12,                                           *
               COPY=YES,                                               *
               WKDSECT=$TEPWRK,SP=230,LOC=BELOW,STORAGE=YES,           *
               REG1=R8,                                                *
               USING=(PSA,0,PLIST,R8),                                 *
               #REGS=BOTH,         Define Standard & AR Registers      *
               LEVEL=#V001R00      Mainteinence Level          #DD16124

*-------
*        Check For "Step Total" (Step Term) IEFACTRT Call
*-------
         CHI   R0,X'14'            Check For "Job/Step Term"
         JNE   TRT00400            B. If Not
         ICM   R10,15,P1SMF        A(SMF 30 Record)
         JZ    TRT00400            B. If Not Available
         USING SMFRCD30,R10

         CLC   SMF30STP,=AL2(4)    "Step Total" Call ?
         JNE   TRT00400            B. If Not
         DROP  R10

*-------
*        Check If This Is A BATCH Job
*-------
         ICM   R15,15,PSATOLD      A(TCB)
         JZ    TRT00400            B. If Not Available
         USING TCB,R15
         ICM   R14,15,TCBJSCB      A(JSCB)
         JZ    TRT00400            B. If Not Available
         USING IEZJSCB,R14
         ICM   R14,15,JSCBACT      A(Active JSCB)
         JZ    TRT00400            B. If Not Available
         ICM   R14,15,JSCBSSIB     A(SSIB)
         JZ    TRT00400            B. If Not Available
         USING SSIB,R14

         CLI   SSIBJBID,C'J'       Check For Batch Job
         JNE   TRT00400            B. If Not

         DROP  R14,R15

*-------
*        Check Level Of Operating System
*-------
         L     R15,FLCCVT          A(CVT)
         USING CVTMAP,R15
         TM    CVTOSLV5,CVTZOS_V1R12
         JZ    TRT00100            B. If Not z/OS R1.12 or >
         OI    WRKFLAG1,WRK$R112   Set z/OS R1.12 flag
         DROP  R15

*-------
*        Check If There Is Currently A Dynamic STEPLIB Allocated
*-------
TRT00100 DS    0H
         ICM   R4,15,PSATOLD       A(TCB)
         JZ    TRT00400            B. If Not Available
         USING TCB,R4
         ICM   R2,15,TCBJLB        A(STEPLIB DCB)
         JZ    TRT00400            B. If One Does Not Exist
         USING DCB,R2

         TM    DCBOFLGS,DCBOFOPN   Check If STEPLIB is OPEN
         JZ    TRT00200            B. If Not
         MVC   WRKCLOSE,MODLCLOS   Format Close Parameter List
         CLOSE ((R2)),MF=(E,WRKCLOSE)

TRT00200 DS    0H
         CLC   =C'$TEP',DCBDDNAM   Check For $TEPnnnn DDName
         JNE   TRT00400            B. If Not
         MVC   WRKDDNM,DCBDDNAM    Save STEPLIB DDName
         DROP  R2

*-------
*        Release The STEPLIB Storage
*-------
         LHI   R3,MODLDCBL         Pre r1.12 DCB Length
         TM    WRKFLAG1,WRK$R112   Check if z/OS R1.12 or >
         JNO   TRT00300            B. If Not
         AHI   R3,MODDCBEL         Add DCBE Length

TRT00300 DS    0H
         STORAGE RELEASE,ADDR=(R2),SP=253,LENGTH=(R3),                 *
               CALLRKY=YES,TCBADDR=TCBJSTCB
         DROP  R4

         MVC   MSGBUFF(MSG0001L),MSG0001
         MVC   MSG0001A+MSGBUFF,WRKDDNM
         #ICALL QMESSAGE           Write Message To SYSMSGS

*-------
*        Terminate
*-------
TRT00400 DS    0H
         ICM   R0,15,@TB723
         JZ    TRTEXIT
         DELETE EP=IEFTB723
         XC    @TB723,@TB723

TRTEXIT  #STOP RC=0                Terminate Exit Routine
         TITLE 'QMESSAGE - CALL IEFTB723'
*-------
*        CALL IEFTB723 TO QUEUE MESSAGE TO SYSMSGS.
*-------
QMESSAGE #IPROC ,
         ICM   R0,15,@TB723        IEFTB723 AVAILABLE?
         JNZ   QMSG0100            B. IF NOT
         LOAD  EP=IEFTB723,ERRET=QMSGEXIT
         ST    R0,@TB723           Save IEFTB723 Address

QMSG0100 DS    0H
         L     R14,PSATOLD         A(TCB)
         USING TCB,R14
         L     R14,TCBTCT          A(TCT)
         USING SMFTCT,R14
         L     R14,TCTLCTAD        A(LCT)
         USING LCT,R14
         LA    R1,MSGBUFF+2        Set Address Of Message
         ST    R1,LCTPARM1
         LH    R15,MSGBUFF         Set Length Of Message
         STH   R15,LCTPARM2+2

         LR    R5,R12              Save R12
         LR    R12,R14             A(LCT)
         L     R15,@TB723          Call IEFTB723 To Queue
         BASSM R14,R15             . Message To JESYSMSG
         LR    R12,R5              Restore R12

QMSGEXIT #IPEND ,

         #CON  START
         LTORG ,                   Literal Pool
         #EXEC ,                   Executed Statements

MODLDCB  DCB   DDNAME=*,DSORG=PO,RECFM=U,MACRF=E
         DS    F                   DCB Exit List (ALA IEFSD164)
MODLDCBL EQU   *-MODLDCB           DCB Length

MODDCBE  DCBE  EADSCB=OK
MODDCBEL EQU   *-MODDCBE           DCBE Length

MODLCLOS CLOSE (*-*),MF=L          Close Parameter List
MODLCLOL EQU   *-MODLCLOS

MSG0001  DC    AL2(L'MSG0001T)
MSG0001T DC    C'$TEP001I ________ closed and storage released.'
MSG0001A EQU   2+9,8               Insert Offset & Length
MSG0001L EQU   *-MSG0001

         #CON  END,PATCH=NO

         #STARTWA ,
         #IPROC MODE=DEFINE

WRKFLAG1 DS    XL1                 Flag Byte #1
WRK$R112 EQU   BIT0   1... ....    - System is z/OS R1.12 or >
         DS    XL3

@TB723   DS    A                   A(IEFTB723 Routine)
WRKDDNM  DS    CL8                 STEPLIB DDName
WRKCLOSE DS    XL(MODLCLOL)        Close Paramter List
MSGBUFF  DS    H,XL133             Formatted Message Buffer
         #STOPWA ,

PLIST    DSECT ,
P1JMR    DS    A   1    +0         Address Of JMR
P1STEPNM DS    A   2    +4         Address Of Step Name, Or Zero
P1PGMRNM DS    A   3    +8         Address Of Programmer Name
P1JCPU   DS    A   4   +12         Address Of Job CPU/Acct Data
P1JACCT  DS    A   5   +16         Address Of Job Acct Fields
P1SCPU   DS    A   6   +20         Address Of Step CPU/Acct Data
P1SACCT  DS    A   7   +24         Address Of Step Acct Fields
P1FLAGS  DS    A   8   +28         Address Of 2 Flag/Status Bytes
P1CMPC   DS    A   9   +32         Address Of Completion Code
P1SMF    DS    A  10   +36         Address Of SMF Record

         #DSECTS CVT,DCB,JMR,JSCB,LCT,PSA,SSIB,TCB,TCT
         IFASMFR 30
         PRINT NOGEN
         END   ,
